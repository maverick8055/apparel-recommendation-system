{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.8.2"
    },
    "colab": {
      "name": "dress-attribute-sales.ipynb",
      "provenance": []
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Jwv6tgfK9tBo"
      },
      "source": [
        "# Overview :\n",
        "This notebook looks into using various Python-based machine learning and data science libraries in an attempt to build a machine learning model capable of predicting the recomendation of a dress  given their atrributes. The dataset used came from the **UCI Machine Learning Repository**.\n",
        "\n",
        "We are going to take the following approach:\n",
        "1. Problem Definition\n",
        "2. Data\n",
        "3. Evaluation\n",
        "4. Features\n",
        "5. Modelling\n",
        "6. Experiments\n",
        "\n",
        "# 1. Problem Definition:\n",
        "In a statement,\n",
        "> Given different attributes of a dress can we predict wether or not the dress will be recommended ?\n",
        "\n",
        "# 2. Data:\n",
        "The original data came from the **UCI Machine Learning Repository : ** https://archive.ics.uci.edu/ml/datasets/Dresses_Attribute_Sales\n",
        "\n",
        "# 3. Evaluation :\n",
        "> We will be evaluating our model based on accuracy between our test and train sets. We will consider the model a succes if our accuracy is at least 93% between the predicted test set target and the original test set target.\n",
        "\n",
        "# 4. Features : \n",
        "### Data Set Information :\n",
        "\n",
        "* Style, Price, Rating, Size, Season, NeckLine, SleeveLength, waiseline, Material, FabricType, Decoration, Pattern, Type, Recommendation are Attributes in dataset.\n",
        "\n",
        "### Attribute Information :\n",
        "* **Style**: Bohemia,brief,casual,cute,fashion,flare,novelty,OL,party,sexy,vintage,work.\n",
        "* **Price**:  Low,Average,Medium,High,Very-High\n",
        "* **Rating**:  1-5\n",
        "* **Size**:  S,M,L,XL,Free\n",
        "* **Season**:  Autumn,winter,Spring,Summer\n",
        "* **NeckLine**:O-neck,backless,board-neck,Bowneck,halter,mandarin-collor,open,peterpan-collor,ruffled,scoop,slash-neck,square-collar,sweetheart,turndowncollar,V-neck.\n",
        "* **SleeveLength**:full,half,halfsleeves,butterfly,sleveless,short,threequarter,turndown,null\n",
        "* **waiseline**:dropped,empire,natural,princess,null.\n",
        "* **Material**:wool,cotton,mix etc\n",
        "* **FabricType**:shafoon,dobby,popline,satin,knitted,jersey,flannel,corduroy etc\n",
        "* **Decoration**:applique,beading,bow,button,cascading,crystal,draped,embroridary,feathers,flowers etc\n",
        "* **Pattern type**: solid,animal,dot,leapard etc\n",
        "* **Recommendation**:0,1"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "VdlZZJfR9tBp"
      },
      "source": [
        "### Importing Required Packages"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "USctuzpu9tBq"
      },
      "source": [
        "# Managing Warings\n",
        "import warnings\n",
        "warnings.filterwarnings('ignore')\n",
        "\n",
        "# Data manipulation\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "\n",
        "# Managing pandas display options\n",
        "pd.set_option('display.float_format', lambda x: '%.5f' % x)\n",
        "pd.set_option('display.max_rows', None)\n",
        "pd.set_option('display.max_rows', None)\n",
        "\n",
        "# Visualization\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import missingno\n",
        "from pandas.plotting import scatter_matrix\n",
        "\n",
        "# Standard import\n",
        "import math\n",
        "\n",
        "# Data Preprocessing\n",
        "from sklearn.preprocessing import OneHotEncoder, LabelEncoder\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "# Models\n",
        "from sklearn.linear_model import LogisticRegression, SGDClassifier\n",
        "from sklearn.neighbors import KNeighborsClassifier\n",
        "from sklearn.svm import LinearSVC\n",
        "from sklearn.tree import DecisionTreeClassifier\n",
        "from sklearn.ensemble import RandomForestClassifier\n",
        "from sklearn.model_selection import RandomizedSearchCV, GridSearchCV\n",
        "from sklearn.ensemble import ExtraTreesClassifier, VotingClassifier\n",
        "from sklearn.ensemble import GradientBoostingClassifier, AdaBoostClassifier\n",
        "from catboost import CatBoostClassifier\n",
        "\n",
        "# Metrics\n",
        "from sklearn.metrics import plot_roc_curve\n",
        "from sklearn.model_selection import cross_val_score\n",
        "from sklearn.metrics import accuracy_score, f1_score, precision_score, recall_score, classification_report\n",
        "\n",
        "\n",
        "# Set-up random seed so that results are reproducible\n",
        "np.random.seed(42)\n",
        "%matplotlib inline"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "MKFI2rtX9tBr"
      },
      "source": [
        "### Let's load in our data"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8cvD0Iba9tBr"
      },
      "source": [
        "df_raw = pd.read_excel('Attribute DataSet.xlsx')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5FacHUMS9tBr"
      },
      "source": [
        "# Let us make a copy of our original dataset so we can't revert back if something goes wrong\n",
        "df = df_raw.copy()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "pkEGRORj9tBs"
      },
      "source": [
        "## Exploratory Data Analysis\n",
        "\n",
        "The goal is to find more about the daata and become a subjectt matter expert on the dataset we're working with.\n",
        "\n",
        "1. What question (s) are you trying to solve?\n",
        "2. What kind of data do we have and how do we treat different types?\n",
        "3. What's missing from the data ad how do we deal with it?\n",
        "4. Where are the outliers and why should you care about them?\n",
        "5. How can you add, change or remove features to get more out of your data?"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Z_rWNro99tBs"
      },
      "source": [
        "When exploring our dataset we have many options availabe to us: \n",
        "> We can **explore each feature individually (Univariate)** or we can **pair different features and work out corrrealtions (Multivariate)**"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "a1FdcSp59tBt"
      },
      "source": [
        "### Before exploring, let us first see the differrent types of features present in our dataset"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZOvt7iYh9tBt",
        "outputId": "d9ebcf5a-a271-4c45-eac8-17902c6d71cd"
      },
      "source": [
        "df.info()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 500 entries, 0 to 499\n",
            "Data columns (total 14 columns):\n",
            " #   Column          Non-Null Count  Dtype  \n",
            "---  ------          --------------  -----  \n",
            " 0   Dress_ID        500 non-null    int64  \n",
            " 1   Style           500 non-null    object \n",
            " 2   Price           498 non-null    object \n",
            " 3   Rating          500 non-null    float64\n",
            " 4   Size            500 non-null    object \n",
            " 5   Season          498 non-null    object \n",
            " 6   NeckLine        497 non-null    object \n",
            " 7   SleeveLength    498 non-null    object \n",
            " 8   waiseline       413 non-null    object \n",
            " 9   Material        372 non-null    object \n",
            " 10  FabricType      234 non-null    object \n",
            " 11  Decoration      264 non-null    object \n",
            " 12  Pattern Type    391 non-null    object \n",
            " 13  Recommendation  500 non-null    int64  \n",
            "dtypes: float64(1), int64(2), object(11)\n",
            "memory usage: 54.8+ KB\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "dxVf5Nd99tBu"
      },
      "source": [
        "**For simplicity, we will now define our features into two types**:\n",
        "    1. Numerical : any feature that contains numeric values.\n",
        "    2. Categorical : any feature that contains categories, or text."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "1eO9RL7r9tBu"
      },
      "source": [
        "### Data Exploration - Univariate\n",
        "Let's start with simple Univariate(one feature analysis)"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DkQgMWWc9tBv",
        "outputId": "c6706ed6-93e4-4b1c-8d00-d4418b937709"
      },
      "source": [
        "# Describe all numerical features\n",
        "df.describe().T"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "      <th>mean</th>\n",
              "      <th>std</th>\n",
              "      <th>min</th>\n",
              "      <th>25%</th>\n",
              "      <th>50%</th>\n",
              "      <th>75%</th>\n",
              "      <th>max</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Dress_ID</th>\n",
              "      <td>500.00000</td>\n",
              "      <td>905541681.05000</td>\n",
              "      <td>173618960.65394</td>\n",
              "      <td>444282011.00000</td>\n",
              "      <td>767316420.00000</td>\n",
              "      <td>908329553.00000</td>\n",
              "      <td>1039533963.50000</td>\n",
              "      <td>1253973206.00000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Rating</th>\n",
              "      <td>500.00000</td>\n",
              "      <td>3.52860</td>\n",
              "      <td>2.00536</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>3.70000</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>5.00000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Recommendation</th>\n",
              "      <td>500.00000</td>\n",
              "      <td>0.42000</td>\n",
              "      <td>0.49405</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>1.00000</td>\n",
              "      <td>1.00000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                   count            mean             std  ...             50%              75%              max\n",
              "Dress_ID       500.00000 905541681.05000 173618960.65394  ... 908329553.00000 1039533963.50000 1253973206.00000\n",
              "Rating         500.00000         3.52860         2.00536  ...         4.60000          4.80000          5.00000\n",
              "Recommendation 500.00000         0.42000         0.49405  ...         0.00000          1.00000          1.00000\n",
              "\n",
              "[3 rows x 8 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 101
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "o528tFKT9tBv",
        "outputId": "20766a6d-b2ca-46ad-fcb0-59879333658f"
      },
      "source": [
        "# Describe all categorical features\n",
        "df.describe(include=['O']).T"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "      <th>unique</th>\n",
              "      <th>top</th>\n",
              "      <th>freq</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Style</th>\n",
              "      <td>500</td>\n",
              "      <td>13</td>\n",
              "      <td>Casual</td>\n",
              "      <td>232</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Price</th>\n",
              "      <td>498</td>\n",
              "      <td>7</td>\n",
              "      <td>Average</td>\n",
              "      <td>252</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Size</th>\n",
              "      <td>500</td>\n",
              "      <td>7</td>\n",
              "      <td>M</td>\n",
              "      <td>177</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Season</th>\n",
              "      <td>498</td>\n",
              "      <td>8</td>\n",
              "      <td>Summer</td>\n",
              "      <td>159</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NeckLine</th>\n",
              "      <td>497</td>\n",
              "      <td>16</td>\n",
              "      <td>o-neck</td>\n",
              "      <td>271</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SleeveLength</th>\n",
              "      <td>498</td>\n",
              "      <td>17</td>\n",
              "      <td>sleevless</td>\n",
              "      <td>223</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>waiseline</th>\n",
              "      <td>413</td>\n",
              "      <td>4</td>\n",
              "      <td>natural</td>\n",
              "      <td>304</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Material</th>\n",
              "      <td>372</td>\n",
              "      <td>23</td>\n",
              "      <td>cotton</td>\n",
              "      <td>152</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>FabricType</th>\n",
              "      <td>234</td>\n",
              "      <td>22</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>135</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Decoration</th>\n",
              "      <td>264</td>\n",
              "      <td>24</td>\n",
              "      <td>lace</td>\n",
              "      <td>70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Pattern Type</th>\n",
              "      <td>391</td>\n",
              "      <td>14</td>\n",
              "      <td>solid</td>\n",
              "      <td>203</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "             count unique        top freq\n",
              "Style          500     13     Casual  232\n",
              "Price          498      7    Average  252\n",
              "Size           500      7          M  177\n",
              "Season         498      8     Summer  159\n",
              "NeckLine       497     16     o-neck  271\n",
              "SleeveLength   498     17  sleevless  223\n",
              "waiseline      413      4    natural  304\n",
              "Material       372     23     cotton  152\n",
              "FabricType     234     22    chiffon  135\n",
              "Decoration     264     24       lace   70\n",
              "Pattern Type   391     14      solid  203"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 102
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "k5mRNOYp9tBv",
        "outputId": "7a008be9-c4fb-4e7e-90e2-d14fdcf5713c"
      },
      "source": [
        "# Let's check the data types again\n",
        "df.info()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 500 entries, 0 to 499\n",
            "Data columns (total 14 columns):\n",
            " #   Column          Non-Null Count  Dtype  \n",
            "---  ------          --------------  -----  \n",
            " 0   Dress_ID        500 non-null    int64  \n",
            " 1   Style           500 non-null    object \n",
            " 2   Price           498 non-null    object \n",
            " 3   Rating          500 non-null    float64\n",
            " 4   Size            500 non-null    object \n",
            " 5   Season          498 non-null    object \n",
            " 6   NeckLine        497 non-null    object \n",
            " 7   SleeveLength    498 non-null    object \n",
            " 8   waiseline       413 non-null    object \n",
            " 9   Material        372 non-null    object \n",
            " 10  FabricType      234 non-null    object \n",
            " 11  Decoration      264 non-null    object \n",
            " 12  Pattern Type    391 non-null    object \n",
            " 13  Recommendation  500 non-null    int64  \n",
            "dtypes: float64(1), int64(2), object(11)\n",
            "memory usage: 54.8+ KB\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zKpqOUSA9tBw",
        "outputId": "45a11a87-021e-47c7-f51e-e0510fd0da31"
      },
      "source": [
        "# Let's have a quick look at our data\n",
        "df.head(10)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Dress_ID</th>\n",
              "      <th>Style</th>\n",
              "      <th>Price</th>\n",
              "      <th>Rating</th>\n",
              "      <th>Size</th>\n",
              "      <th>Season</th>\n",
              "      <th>NeckLine</th>\n",
              "      <th>SleeveLength</th>\n",
              "      <th>waiseline</th>\n",
              "      <th>Material</th>\n",
              "      <th>FabricType</th>\n",
              "      <th>Decoration</th>\n",
              "      <th>Pattern Type</th>\n",
              "      <th>Recommendation</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1006032852</td>\n",
              "      <td>Sexy</td>\n",
              "      <td>Low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>Summer</td>\n",
              "      <td>o-neck</td>\n",
              "      <td>sleevless</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>animal</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1212192089</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>Summer</td>\n",
              "      <td>o-neck</td>\n",
              "      <td>Petal</td>\n",
              "      <td>natural</td>\n",
              "      <td>microfiber</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>animal</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1190380701</td>\n",
              "      <td>vintage</td>\n",
              "      <td>High</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>Automn</td>\n",
              "      <td>o-neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>polyster</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>966005983</td>\n",
              "      <td>Brief</td>\n",
              "      <td>Average</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>L</td>\n",
              "      <td>Spring</td>\n",
              "      <td>o-neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>silk</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>embroidary</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>876339541</td>\n",
              "      <td>cute</td>\n",
              "      <td>Low</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>Summer</td>\n",
              "      <td>o-neck</td>\n",
              "      <td>butterfly</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffonfabric</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>bow</td>\n",
              "      <td>dot</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>1068332458</td>\n",
              "      <td>bohemian</td>\n",
              "      <td>Low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>Summer</td>\n",
              "      <td>v-neck</td>\n",
              "      <td>sleevless</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>1220707172</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Average</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>Summer</td>\n",
              "      <td>o-neck</td>\n",
              "      <td>full</td>\n",
              "      <td>NaN</td>\n",
              "      <td>cotton</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>1219677488</td>\n",
              "      <td>Novelty</td>\n",
              "      <td>Average</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>free</td>\n",
              "      <td>Automn</td>\n",
              "      <td>o-neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>polyster</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>lace</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>1113094204</td>\n",
              "      <td>Flare</td>\n",
              "      <td>Average</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>free</td>\n",
              "      <td>Spring</td>\n",
              "      <td>v-neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>cotton</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>beading</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>985292672</td>\n",
              "      <td>bohemian</td>\n",
              "      <td>Low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>free</td>\n",
              "      <td>Summer</td>\n",
              "      <td>v-neck</td>\n",
              "      <td>sleevless</td>\n",
              "      <td>natural</td>\n",
              "      <td>nylon</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "     Dress_ID     Style    Price  Rating  ...  FabricType  Decoration Pattern Type Recommendation\n",
              "0  1006032852      Sexy      Low 4.60000  ...     chiffon     ruffles       animal              1\n",
              "1  1212192089    Casual      Low 0.00000  ...         NaN     ruffles       animal              0\n",
              "2  1190380701   vintage     High 0.00000  ...         NaN         NaN        print              0\n",
              "3   966005983     Brief  Average 4.60000  ...     chiffon  embroidary        print              1\n",
              "4   876339541      cute      Low 4.50000  ...     chiffon         bow          dot              0\n",
              "5  1068332458  bohemian      Low 0.00000  ...         NaN         NaN        print              0\n",
              "6  1220707172    Casual  Average 0.00000  ...         NaN         NaN        solid              0\n",
              "7  1219677488   Novelty  Average 0.00000  ...  broadcloth        lace          NaN              0\n",
              "8  1113094204     Flare  Average 0.00000  ...  broadcloth     beading        solid              1\n",
              "9   985292672  bohemian      Low 0.00000  ...     chiffon         NaN          NaN              1\n",
              "\n",
              "[10 rows x 14 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 104
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "QYeAPl9_9tBw"
      },
      "source": [
        "#### Let's plot the distributions of each feature"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yumYNVpT9tBw",
        "outputId": "52d4f044-9956-4c24-9875-cc38200d4091"
      },
      "source": [
        "# Plot Distribution of Numeric Features\n",
        "plt.style.use('seaborn-whitegrid')\n",
        "num_columns = []\n",
        "for label, content in df.items():\n",
        "    if pd.api.types.is_numeric_dtype(content):\n",
        "        num_columns.append(label)\n",
        "fig, (ax1, ax2, ax3) = plt.subplots(nrows=1, ncols=3, figsize=(20, 7))\n",
        "sns.distplot(df[num_columns[0]], ax=ax1, hist_kws={'color': 'Teal'}, kde_kws={'color':'Navy'})\n",
        "sns.distplot(df[num_columns[1]], ax=ax2, hist_kws={'color': 'Teal'}, kde_kws={'color':'Navy'})\n",
        "sns.distplot(df[num_columns[2]], ax=ax3, hist_kws={'color': 'Teal'}, kde_kws={'color':'Navy'});"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 1440x504 with 3 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LlLM2d4y9tBw",
        "outputId": "3393c559-fa74-4627-f615-3939ad10445b"
      },
      "source": [
        "# Plot distribution of Categorical features\n",
        "plt.style.use('seaborn-whitegrid')\n",
        "cat_columns = []\n",
        "for label, content in df.items():\n",
        "    if not pd.api.types.is_numeric_dtype(content):\n",
        "        cat_columns.append(label)\n",
        "cat_columns, len(cat_columns)\n",
        "\n",
        "fig, ((ax1, ax2, ax3),(ax4, ax5, ax6)) = plt.subplots(nrows=2, ncols=3, figsize=(22, 18))\n",
        "sns.countplot(y=df[cat_columns[0]], ax=ax1)\n",
        "sns.countplot(y=df[cat_columns[1]], ax=ax2)\n",
        "sns.countplot(y=df[cat_columns[2]], ax=ax3)\n",
        "sns.countplot(y=df[cat_columns[3]], ax=ax4)\n",
        "sns.countplot(y=df[cat_columns[4]], ax=ax5)\n",
        "sns.countplot(y=df[cat_columns[5]], ax=ax6);"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1584x1296 with 6 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "j07fb9Zn9tBx",
        "outputId": "21bb8475-261c-4890-b83f-ed22991a0566"
      },
      "source": [
        "# Check for missing values in our dataset?\n",
        "missingno.matrix(df, figsize = (30,5));"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 2160x360 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "dO9t-Pba9tBx"
      },
      "source": [
        "We have some missing values. Let's now check where we have our missing values"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UH-Rp4Wd9tBx",
        "outputId": "4fa85ede-bc8c-4b0e-f7e3-d9e46d791fa4"
      },
      "source": [
        "missingno.bar(df, sort='ascending', figsize = (30,5));"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 2160x360 with 3 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "lG03yE0S9tBy"
      },
      "source": [
        "We have missing values in the following columns:\n",
        "* FabricType\n",
        "* Decoration\n",
        "* Material\n",
        "* Pattern Type\n",
        "* waiseline\n",
        "* NeckLine\n",
        "* Price\n",
        "* Season\n",
        "* SleeveLength"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XUwV5YaV9tBy",
        "outputId": "8fef0707-b766-47ba-bab6-98d08f631b08"
      },
      "source": [
        "# Lets check the actual number of missing values\n",
        "df.isna().sum()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Dress_ID            0\n",
              "Style               0\n",
              "Price               2\n",
              "Rating              0\n",
              "Size                0\n",
              "Season              2\n",
              "NeckLine            3\n",
              "SleeveLength        2\n",
              "waiseline          87\n",
              "Material          128\n",
              "FabricType        266\n",
              "Decoration        236\n",
              "Pattern Type      109\n",
              "Recommendation      0\n",
              "dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 109
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "heading_collapsed": true,
        "id": "nmmLnmQJ9tBy"
      },
      "source": [
        "### Feature Cleaning, Enginnering, and Imputation\n",
        "\n",
        "#### Before proceeding forward we will have to do the following : \n",
        "\n",
        "1. **Cleaning our data** : \n",
        "    > * Missing data : Either omit elements from a dataset that contain missing values or impute them (fill them in).\n",
        "    > * Outliers : They should be detected, but not necessarily removed. Their inclusion in the analysis is a statistical decision\n",
        "2. **Feature Engineering** : \n",
        "    > Generating new features from our data if possible."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "hidden": true,
        "id": "NPMAE2479tBy"
      },
      "source": [
        "**Feature: Recommendation**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "j-hJTVqP9tBz"
      },
      "source": [
        "# To peform our data analysis, Let's again take a fresh new copy\n",
        "df_data  = df_raw.copy()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "scrolled": true,
        "id": "O0ijOqpp9tBz",
        "outputId": "e68c17df-8dc5-436f-a918-55a14e87770d"
      },
      "source": [
        "# Let's have a geez at our target variable i.e, the feature that we are trying to predict\n",
        "plt.style.use('seaborn-whitegrid')\n",
        "plt.figure(figsize=(20, 2))\n",
        "sns.countplot(y=df_data['Recommendation']);"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAABIAAAACUCAYAAADroFLEAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjMsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+AADFEAAAS1klEQVR4nO3df6zVdf0H8Ofh4k3igqhIikrqBQsyIglribUmDMcysx8TKmjiXEg/JEUFRBIv80fodHNNSy0TGz+mztnMuQCNqGbKBv4ETEnxR3gxKS/QvcA93z+a96uG12P3nHO9p8dju9s9h8/nfp53e+3N3XOfz/sUisViMQAAAADUrF7dHQAAAACAylIAAQAAANQ4BRAAAABAjVMAAQAAANQ4BRAAAABAjVMAAQAAANS43t1x0bVr13bHZQEAAABq2ujRo/f5frcUQMk7B4Ke7qmnnsrw4cO7OwaUndmmVpltapXZppaZb2pVV2e7sxtuPAIGAAAAUOMUQAAAAAA1TgEEAAAAUOO6bw+gC27rrktDFTzc3QGgQsw2tcpsU6vMNrXMfNM1axdN7e4IVeUOIAAAAIAapwACAAAAqHEKIAAAAIAapwACAAAAqHEKIAAAAIAapwACAAAAqHEKIAAAAIAapwACAAAAqHEKIAAAAIAapwACAAAAqHEKIAAAAIAapwACAAAAqHG9SznoxhtvzM0335z999+/4701a9ZULBQAAAAA5VNSAXTffffl97//ffr06VPpPAAAAACUWUmPgB1++OFvufsHAAAAgJ6jpDuAdu/enVNPPTXHHntskqRQKOSaa66paDAAAAAAyqOkAujss8+udA4AAAAAKqSkR8BGjBiRBx54IDfffHNWrFjRcScQAAAAAO9/JRVAc+fOzeDBg/PDH/4whx9+eGbPnt3p8e3t7Zk/f37OOOOMTJkyJc8991xZwgIAAADw3pVUAL322muZMmVKhg8fnm9/+9v55z//2enxK1asSFtbW5YtW5bzzz8/V155ZVnCAgAAAPDelVQAtba2prm5OUmybdu2tLe3d3r82rVrc9JJJyVJRo0alccff7yLMQEAAAD4b5W0CfS5556bSZMmpaGhITt27EhTU1Onx7e0tKShoaHjdV1dXfbs2ZPevUu6HAAAAABlVFIjc+KJJ2blypX5+9//noMO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+uuv73i9r5l+9NFH88lPfjL19fXp169fhgwZkg0bNnRXZCjJ22f78ccfz4MPPphvfvObmTt3blpaWsw2Pc4pp5ySc889t+N1XV2ddZuasK/Ztm5TK8aNG5empqYkyUsvvZSBAwdWbe2uagHU0tKShoaGjtd1dXXZs2dPNSNA2ey///4566yzcsstt2TBggWZNWtWisViCoVCkqRv3755/fXXuzklvDcTJkxI797/f3Povma6paWl49HHN95vaWmpelZ4L94+2yNHjsyFF16YX/3qVznyyCPzk5/8xGzT4/Tt2zcNDQ1paWnJD37wg8ycOdO6TU3Y12xbt6klvXv3zkUXXZSmpqZMmDChamt3VQughoaG7Nixo+N1e3v7W/4Yg57k6KOPzpe+9KUUCoUcffTRGTBgQF599dWOf9+xY0f69+/fjQmh6968h9UbM/32tXzHjh1v+c8JeoLx48fnuOOO6/j+ySefNNv0SC+//HKmTp2a0047Laeeeqp1m5rx9tm2blNrrrrqqtx///255JJLOrYXSSq7dle1ADr++OOzevXqJMm6dety7LHHVvPyUFZ33HFHrrzyyiTJ1q1b09LSkhNPPDEPPfRQkmT16tX51Kc+1Z0RoctGjBjxHzM9cuTIrF27Nq2trXn99dfzzDPPWM/pcc4666w8+uijSZI//elP+djHPma26XG2bduWadOm5YILLsjXvva1JNZtasO+Ztu6Ta24++6789Of/jRJ0qdPnxQKhRx33HFVWbsLxWKx2OXfoERvfArYpk2bUiwWc/nll6exsbFal4eyamtry5w5c/LSSy+lUChk1qxZOfDAA3PJJZdk9+7dOeaYY7Jw4cLU1dV1d1R4T1544YWcd955Wb58eTZv3rzPmV6+fHmWLVuWYrGY73znO5kwYUJ3x4Z39ebZfuKJJ9LU1JT99tsvAwcOTFNTUxoaGsw2PcrChQtz33335Zhjjul47+KLL87ChQut2/Ro+5rtmTNnZtGiRdZterydO3dmzpw52bZtW/bs2ZOzzz47jY2NVfmbu6oFEAAAAADVV9VHwAAAAACoPgUQAAAAQI1TAAEAAADUOAUQAAAAQI1TAAEAAADUOAUQAEAXbd++Pb/+9a+7OwYAwDtSAAEAdNHGjRuzatWq7o4BAPCOend3AACAavrXv/6VOXPm5KWXXsru3bszd+7cLFu2LFu2bMnevXtz5plnZuLEiZkyZUouvfTSNDY2ZsmSJdm2bVtOP/30nH/++Tn00EOzZcuWfPzjH8+CBQty4403ZsOGDVm2bFnOOOOM7v4VAQD+gwIIAPifsnTp0hx++OG59tprs2nTpqxYsSIHHnhgFi1alJaWlnzlK1/JZz7zmXc8/69//WtuueWW9OnTJ+PGjUtzc3OmT5+epUuXKn8AgPctj4ABAP9Tnn322YwaNSpJcuyxx6a5uTljxoxJkjQ0NKSxsTFbtmx5yznFYrHj+yFDhqShoSF1dXU55JBD0traWr3wAAD/JQUQAPA/pbGxMY899liSZMuWLbn33nvzyCOPJElaWlqyadOmHHHEEamvr09zc3OS5Mknn+w4v1Ao/MfP7NWrV9rb26uQHgDgv6MAAgD+p0yaNCkvvPBCvvWtb+XCCy/MzTffnO3bt2fy5MmZOnVqvve97+Xggw/O1KlTc9lll+Wss87K3r17O/2ZQ4YMyaZNm3LrrbdW55cAAHiPCsU339MMAAAAQM1xBxAAAABAjVMAAQAAANQ4BRAAAABAjVMAAQAAANQ4BRAAAABAjVMAAQAAANQ4BRAAAABAjVMAAQAAANS4/wMZID1cPtc4CQAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 1440x144 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "hidden": true,
        "id": "u7Frz3Cr9tBz"
      },
      "source": [
        "**Feature: Dress_ID**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "ApWBdayi9tBz",
        "outputId": "e7911a93-0318-4fc1-9bb6-8f066315e484"
      },
      "source": [
        "# Let's again look at our data \n",
        "df_data.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Dress_ID</th>\n",
              "      <th>Style</th>\n",
              "      <th>Price</th>\n",
              "      <th>Rating</th>\n",
              "      <th>Size</th>\n",
              "      <th>Season</th>\n",
              "      <th>NeckLine</th>\n",
              "      <th>SleeveLength</th>\n",
              "      <th>waiseline</th>\n",
              "      <th>Material</th>\n",
              "      <th>FabricType</th>\n",
              "      <th>Decoration</th>\n",
              "      <th>Pattern Type</th>\n",
              "      <th>Recommendation</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1006032852</td>\n",
              "      <td>Sexy</td>\n",
              "      <td>Low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>Summer</td>\n",
              "      <td>o-neck</td>\n",
              "      <td>sleevless</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>animal</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1212192089</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>Summer</td>\n",
              "      <td>o-neck</td>\n",
              "      <td>Petal</td>\n",
              "      <td>natural</td>\n",
              "      <td>microfiber</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>animal</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1190380701</td>\n",
              "      <td>vintage</td>\n",
              "      <td>High</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>Automn</td>\n",
              "      <td>o-neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>polyster</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>966005983</td>\n",
              "      <td>Brief</td>\n",
              "      <td>Average</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>L</td>\n",
              "      <td>Spring</td>\n",
              "      <td>o-neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>silk</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>embroidary</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>876339541</td>\n",
              "      <td>cute</td>\n",
              "      <td>Low</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>Summer</td>\n",
              "      <td>o-neck</td>\n",
              "      <td>butterfly</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffonfabric</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>bow</td>\n",
              "      <td>dot</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "     Dress_ID    Style    Price  Rating Size  Season NeckLine SleeveLength  \\\n",
              "0  1006032852     Sexy      Low 4.60000    M  Summer   o-neck    sleevless   \n",
              "1  1212192089   Casual      Low 0.00000    L  Summer   o-neck        Petal   \n",
              "2  1190380701  vintage     High 0.00000    L  Automn   o-neck         full   \n",
              "3   966005983    Brief  Average 4.60000    L  Spring   o-neck         full   \n",
              "4   876339541     cute      Low 4.50000    M  Summer   o-neck    butterfly   \n",
              "\n",
              "  waiseline       Material FabricType  Decoration Pattern Type  Recommendation  \n",
              "0    empire            NaN    chiffon     ruffles       animal               1  \n",
              "1   natural     microfiber        NaN     ruffles       animal               0  \n",
              "2   natural       polyster        NaN         NaN        print               0  \n",
              "3   natural           silk    chiffon  embroidary        print               1  \n",
              "4   natural  chiffonfabric    chiffon         bow          dot               0  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "jvwjRcH99tBz",
        "outputId": "d0815438-52fb-4281-e424-22efc374d04a"
      },
      "source": [
        "# Let's check the number of distinct values in each feature\n",
        "unique = []\n",
        "unique_labels = [column for column in df_data.columns]\n",
        "\n",
        "for label, column in df_data.items():\n",
        "    unique.append(df_data[label].nunique())\n",
        "plt.figure(figsize=(20, 7))\n",
        "plt.bar(x=df_data.columns, height=unique);\n",
        "\n",
        "# Create a dictionary to store the column name and the no. of distinct values in that particular column\n",
        "distinct = dict(zip(unique_labels, unique))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x504 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "ovQZwe-S9tB0",
        "outputId": "e3b9914e-d8b9-406f-d315-109f39a65b75"
      },
      "source": [
        "# Let's check out dictionary that we created above\n",
        "distinct"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'Dress_ID': 475,\n",
              " 'Style': 13,\n",
              " 'Price': 7,\n",
              " 'Rating': 17,\n",
              " 'Size': 7,\n",
              " 'Season': 8,\n",
              " 'NeckLine': 16,\n",
              " 'SleeveLength': 17,\n",
              " 'waiseline': 4,\n",
              " 'Material': 23,\n",
              " 'FabricType': 22,\n",
              " 'Decoration': 24,\n",
              " 'Pattern Type': 14,\n",
              " 'Recommendation': 2}"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "hidden": true,
        "id": "jo9bi6QZ9tB0"
      },
      "source": [
        "We can see that Dress_ID has 475 distinct values amongst a total number of 500 values. So we should treat this value as a categorical value instead of an integer values"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "Mk3rzgkq9tB0",
        "outputId": "196f27ed-8717-4a14-8a11-e6483046f4ab"
      },
      "source": [
        "# Convert Dress_ID into an object and after wards we will change it into a categorical value\n",
        "df_data['Dress_ID'] = df_data['Dress_ID'].astype('object')\n",
        "df_data.info()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 500 entries, 0 to 499\n",
            "Data columns (total 14 columns):\n",
            " #   Column          Non-Null Count  Dtype  \n",
            "---  ------          --------------  -----  \n",
            " 0   Dress_ID        500 non-null    object \n",
            " 1   Style           500 non-null    object \n",
            " 2   Price           498 non-null    object \n",
            " 3   Rating          500 non-null    float64\n",
            " 4   Size            500 non-null    object \n",
            " 5   Season          498 non-null    object \n",
            " 6   NeckLine        497 non-null    object \n",
            " 7   SleeveLength    498 non-null    object \n",
            " 8   waiseline       413 non-null    object \n",
            " 9   Material        372 non-null    object \n",
            " 10  FabricType      234 non-null    object \n",
            " 11  Decoration      264 non-null    object \n",
            " 12  Pattern Type    391 non-null    object \n",
            " 13  Recommendation  500 non-null    int64  \n",
            "dtypes: float64(1), int64(1), object(12)\n",
            "memory usage: 54.8+ KB\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "hidden": true,
        "id": "WB10auS69tB1"
      },
      "source": [
        "**Feature: Style**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "koWku7Ed9tB1",
        "outputId": "33250530-d2c6-4f49-e06a-fe1884c74045"
      },
      "source": [
        "plt.style.use('seaborn-whitegrid')\n",
        "plt.figure(figsize=(20,10)) \n",
        "sns.countplot(y=\"Style\", data=df_data);"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x720 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "G38HobtO9tB1",
        "outputId": "2f711cde-0bc0-4a62-9c30-db5c82028329"
      },
      "source": [
        "# Are there any missing values in this feature\n",
        "df_data['Style'].isna().sum()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "hidden": true,
        "id": "zxLoE2Qf9tB1"
      },
      "source": [
        "We can see that many some groups even though same are repeated. For example- (Sexy, sexy). \n",
        "Let's fix this first..."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "_5K53svu9tB1",
        "outputId": "49882f08-a7d1-4e0d-dabc-dea9ac5f90ed"
      },
      "source": [
        "# Replace 'sexy' with 'Sexy'\n",
        "df_data.loc[df_data['Style'] == 'sexy', 'Style'] = 'Sexy'\n",
        "\n",
        "plt.figure(figsize=(20,7)) \n",
        "sns.countplot(y=\"Style\", data=df_data);"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x504 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "hidden": true,
        "id": "Qo9-nhmb9tB2"
      },
      "source": [
        "**Feature: Price**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "YaPwwyqz9tB2",
        "outputId": "5b992189-1db0-458b-9de7-858f59439999"
      },
      "source": [
        "plt.figure(figsize=(20,7)) \n",
        "sns.countplot(y=\"Price\", data=df_data);"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x504 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "hidden": true,
        "id": "Oh9YnC6q9tB2"
      },
      "source": [
        "Here also we have to fix the gropus with similar names and at the same time for uniformity we will group (High, high, very-high) and (Medium, Average)"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "X8a7Ym5H9tB2",
        "outputId": "875155c0-1761-491c-a0fd-89396b51c820"
      },
      "source": [
        "# low group\n",
        "df_data.loc[df_data['Price'] == 'low', 'Price'] = 'low'\n",
        "df_data.loc[df_data['Price'] == 'Low', 'Price'] = 'low'\n",
        "\n",
        "# medium group\n",
        "df_data.loc[df_data['Price'] == 'Medium', 'Price'] = 'medium'\n",
        "df_data.loc[df_data['Price'] == 'Average', 'Price'] = 'medium'\n",
        "\n",
        "# high group\n",
        "df_data.loc[df_data['Price'] == 'High', 'Price'] = 'high'\n",
        "df_data.loc[df_data['Price'] == 'high', 'Price'] = 'high'\n",
        "df_data.loc[df_data['Price'] == 'very-high', 'Price'] = 'high'\n",
        "\n",
        "# Visualize our Feature\n",
        "sns.countplot(y=\"Price\", data=df_data);"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAZEAAAEBCAYAAAC5R5gUAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjMsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+AADFEAAARNUlEQVR4nO3dfWyN9//H8dfpnZnW3TQpuloVU9saFJE0mPsRm5sxDI2bjFpmdMrMYphObHWXLUtmmabGUsqaJaZ2g43MTKxTN9XSuamqmRpG66ZV1/cPP+eHVdd+5pzLOX0+/jo9ddr32xWeva7Tnjosy7IEAIABH7sHAAB4LiICADBGRAAAxogIAMAYEQEAGCMiAABjfnYP4E6ZmZl2jwAAHik6OrrC+2tURKT7/0V4i5ycHEVGRto9hkt5+47evp/k/Tt6236VfQHO5SwAgDEiAgAwRkQAAMaICADAGBEBABired+dNeNzu0dwgz12D+AG3r6je/bLTIp1y+eB9+JMBABgjIgAAIwREQCAMSICADBGRAAAxogIAMAYEQEAGCMiAABjRAQAYIyIAACMEREAgDEiAgAwRkQAAMaICADAGBEBABgjIgAAY0QEAGCMiAAAjBERAIAxIgIAMEZEAADGiAgAwBgRAQAYIyIAAGNEBABgzCMikp6ersWLF9s9BgDgHh4REQDAw8mjIpKcnKwXX3xRw4cPV1JSksrLy9WnTx/duHFDZ8+eVWRkpC5cuKDS0lINHjzY7nEBwOv52T1AVeXn52v37t1au3at/Pz8NGXKFO3YsUPR0dHKyspSfn6+WrZsqV27dqlOnTqKiYmxe2QA8HoeE5GcnBw9++yz8vf3lyR16NBBeXl56tOnj7Zv365Tp04pPj5eW7dulY+Pj4YOHWrzxADg/TzmclZkZKT279+vGzduyLIs7dmzR+Hh4YqJidGePXt04cIFdevWTdnZ2crNzVVUVJTdIwOA1/OYM5FmzZqpffv2GjlypG7evKno6Gj16tVLDodDISEhatKkiXx8fBQeHq6GDRvaPS4A1AgeEZEhQ4Y4b48bN+4f71++fLnz9tKlS90yEwDAgy5nAQAePkQEAGCMiAAAjBERAIAxIgIAMEZEAADGiAgAwBgRAQAYIyIAAGNEBABgjIgAAIwREQCAMSICADBGRAAAxogIAMAYEQEAGCMiAABjRAQAYIyIAACMEREAgDEiAgAwRkQAAMaICADAGBEBABjzs3sAd8tMirV7BJfKyclRZGSk3WO4lLfv6O37wbtwJgIAMEZEAADGiAgAwBgRAQAYIyIAAGNEBABgjIgAAIwREQCAMSICADBGRAAAxogIAMAYEQEAGCMiAABjRAQAYKzGvRT8yXefsXsEY2HvHLB7BAC4C2ciAABjRAQAYIyIAACMEREAgDEiAgAwRkQAAMaICADAGBEBABgjIgAAY0QEAGCMiAAAjBERAIAxIgIAMEZEAADGiAgAwBgRAQAYIyIAAGNEBABgrMoROXHihLZv364zZ87IsixXzgQA8BBV+h3ra9as0ffff6+///5bgwYN0smTJ/XOO++4ejYAwEOuSmcimzZtUkpKioKCgjR27Fjt27fP1XMBADxAlSJy+/KVw+GQJAUEBLhuIgCAx6jS5awBAwZo1KhROn36tF555RX16tXL1XMBADxAlSIyevRode7cWXl5eWrevLmefPJJV88FAPAAVbqclZaWprS0NPXr10/vv/++vvrqK1fPpfT0dC1evPiu++Lj41VaWnrfx8TExLh6LADAHaoUkdTUVE2fPl2StGLFCqWmprp0qPtZtmwZz8cAwEOkSpezfHx8VKtWLUmSv7+/8wl2V9u3b5/Gjx+v8+fPa+TIkVqxYoU2b96sM2fOaNasWfLz81PTpk1VWFio1atXq7S0VNOnT9fp06dVv359ffjhh/L393fLrABQE1UpIj179tTLL7+sqKgoZWdnq0ePHq6eS5Lk5+enlStXqrCwUBMnTnTe/8EHHyguLk7dunVTWlqaCgsLJUlXrlxRfHy8QkNDNWbMGOXk5CgqKsotswJATVSliLz66qvq3r27jh8/rkGDBql169aunkuS1KZNGzkcDgUHB+vatWvO+48ePap27dpJkqKjo7Vx40ZJUr169RQaGipJatSoka5eveqWOQGgpqr0OZH169dLkpYsWaLNmzcrNzdXGRkZWrp0qVuGu99ls1atWmnv3r2SdNcPPrrrMhsA4JZKz0RCQkIkSc2aNZOvr69bBqqKhIQEzZ49W8nJyQoKCpKfX5VOqAAAD1il//t26dJFkpSRkaHk5GS3DHTbkCFDnLdr1aqlbdu2Od/OysrSe++9p2bNmmn9+vX67bffJEk7d+50/pll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4mK3z2rq3h2joqI0c+ZMffHFF3r88cf18ccfe+yOderUUWBgoIqLi/X6669r2rRpXncMK9rRm45hddSIiAQGBqqkpMT59s2bN+/6B+ypwsPD9cILL8jhcCg8PFz169fXX3/95Xx/SUmJ6tata+OED8adz+nc3uneY1pSUnLXP1ZP07t3bz399NPO24cOHfLoHf/44w/FxsZq4MCBev75573yGN67o7cdw6qqERFp3769duzYIUnKyspSq1atbJ7owdiwYYMWLVokSfrzzz9VXFysmJgY7d69W5K0Y8cOdejQwc4RH4g2bdr8Y6eoqChlZmbq+vXrunz5so4ePerRx3XChAnav3+/JGnXrl166qmnPHbHc+fOafz48ZoxY4aGDh0qyfuOYUU7etMxrI4a8cOGt78768iRI7IsSwsXLlRERITdY/1npaWleuutt3T69Gk5HA4lJCSoQYMGmjNnjsrKytS8eXMlJibK19fX7lGr7dSpU3rjjTeUlpam48ePV7hTWlqa1q1bJ8uyNGnSJPXt29fusavlzh2zs7O1YMEC+fv7q1GjRlqwYIECAwM9csfExERt3rxZzZs3d9739ttvKzEx0WuOYUU7Tps2TUlJSV5xDKujRkQEAOAaNeJyFgDANYgIAMAYEQEAGCMiAABjRAQAYIyIAB7k4sWL2rhxo91jAE5EBPAghw8f1rZt2+weA3Dy/Nf+AB5S165dc/4w6O2XDl+3bp0KCgpUXl6ucePGqX///hozZozmzZuniIgIpaam6ty5cxo8eLCmT5+ukJAQFRQU6JlnntH8+fP1ySefKDc3V+vWrdPw4cPtXhEgIoCrrF27Vk2bNtWyZct05MgRbdmyRQ0aNFBSUpKKi4s1ZMgQde7c+b6PP3HihFauXKnatWurV69eKioqUlxcnNauXUtA8NDgchbgIseOHVPbtm0lSa1atVJRUZE6duwo6daLgkZERKigoOCux9z5AhJhYWEKDAyUr6+vgoODdf36dfcND1QREQFcJCIiQgcOHJAkFRQUaNOmTfr1118l3fr1BEeOHFFoaKgCAgJUVFQkSTp06JDz8bdfOv1OPj4+unnzphumB6qGiAAuMmLECJ06dUqjR4/WzJkz9dlnn+nixYsaOXKkYmNj9dprr+mxxx5TbGys3n33XU2YMEHl5eWVfsywsDAdOXJEKSkp7lkC+Be8ACMAwBhnIgAAY0QEAGCMiAAAjBERAIAxIgIAMEZEAADGiAgAwBgRAQAY+x9loxz0BjPp/wAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "IORY_xxu9tB3",
        "outputId": "91804543-593e-4b0e-addb-452ee73e57b9"
      },
      "source": [
        "df.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Dress_ID</th>\n",
              "      <th>Style</th>\n",
              "      <th>Price</th>\n",
              "      <th>Rating</th>\n",
              "      <th>Size</th>\n",
              "      <th>Season</th>\n",
              "      <th>NeckLine</th>\n",
              "      <th>SleeveLength</th>\n",
              "      <th>waiseline</th>\n",
              "      <th>Material</th>\n",
              "      <th>FabricType</th>\n",
              "      <th>Decoration</th>\n",
              "      <th>Pattern Type</th>\n",
              "      <th>Recommendation</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1006032852</td>\n",
              "      <td>Sexy</td>\n",
              "      <td>Low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>Summer</td>\n",
              "      <td>o-neck</td>\n",
              "      <td>sleevless</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>animal</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1212192089</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>Summer</td>\n",
              "      <td>o-neck</td>\n",
              "      <td>Petal</td>\n",
              "      <td>natural</td>\n",
              "      <td>microfiber</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>animal</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1190380701</td>\n",
              "      <td>vintage</td>\n",
              "      <td>High</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>Automn</td>\n",
              "      <td>o-neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>polyster</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>966005983</td>\n",
              "      <td>Brief</td>\n",
              "      <td>Average</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>L</td>\n",
              "      <td>Spring</td>\n",
              "      <td>o-neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>silk</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>embroidary</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>876339541</td>\n",
              "      <td>cute</td>\n",
              "      <td>Low</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>Summer</td>\n",
              "      <td>o-neck</td>\n",
              "      <td>butterfly</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffonfabric</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>bow</td>\n",
              "      <td>dot</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "     Dress_ID    Style    Price  Rating Size  Season NeckLine SleeveLength  \\\n",
              "0  1006032852     Sexy      Low 4.60000    M  Summer   o-neck    sleevless   \n",
              "1  1212192089   Casual      Low 0.00000    L  Summer   o-neck        Petal   \n",
              "2  1190380701  vintage     High 0.00000    L  Automn   o-neck         full   \n",
              "3   966005983    Brief  Average 4.60000    L  Spring   o-neck         full   \n",
              "4   876339541     cute      Low 4.50000    M  Summer   o-neck    butterfly   \n",
              "\n",
              "  waiseline       Material FabricType  Decoration Pattern Type  Recommendation  \n",
              "0    empire            NaN    chiffon     ruffles       animal               1  \n",
              "1   natural     microfiber        NaN     ruffles       animal               0  \n",
              "2   natural       polyster        NaN         NaN        print               0  \n",
              "3   natural           silk    chiffon  embroidary        print               1  \n",
              "4   natural  chiffonfabric    chiffon         bow          dot               0  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "hidden": true,
        "id": "a65F4l9d9tB5"
      },
      "source": [
        "**Feature: Size**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "3pXsU5WB9tB5",
        "outputId": "53d064c8-7c68-4c94-c3da-c95f098adb5b"
      },
      "source": [
        "plt.figure(figsize=(20,7)) \n",
        "sns.countplot(y=\"Size\", data=df_data);"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x504 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "tSAErwq69tB5",
        "outputId": "944d6197-dfa2-4776-bb1b-3bb3b93aecef"
      },
      "source": [
        "# Fixing the groups\n",
        "\n",
        "# XL group\n",
        "df_data.loc[df_data['Size'] == 'free', 'Size'] = 'XL'\n",
        "df_data.loc[df_data['Size'] == 'XL', 'Size'] = 'XL'\n",
        "\n",
        "# S group\n",
        "df_data.loc[df_data['Size'] == 's', 'Size'] = 'S'\n",
        "df_data.loc[df_data['Size'] =='small', 'Size'] = 'S'\n",
        "df_data.loc[df_data['Size'] == 's', 'Size'] = 'S'\n",
        "\n",
        "# Visualize the data\n",
        "plt.figure(figsize=(20,7)) \n",
        "sns.countplot(y=\"Size\", data=df_data);"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x504 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "BrdW0QyL9tB5",
        "outputId": "4dd59841-9790-4e74-c4a6-99c9ac04a7c8"
      },
      "source": [
        "# Check our DataFrame\n",
        "df.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Dress_ID</th>\n",
              "      <th>Style</th>\n",
              "      <th>Price</th>\n",
              "      <th>Rating</th>\n",
              "      <th>Size</th>\n",
              "      <th>Season</th>\n",
              "      <th>NeckLine</th>\n",
              "      <th>SleeveLength</th>\n",
              "      <th>waiseline</th>\n",
              "      <th>Material</th>\n",
              "      <th>FabricType</th>\n",
              "      <th>Decoration</th>\n",
              "      <th>Pattern Type</th>\n",
              "      <th>Recommendation</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1006032852</td>\n",
              "      <td>Sexy</td>\n",
              "      <td>Low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>Summer</td>\n",
              "      <td>o-neck</td>\n",
              "      <td>sleevless</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>animal</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1212192089</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>Summer</td>\n",
              "      <td>o-neck</td>\n",
              "      <td>Petal</td>\n",
              "      <td>natural</td>\n",
              "      <td>microfiber</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>animal</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1190380701</td>\n",
              "      <td>vintage</td>\n",
              "      <td>High</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>Automn</td>\n",
              "      <td>o-neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>polyster</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>966005983</td>\n",
              "      <td>Brief</td>\n",
              "      <td>Average</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>L</td>\n",
              "      <td>Spring</td>\n",
              "      <td>o-neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>silk</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>embroidary</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>876339541</td>\n",
              "      <td>cute</td>\n",
              "      <td>Low</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>Summer</td>\n",
              "      <td>o-neck</td>\n",
              "      <td>butterfly</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffonfabric</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>bow</td>\n",
              "      <td>dot</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "     Dress_ID    Style    Price  Rating Size  Season NeckLine SleeveLength  \\\n",
              "0  1006032852     Sexy      Low 4.60000    M  Summer   o-neck    sleevless   \n",
              "1  1212192089   Casual      Low 0.00000    L  Summer   o-neck        Petal   \n",
              "2  1190380701  vintage     High 0.00000    L  Automn   o-neck         full   \n",
              "3   966005983    Brief  Average 4.60000    L  Spring   o-neck         full   \n",
              "4   876339541     cute      Low 4.50000    M  Summer   o-neck    butterfly   \n",
              "\n",
              "  waiseline       Material FabricType  Decoration Pattern Type  Recommendation  \n",
              "0    empire            NaN    chiffon     ruffles       animal               1  \n",
              "1   natural     microfiber        NaN     ruffles       animal               0  \n",
              "2   natural       polyster        NaN         NaN        print               0  \n",
              "3   natural           silk    chiffon  embroidary        print               1  \n",
              "4   natural  chiffonfabric    chiffon         bow          dot               0  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "hidden": true,
        "id": "OxPDRdYL9tB5"
      },
      "source": [
        "**Feature: Season**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "AGDJMb249tB5",
        "outputId": "85023fe8-48f8-4158-a5a4-322f4eca0b56"
      },
      "source": [
        "# Visualize the data\n",
        "plt.figure(figsize=(20,7)) \n",
        "sns.countplot(y=\"Season\", data=df_data);"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x504 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "BYI-Pw4y9tB6",
        "outputId": "32c103e1-cb8f-40a5-ca7d-68af17dabec2"
      },
      "source": [
        "# Fixing the groups\n",
        "\n",
        "# Summmer group\n",
        "df_data.loc[df_data['Season'] == 'Summer', 'Season'] = 'summer'\n",
        "df_data.loc[df_data['Season'] == 'summer', 'Season'] = 'summer'\n",
        "\n",
        "# Autumn group\n",
        "df_data.loc[df_data['Season'] == 'Automn', 'Season'] = 'autumn'\n",
        "df_data.loc[df_data['Season'] =='Autumn', 'Season'] = 'autumn'\n",
        "\n",
        "# Spring Group\n",
        "df_data.loc[df_data['Season'] == 'Spring', 'Season'] = 'spring'\n",
        "\n",
        "# Winter Group\n",
        "df_data.loc[df_data['Season'] == 'Winter', 'Season'] = 'winter'\n",
        "\n",
        "# Visualize the data\n",
        "plt.figure(figsize=(20,7)) \n",
        "sns.countplot(y=\"Season\", data=df_data);"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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AFCM+AQAAABAMeITAAAAAMWITwAAAAAUU1epVCrVHqI3tbS0VHsEAAAAgD5n/Pjxb/n9motPAAAAAPQel90BAAAAUIz4BAAAAEAxNROfOjs7c+mll+a4447LzJkz88QTT1R7JKqgo6Mj559/fmbMmJGpU6dmxYoVeeKJJzJ9+vTMmDEjX/ziF9PZ2VntMellzz//fA499NCsWbPGPpBvfvObOe6443LMMcfk+9//vp2ocR0dHTn33HMzbdq0zJgxw+8TNe6Xv/xlZs6cmSRvuwff+973cswxx+Rv//Zvc/vtt1dzXHrB1jvR2tqaGTNmZObMmTn55JPz3HPPJbETtWbrnfit5cuX57jjjuv62k7Ulq134vnnn8/pp5+e448/PtOmTcuTTz6ZpDZ2oqHaA/SWW2+9NZs3b86yZcty33335Stf+UoWLlxY7bHoZTfddFOGDh2aK664Ii+88EKOPvrofPCDH8zZZ5+dgw46KJdeemlWrFiRI444otqj0ks6Ojpy6aWXZvvtt0+S/PM//7N9qGF333137r333lx//fV57bXXsmjRIjtR4+6444688cYbWbp0aVatWpWrr746HR0ddqIGNTc356abbsrAgQOTvPWfF/vuu28WL16cG264IZs2bcqMGTMyYcKE9O/fv8rTU0L3nbj88stzySWXpKmpKUuXLk1zc3NOOeUUO1FDuu9E8v+i5A9+8IP89qOW29ra7EQN6b4TV1xxRaZMmZLJkyfnrrvuymOPPZaBAwfWxE7UzMmnlpaW/NVf/VWSZN99980DDzxQ5YmohkmTJuVzn/tc19f19fV58MEHc+CBByZJDjnkkKxevbpa41EFX/3qVzNt2rSMGDEiSexDjfvv//7vjBs3Lv/4j/+Y0047LR/96EftRI0bPXp0tmzZks7OzrS3t6ehocFO1KjGxsbMnz+/6+u32oP7778/H/7wh9O/f/8MHjw4jY2Nefjhh6s1MoV134mrrroqTU1NSZItW7ZkwIABdqLGdN+JF154IVdeeWVmzZrV9T07UVu678QvfvGLPPvssznppJOyfPnyHHjggTWzEzUTn9rb2zNo0KCur+vr6/PGG29UcSKqYccdd8ygQYPS3t6es846K2effXYqlUrq6uq67n/llVeqPCW95Yc//GF23nnnrjCdxD7UuBdeeCEPPPBAvvGNb+Syyy7LeeedZydq3A477JB169blr//6r3PJJZdk5syZdqJGfeITn0hDw/9eNPBWe9De3p7Bgwd3PWbHHXdMe3t7r89K7+i+E7/9H1m/+MUvsmTJkpx00kl2osZsvRNbtmzJ7NmzM2vWrOy4445dj7ETtaX77xPr1q3LTjvtlGuvvTYjR45Mc3NzzexEzcSnQYMGZePGjV1fd3Z2vmkJqB3r16/PiSeemE9+8pOZMmVK+vX73/8MNm7cmJ122qmK09GbbrjhhqxevTozZ85Ma2trLrzwwmzYsKHrfvtQe4YOHZqPfOQj6d+/f8aMGZMBAwa8KSzYidpz7bXX5iMf+Uh+8pOf5Ec/+lEuuuiidHR0dN1vJ2rXW/380P3nzY0bN77pLxT0fbfccku++MUv5lvf+lZ23nlnO1HDHnzwwTzxxBOZM2dOPv/5z+fRRx/N5Zdfbidq3NChQ/Pxj388SfLxj388DzzwQM3sRM3Ep/322y8rV65Mktx3330ZN25clSeiGp577rl8+tOfzvnnn5+pU6cmSfbcc8/cfffdSZKVK1dm//33r+aI9KLrrrsuS5YsyeLFi9PU1JSvfvWrOeSQQ+xDDRs/fnzuvPPOVCqVPPvss3nttddy8MEH24kattNOO3X9ADhkyJC88cYb/twgyVv//LDPPvukpaUlmzZtyiuvvJI1a9b4mbOG/OhHP+r6uWL33XdPEjtRw/bZZ5/cfPPNWbx4ca666qrssccemT17tp2ocePHj88dd9yRJLnnnnuyxx571MxO1MzRnyOOOCKrVq3KtGnTUqlU8uUvf7naI1EF11xzTV5++eUsWLAgCxYsSJLMnj07X/rSl3LVVVdlzJgx+cQnPlHlKammCy+8MJdccol9qFEf+9jHcs8992Tq1KmpVCq59NJLM2rUKDtRw0466aTMmjUrM2bMSEdHR84555zsvffedoK3/POivr4+M2fOzIwZM1KpVHLOOedkwIAB1R6VXrBly5ZcfvnlGTlyZD772c8mSQ444ICcddZZdoI3GT58uJ2oYRdeeGG+8IUvZOnSpRk0aFC+/vWvZ8iQITWxE3WV337sPgAAAAC8y2rmsjsAAAAAep/4BAAAAEAx4hMAAAAAxYhPAAAAABQjPgEAAABQjPgEAPAe9uKLL2b58uXVHgMA4G2JTwAA72H/8z//k9tuu63aYwAAvK2Gag8AAFArXn/99Vx88cV5+umn09HRkVmzZmXZsmV56qmnsmXLlvz93/99Jk+enJkzZ2bOnDkZO3Zsrr/++jz33HM5+uijc+6552bXXXfNU089lQ996EO57LLLcs011+Thhx/OsmXLctxxx1X7LQIA/A7xCQCglyxdujS77bZb5s2bl0ceeSS33nprhg0bliuuuCLt7e055phj8pd/+Zdv+/zHH3883/nOdzJw4MAcfvjhaWtry2mnnZalS5cKTwDANstldwAAveSxxx7LvvvumyQZN25c2tracsABByRJBg0alLFjx+app55603MqlUrX7U7sBwgAAAECSURBVMbGxgwaNCj19fUZPnx4Nm3a1HvDAwD8kcQnAIBeMnbs2PzqV79Kkjz11FO5+eab8/Of/zxJ0t7enkceeSSjRo1K//7909bWliR56KGHup5fV1f3O6/Zr1+/dHZ29sL0AAB/HPEJAKCXTJs2LWvXrs0JJ5yQCy64IN/+9rfz4osvZvr06TnxxBNz5pln5s/+7M9y4oknZu7cuTn55JOzZcuWd3zNxsbGPPLII7n22mt7500AAPyB6ipbn+UGAAAAgHeRk08AAAAAFCM+AQAAAFCM+AQAAABAMeITAAAAAMWITwAAAAAUIz4BAAAAUIz4BAAAAEAx4hMAAAAAxfxfC/RYsAFpswkAAAAASUVORK5CYII=\n",
            "text/plain": [
              "<Figure size 1440x504 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "hidden": true,
        "id": "y6KnvOCy9tB6"
      },
      "source": [
        "**Feature: NeckLine**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "-AXwg8oJ9tB6",
        "outputId": "0aa2a9c4-2498-4389-cdc0-be2a14bb00ae"
      },
      "source": [
        "# Visualize the data\n",
        "plt.figure(figsize=(20,7)) \n",
        "sns.countplot(y=\"NeckLine\", data=df_data);"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x504 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "1dw_115g9tB6",
        "outputId": "1ffe57cf-f090-4f23-851c-98893d20415b"
      },
      "source": [
        "# Fix the groups\n",
        "\n",
        "# sweetheart group\n",
        "df_data.loc[df_data['NeckLine'] == 'Sweetheart', 'NeckLine'] = 'sweetheart'\n",
        "\n",
        "# colored group\n",
        "df_data.loc[df_data['NeckLine'] == 'peterpan-collor', 'NeckLine'] = 'colored'\n",
        "df_data.loc[df_data['NeckLine'] == 'mandarin-collor', 'NeckLine'] = 'colored'\n",
        "df_data.loc[df_data['NeckLine'] == 'sqare-collor', 'NeckLine'] = 'colored'\n",
        "df_data.loc[df_data['NeckLine'] == 'bowneck', 'NeckLine'] = 'colored'\n",
        "\n",
        "# Designer group\n",
        "df_data.loc[df_data['NeckLine'] == 'sweetheart', 'NeckLine'] = 'designer'\n",
        "df_data.loc[df_data['NeckLine'] == 'backless', 'NeckLine'] = 'designer'\n",
        "df_data.loc[df_data['NeckLine'] == 'sweetheart', 'NeckLine'] = 'designer'\n",
        "df_data.loc[df_data['NeckLine'] == 'Scoop', 'NeckLine'] = 'designer'\n",
        "df_data.loc[df_data['NeckLine'] == 'halter', 'NeckLine'] = 'designer'\n",
        "df_data.loc[df_data['NeckLine'] == 'ruffled', 'NeckLine'] = 'designer'\n",
        "df_data.loc[df_data['NeckLine'] == 'open', 'NeckLine'] = 'designer'\n",
        "df_data.loc[df_data['NeckLine'] == 'turndowncollor', 'NeckLine'] = 'designer'\n",
        "\n",
        "# Neck Group\n",
        "df_data.loc[df_data['NeckLine'] == 'o-neck', 'NeckLine'] = 'neck'\n",
        "df_data.loc[df_data['NeckLine'] == 'v-neck', 'NeckLine'] = 'neck'\n",
        "df_data.loc[df_data['NeckLine'] == 'boat-neck', 'NeckLine'] = 'neck'\n",
        "df_data.loc[df_data['NeckLine'] == 'slash-neck', 'NeckLine'] = 'neck'\n",
        "\n",
        "\n",
        "\n",
        "# Visualize the data\n",
        "plt.figure(figsize=(20,7)) \n",
        "sns.countplot(y=\"NeckLine\", data=df_data);"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x504 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "1nQ2GBW89tB6",
        "outputId": "1bc71a7a-e709-4faa-fd98-5fb52c39b050"
      },
      "source": [
        "df_data.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Dress_ID</th>\n",
              "      <th>Style</th>\n",
              "      <th>Price</th>\n",
              "      <th>Rating</th>\n",
              "      <th>Size</th>\n",
              "      <th>Season</th>\n",
              "      <th>NeckLine</th>\n",
              "      <th>SleeveLength</th>\n",
              "      <th>waiseline</th>\n",
              "      <th>Material</th>\n",
              "      <th>FabricType</th>\n",
              "      <th>Decoration</th>\n",
              "      <th>Pattern Type</th>\n",
              "      <th>Recommendation</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1006032852</td>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleevless</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>animal</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1212192089</td>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>Petal</td>\n",
              "      <td>natural</td>\n",
              "      <td>microfiber</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>animal</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1190380701</td>\n",
              "      <td>vintage</td>\n",
              "      <td>high</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>polyster</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>966005983</td>\n",
              "      <td>Brief</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>silk</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>embroidary</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>876339541</td>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>butterfly</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffonfabric</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>bow</td>\n",
              "      <td>dot</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "     Dress_ID    Style   Price  Rating Size  Season NeckLine SleeveLength  \\\n",
              "0  1006032852     Sexy     low 4.60000    M  summer     neck    sleevless   \n",
              "1  1212192089   Casual     low 0.00000    L  summer     neck        Petal   \n",
              "2  1190380701  vintage    high 0.00000    L  autumn     neck         full   \n",
              "3   966005983    Brief  medium 4.60000    L  spring     neck         full   \n",
              "4   876339541     cute     low 4.50000    M  summer     neck    butterfly   \n",
              "\n",
              "  waiseline       Material FabricType  Decoration Pattern Type  Recommendation  \n",
              "0    empire            NaN    chiffon     ruffles       animal               1  \n",
              "1   natural     microfiber        NaN     ruffles       animal               0  \n",
              "2   natural       polyster        NaN         NaN        print               0  \n",
              "3   natural           silk    chiffon  embroidary        print               1  \n",
              "4   natural  chiffonfabric    chiffon         bow          dot               0  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "hidden": true,
        "id": "0J-JBp2q9tB7"
      },
      "source": [
        "**Feature: SleeveLength**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "dRmGYsvY9tB7",
        "outputId": "9b80697d-d789-462a-cbd0-59144baf8f64"
      },
      "source": [
        "# Visualize the data\n",
        "plt.figure(figsize=(20,7)) \n",
        "sns.countplot(y=\"SleeveLength\", data=df_data);"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 1440x504 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "HYtZMJ2X9tB7",
        "outputId": "0d02947f-ab66-4544-d593-85c0b2c64107"
      },
      "source": [
        "df_data['SleeveLength'].unique()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['sleevless', 'Petal', 'full', 'butterfly', 'short', 'threequarter',\n",
              "       'halfsleeve', 'cap-sleeves', 'turndowncollor', 'threequater',\n",
              "       'capsleeves', 'sleeveless', 'sleeevless', 'half', 'urndowncollor',\n",
              "       'thressqatar', nan, 'sleveless'], dtype=object)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "-4Xpn-ri9tB7",
        "outputId": "f5fe8b10-d872-443b-d726-3e6658f702a7"
      },
      "source": [
        "# Fix the groups\n",
        "\n",
        "# sleveless group\n",
        "df_data.loc[df_data['SleeveLength'] == 'sleevless', 'SleeveLength'] = 'sleeveless'\n",
        "df_data.loc[df_data['SleeveLength'] == 'sleeveless', 'SleeveLength'] = 'sleeveless'\n",
        "df_data.loc[df_data['SleeveLength'] == 'sleeevless', 'SleeveLength'] = 'sleeveless'\n",
        "df_data.loc[df_data['SleeveLength'] == 'sleveless', 'SleeveLength'] = 'sleeveless'\n",
        "\n",
        "# short group\n",
        "df_data.loc[df_data['SleeveLength'] == 'short', 'SleeveLength'] = 'short'\n",
        "df_data.loc[df_data['SleeveLength'] == 'threequarter', 'SleeveLength'] = 'short'\n",
        "df_data.loc[df_data['SleeveLength'] == 'threequater', 'SleeveLength'] = 'short'\n",
        "df_data.loc[df_data['SleeveLength'] == 'half', 'SleeveLength'] = 'short'\n",
        "df_data.loc[df_data['SleeveLength'] == 'thressqatar', 'SleeveLength'] = 'short'\n",
        "df_data.loc[df_data['SleeveLength'] == 'halfsleeve', 'SleeveLength'] = 'short'\n",
        "\n",
        "# Designer Group\n",
        "df_data.loc[df_data['SleeveLength'] == 'Petal', 'SleeveLength'] = 'designer'\n",
        "df_data.loc[df_data['SleeveLength'] == 'butterfly', 'SleeveLength'] = 'designer'\n",
        "df_data.loc[df_data['SleeveLength'] == 'cap-sleeves', 'SleeveLength'] = 'designer'\n",
        "df_data.loc[df_data['SleeveLength'] == 'capsleeves', 'SleeveLength'] = 'designer'\n",
        "df_data.loc[df_data['SleeveLength'] == 'urndowncollor', 'SleeveLength'] = 'designer'\n",
        "df_data.loc[df_data['SleeveLength'] == 'turndowncollor', 'SleeveLength'] = 'designer'\n",
        "\n",
        "# Full group\n",
        "df_data.loc[df_data['SleeveLength'] == 'full', 'SleeveLength'] = 'full'\n",
        "\n",
        "\n",
        "# Visualize the data\n",
        "plt.figure(figsize=(20,7)) \n",
        "sns.countplot(y=\"SleeveLength\", data=df_data);"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x504 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "hidden": true,
        "id": "A9NG_zSZ9tB7"
      },
      "source": [
        "**Feature: waiseline**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "JaNkkwrD9tB7",
        "outputId": "9e18ac51-021a-4f66-d957-40d9423f5aa4"
      },
      "source": [
        "# Visualize the data\n",
        "plt.figure(figsize=(20,7)) \n",
        "sns.countplot(y=\"waiseline\", data=df_data);"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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AQAAAFCUAAUAAABAUQIUAAAAAEUJUAAAAAAUJUABAAAAUJQABQAAAEBRAhQAAAAARQlQAAAAABQlQAEAAABQlAAFAAAAQFECFAAAAABFCVAAAAAAFCVAAQAAAFCUAAUAAABAUQIUAAAAAEUJUAAAAAAUJUABAAAAUJQABQAAAEBRAhQAAAAARQlQAAAAABQlQAEAAABQ1C4boGbNmpX169f/n45x7bXX5sknn/yYJgIAAABgZ+yyAWratGnZtGlTtccAAAAA4P+otpIf9tBDD+WXv/xl1q5dmzfeeCOXXnppevfunTvuuCNJsnbt2tx222155plnsmLFilxxxRW58MILM3PmzEyePDlJMmjQoMydOzfXXnttVq1alVWrVmXq1Km5/fbb87vf/S7vvPNOTj755IwcObKSpwYAAADAdlR8B1RLS0umTZuWqVOn5u67787LL7+cSZMm5cc//nG+/OUv59///d9z7rnn5oADDtgcnbbnxBNPzMyZM7NmzZoMGDAg9957b+6///7cf//9FTobAAAAANpT0R1QSfKZz3wmSXLwwQdn3bp1+eQnP5lbbrkl++yzT5YvX57jjjvuj76/ra1t8+OGhoYkSffu3TN//vz86le/Sn19fdatW1fuBAAAAADYIRUPUDU1NVv8PHr06Dz22GOpr6/PNddcszkw1dTUZNOmTdlrr72yYsWKJMlvfvObvPvuu1sd66GHHkq3bt0ybty4vP7665k9e/YWoQoAAACA6ql4gPpDZ511Vr75zW9mv/32S69evfLWW28lSU444YR8+9vfzo9+9KN069Yt5557bhobG9O7d++tjvGFL3who0aNSlNTU7p27Zq+fftuPg4AAAAA1VXTtgduFWpqasoBc/5ftccAAAAA9lB9bpxf7RE+dk1NTTn++OO3+VrFv4QcAAAAgD2LAAUAAABAUQIUAAAAAEUJUAAAAAAUJUABAAAAUJQABQAAAEBRAhQAAAAARQlQAAAAABQlQAEAAABQlAAFAAAAQFECFAAAAABFCVAAAAAAFCVAAQAAAFCUAAUAAABAUQIUAAAAAEUJUAAAAAAUJUABAAAAUJQABQAAAEBRAhQAAAAARQlQAAAAABQlQAEAAABQlAAFAAAAQFECFAAAAABFCVAAAAAAFCVAAQAAAFBUbXu/0NzcnLFjx+a9997LmWeemf79++eUU06pxGwAAAAAdADt7oC65ZZbcuutt6Z79+75xje+kSlTplRiLgAAAAA6iI90C17fvn1TU1OT/fffP/vuu2/pmQAAAADoQNoNUJ/4xCcyc+bMfPDBB5kzZ07222+/SswFAAAAQAfRboCaOHFi3nzzzfTo0SMvvPBCbrnllkrMBQAAAEAH0e6XkNfX1+eiiy5Ka2trkuT9999P9+7diw8GAAAAQMfQboAaO3ZsnnzyyRx44IFpa2tLTU1NZs6cWYnZAAAAAOgA2g1Qzz//fB577LF06vSRvq8cAAAAALbQblXq27fv5tvvAAAAAGBHtbsD6re//W1OOeWU9O3bN0k6zC14fW6cX+0RYIctWrQoRx55ZLXHgB1m7bK7snbZHVm37K6sXXZX1u5H026A+tu//dtKzAEAAABAB7XdAPXAAw/k3HPPzcyZM1NTU7PFa6NGjSo+GAAAAAAdw3YD1EEHHZQk6devX8WGAQAAAKDj2W6AqqmpyVNPPZUDDjigkvMAAAAA0MFsN0DNmTNnu2/60pe+VGQYAAAAADqe7QaoW2+9dfPjV199NW+88UY+/elP58ADD6zIYAAAAAB0DO3+Fbyf/OQn+fnPf5533303Z599dl5//fXceOONlZgNAAAAgA6gU3u/MGfOnEyfPj3dunXLhRdemOeee64ScwEAAADQQbQboNra2pL8z5eSJ0ldXV3ZiQAAAADoUNq9Be+rX/1qhg4dmmXLluXSSy/NqaeeWom5AAAAAOgg2g1Q559/fr7whS+kubk5/fr1y6c//elKzAUAAABAB9HuLXgvv/xyVq9enYMPPjgTJ07M008/XYm5AAAAAOgg2g1QN910U+rq6nLXXXfliiuuyB133FGJuQAAAADoINoNULW1tenfv3/Wr1+fAQMGZOPGjZWYCwAAAIAOot0AVVNTk+9///s5+eST87Of/Sxdu3atxFwAAAAAdBDtfgn55MmTM3/+/AwePDi/+tWvMnny5ErMBQAAAEAHsd0dUL/4xS+SJD//+c/zu9/9LrNmzcrrr7+eRx99tGLDAQAAALD72+4OqFWrViVJVqxYUbFhAAAAAOh4thugzj777CTJZZddlrfeeisbNmxIW1tb3nrrrYoNV9KgKYM2P557+dwqTgIAAADQsbX7HVDXX399nn322XzwwQdZu3ZtDj300MyePbsSswEAAADQAbT7V/CWLFmSOXPm5Etf+lLmzJmTvfbaqxJzAQAAANBBtBug9tlnn9TU1OT999/P/vvvn/Xr11diLgAAAAA6iHYD1NFHH5177703Bx54YK644ops2LChEnMBAAAA0EG0+x1QTz31VHr37p0///M/T11dXY455phKzAUAAABAB9FugHrooYeyePHiPP7443niiSfSq1ev3HHHHZWYDQAAAIAOoN0A9eKLL2bu3LmZN29ekqRfv37FhwIAAACg42g3QA0dOjSHHnporrjiigwePLgSMwEAAADQgbQboObNm5empqY89dRT+dGPfpSePXvm7/7u7yoxGwAAAAAdQLt/BW/16tVZvnx5li1blrVr1+aQQw6pxFwAAAAAdBDt7oD6y7/8y5x66qkZPnx4+vfvX4mZAAAAAOhAPtJfwQMAAACAndXuLXgAAAAA8H8hQAEAAABQlAAFAAAAQFECFAAAAABFCVAAAAAAFCVAAQAAAFCUAAUAAABAUQIUAAAAAEUJUAAAAAAUJUABAAAAUJQABQAAAEBRAhQAAAAARQlQAAAAABQlQAEAAABQlAAFAAAAQFECFAAAAABFCVAAAAAAFCVAAQAAAFCUAAUAAABAUQIUAAAAAEUJUAAAAAAUJUABAAAAUFRVAtRDDz2Uxx9/vBofDQAAAECF1VbjQ88555xqfCwAAAAAVVAkQH24w6mlpSXvvPNOvvOd72TKlCk57LDDUldXl4aGhvTq1Sv9+vXLD3/4w3Tp0iVvvvlmzjjjjIwYMSKvvfZaRo8enfXr12fvvffO5MmT09ramjFjxqS1tTV77bVXxo8fn/333z/f+9730tLSkrVr1+aqq67KwIEDc+211+aNN95Ia2trLrnkkpxxxhklThMAAACAj6DYDqj3338///iP/5j//u//zrnnnpuNGzfmr//6r/PZz342U6ZM2fx7y5YtyyOPPJJ169blpJNOyogRI3Lbbbfl29/+dk4++eT87Gc/y8KFC/Pggw9m2LBhGTx4cJ5++uncfvvtGT58eFauXJnp06fn7bffzmuvvZaWlpbMmzcvP/3pT5Mkc+fOLXWKAAAAAHwExQLU5z//+XTq1Cm9evXKfvvtl8WLF6ehoWGr3zviiCNSW1ub2tra7L333kmSV199Nccee2ySbN69NHHixEybNi333HNP2tra0qVLl/Tv3z9Dhw7N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Xc5XvvKVfO9739v8c+fOnV1z2S1sa+267rI7OPXUUzN+/PgkybJly9KrVy/X3Z2wRwWolpaW1NfXb/65c+fO2bBhQxUngu3be++9c8kll+Tee+/NzTffnCuvvDJtbW2pqalJkuy777557733qjwl/N7pp5+e2trfb6zd1nptaWnZfFvph8+3tLRUfFb40B+u22OOOSZXX3117rvvvhx66KG58847rVt2Ofvuu2/q6+vT0tKS7373uxk5cqRrLruFba1d1112F7W1tbnmmmsyfvz4nH766a67O2GPClD19fVZs2bN5p83bdq0xT86YVfS0NCQr33ta6mpqUlDQ0O6d++et99+e/Pra9asyX777VfFCeGP+9/fT/bhev3D6/CaNWu2+J80VNtpp52Wo48+evPjhQsXWrfskn7729/mggsuyFlnnZUzzzzTNZfdxh+uXddddie33XZbHn300YwZM2bzV6Ykrrsf1R4VoI477rg8+eSTSZJnn302RxxxRJUngu178MEH84Mf/CBJsnz58rS0tGTQoEGZN29ekuTJJ5/MCSecUM0R4Y/67Gc/u9V6PeaYY9LU1JTW1ta89957Wbx4sWsxu5RLLrkkzz//fJLk6aefzlFHHWXdsstZuXJlLr744lx11VX5xje+kcQ1l93Dttau6y67g4cffjjTpk1LknTt2jU1NTU5+uijXXd3UE1bW1tbtYeolA//Cl5zc3Pa2toyceLENDY2Vnss2KZ169bluuuuy7Jly1JTU5Mrr7wyPXr0yJgxY7J+/fr069cvEyZMSOfOnas9Kmz25ptvZtSoUZk9e3ZeffXVba7X2bNnZ9asWWlra8tf/dVf5fTTT6/22Ozh/ve6XbBgQcaPH58uXbqkV69eGT9+fOrr661bdikTJkzIv/3bv6Vfv36bn7vhhhsyYcIE11x2adtauyNHjsykSZNcd9mlvf/++7nuuuuycuXKbNiwIZdeemkaGxv9W3cH7VEBCgAAAIDK26NuwQMAAACg8gQoAAAAAIoSoAAAAAAoSoACAAAAoCgBCgAAAICiBCgAgN3cqlWr8q//+q/VHgMAYLsEKACA3dxLL72UJ554otpjAABsV221BwAA2JOsXbs21113XZYtW5b169fn+uuvz6xZs7J06dJs3LgxF110Uc4444wMGzYsY8eOTWNjY+6///6sXLkyZ599dr7//e/noIMOytKlS/O5z30uN998c+666668+OKLmTVrVr71rW9V+xQBALYiQAEAVNDMmTPzqU99KpMnT05zc3Mee+yx9OjRI5MmTUpLS0vOOeecnHjiidt9/2uvvZZ77703Xbt2zamnnpoVK1Zk+PDhmTlzpvgEAOyy3IIHAFBBS5YsyYABA5IkRxxxRFasWJHPf/7zSZL6+vo0NjZm6dKlW7ynra1t8+M+ffqkvr4+nTt3zgEHHJDW1tbKDQ8AsJMEKACACmpsbMz8+fOTJEuXLs2cOXPyzDPPJElaWlrS3Nyc3r17p66uLitWrCDLYjIAAAC5SURBVEiSLFy4cPP7a2pqtjpmp06dsmnTpgpMDwCwcwQoAIAKOu+88/Lmm2/m/PPPz9VXX5177rknq1atypAhQ3LBBRfksssuS8+ePXPBBRdk3LhxueSSS7Jx48Y/esw+ffqkubk506dPr8xJAADsoJq2/72nGwAAAAA+ZnZAAQAAAFCUAAUAAABAUQIUAAAAAEUJUAAAAAAUJUABAAAAUJQABQAAAEBRAhQAAAAARQlQAAAAABT1/wFLc5BPzjH6YwAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 1440x504 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "hidden": true,
        "id": "N_ZeR4Kk9tB8"
      },
      "source": [
        "**Feature: Material**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "kGedMD9W9tB8",
        "outputId": "1a57449d-acb1-407c-eb96-3b420f79ac9a"
      },
      "source": [
        "# Visualize the data\n",
        "plt.figure(figsize=(20,7)) \n",
        "sns.countplot(y=\"Material\", data=df_data);"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 1440x504 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "DPiW4KQW9tB8",
        "outputId": "63c9f7ab-c340-4bc2-91ea-1e04dacad422"
      },
      "source": [
        "# Fix the groups\n",
        "\n",
        "# natural group\n",
        "df_data.loc[df_data['Material'] == 'silk', 'Material'] = 'natural'\n",
        "df_data.loc[df_data['Material'] == 'cotton', 'Material'] = 'natural'\n",
        "df_data.loc[df_data['Material'] == 'lace', 'Material'] = 'natural'\n",
        "df_data.loc[df_data['Material'] == 'cashmere', 'Material'] = 'natural'\n",
        "df_data.loc[df_data['Material'] == 'sill', 'Material'] = 'natural'\n",
        "df_data.loc[df_data['Material'] == 'wool', 'Material'] = 'natural'\n",
        "df_data.loc[df_data['Material'] == 'shiffon', 'Material'] = 'natural'\n",
        "df_data.loc[df_data['Material'] == 'milksilk', 'Material'] = 'natural'\n",
        "df_data.loc[df_data['Material'] == 'lace', 'Material'] = 'natural'\n",
        "df_data.loc[df_data['Material'] == 'knitting', 'Material'] = 'natural'\n",
        "df_data.loc[df_data['Material'] == 'linen', 'Material'] = 'natural'\n",
        "\n",
        "# non-natural group\n",
        "df_data.loc[df_data['Material'] == 'polyster', 'Material'] = 'non-natural'\n",
        "df_data.loc[df_data['Material'] == 'microfiber', 'Material'] = 'non-natural'\n",
        "df_data.loc[df_data['Material'] == 'chiffonfabric', 'Material'] = 'non-natural'\n",
        "df_data.loc[df_data['Material'] == 'nylon', 'Material'] = 'non-natural'\n",
        "df_data.loc[df_data['Material'] == 'rayon', 'Material'] = 'non-natural'\n",
        "df_data.loc[df_data['Material'] == 'acrylic', 'Material'] = 'non-natural'\n",
        "df_data.loc[df_data['Material'] == 'lycra', 'Material'] = 'non-natural'\n",
        "df_data.loc[df_data['Material'] == 'spandex', 'Material'] = 'non-natural'\n",
        "\n",
        "\n",
        "# other group\n",
        "df_data.loc[df_data['Material'] == 'mix', 'Material'] = 'other'\n",
        "df_data.loc[df_data['Material'] == 'modal', 'Material'] = 'other'\n",
        "df_data.loc[df_data['Material'] == 'viscos', 'Material'] = 'other'\n",
        "df_data.loc[df_data['Material'] == 'model', 'Material'] = 'other'\n",
        "\n",
        "\n",
        "# Visualize the data\n",
        "plt.figure(figsize=(20,7)) \n",
        "sns.countplot(y=\"Material\", data=df_data);"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAABK4AAAGkCAYAAAAYOW2+AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjMsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+AADFEAAAfPUlEQVR4nO3dfZDVdd3/8deygCELhQlpbSiiDpSahaZl0s1kOYZSXKJoRKVldKNJmqGVYsCmIToNqcEVVw3U5WqI0xTdmNM9aYNrJipIoghoCt6QLcFys+f3xzXuT3HZ1nI5H9jH4689Z8/5zvvsfOZzznnyPYeaSqVSCQAAAAAUpke1BwAAAACA9ghXAAAAABRJuAIAAACgSMIVAAAAAEUSrgAAAAAoknAFAAAAQJF6VnuA3UlTU1O1RwAAAADY44wYMaLd64Wrl2hnf0hYtmxZhg8fXu0xKJC1QUesD3bG2qAj1gc7Y23QEeuDnan22ujoRCEfFQQAAACgSMIVAAAAAEUSrgAAAAAoknAFAAAAQJGEKwAAAACKJFwBAAAAUCThCgAAAIAiCVcAAAAAFEm4AgAAAKBIwhUAAAAARepZ7QF2NyO+OK/aI1C0JdUegGJZG3TE+mBnrA06Yn2wM7vP2miaMaHaIwCFc8YVAAAAAEUSrgAAAAAoknAFAAAAQJGEKwAAAACKJFwBAAAAUCThCgAAAIAiCVcAAAAAFEm4AgAAAKBIwhUAAAAARRKuAAAAACiScAUAAABAkYQrAAAAAIokXAEAAABQJOEKAAAAgCIJVwAAAAAUSbgCAAAAoEjCFQAAAABFEq4AAAAAKJJwBQAAAECRhCsAAAAAiiRcAQAAAFAk4QoAAACAIglXAAAAABRJuAIAAACgSMIVAAAAAEUSrgAAAAAoknAFAAAAQJGEKwAAAACKJFwBAAAAUCThCgAAAIAiCVcAAAAAFEm4AgAAAKBIwhUAAAAARRKuAAAAACiScAUAAABAkYQrAAAAAIokXAEAAABQJOEKAAAAgCIJVwAAAAAUSbgCAAAAoEjCFQAAAABFEq4AAAAAKJJwBQAAAECRhCsAAAAAiiRcAQAAAFAk4QoAAACAIglXAAAAABRpjwtXS5YsyfLly/+jYyxcuDBXXXXVyzQRAAAAAP+OPS5c3XzzzVm3bl21xwAAAADgP9SzKw66cOHC/Pa3v83mzZuzevXqfPKTn8ywYcMyderU1NbWZq+99srUqVPT2tqaCy64IPvtt1/WrFmTww8/PJdffvkLjrV27dp2b/P4449nypQpaWlpyYYNG/LZz342++23X37/+9/nvvvuy8EHH5yxY8dm8eLFSZJJkyZl3LhxefTRR3PzzTentbU15513XlauXJlbb70127ZtS79+/TJr1qyu+JMAAAAA8BJ1SbhKkubm5sydOzerVq3KxIkTs/fee2f69OkZPnx4brvttlxxxRW56KKLsmrVqsydOzd9+vTJe9/73qxfvz4DBw58wbHau81DDz2Uj3/84znmmGNy1113ZdasWfnud7+b448/PieddFJe+9rX7nS2/v375/rrr09ra2uampryve99Lz169MjZZ5+dpUuXdtWfBAAAAICXoMvC1bBhw5Ik+++/f7Zs2ZLm5uYMHz48SXL00Udn5syZSZLBgwenrq4uSTJw4MC0tLTky1/+clavXp0BAwbkoosuavc2AwcOzPXXX58FCxakpqYm27Zt63CeSqXS9vOQIUOSJD169EivXr3yhS98IXvvvXcef/zxf3kcAAAAAHaNLgtXNTU1L7g8aNCgLF++PMOGDcuSJUty4IEHtnu7JJk+fXrbz2vXrm33Nt/85jczduzYvPOd78zNN9+cW265pe14z0Wqbdu2ZePGjenVq1cefPDBtvv26PF/X+21fPny3HbbbfnhD3+YTZs2ZcyYMS8IXAAAAABUT5eFqx1NmzYtU6dOTaVSSW1tbRoaGv6j45144omZPn16Zs+enf333z/PPPNMkuRNb3pTrrrqqtTX12fChAk5/fTTU19f3+5HBw844ID06dMnY8aMSe/evTNw4EBf7A4AAABQiJqKU4w6rampKec03lftMQAAAPYITTMmVHuEbmXZsmVtX+EDz1fttdHU1JQRI0a0+7seu3gWAAAAAOgU4QoAAACAIglXAAAAABRJuAIAAACgSMIVAAAAAEUSrgAAAAAoknAFAAAAQJGEKwAAAACKJFwBAAAAUCThCgAAAIAiCVcAAAAAFEm4AgAAAKBIwhUAAAAARRKuAAAAACiScAUAAABAkYQrAAAAAIokXAEAAABQJOEKAAAAgCIJVwAAAAAUSbgCAAAAoEjCFQAAAABFEq4AAAAAKJJwBQAAAECRhCsAAAAA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O3ZspVJpf79Yt25dZdSoUZWWlpbKs88+2/Yze7Yd18aHP/zhyv3331+pVCqVG264odLQ0FCpVCqVcePGVZ566qmqzUl17Lg+2nsusXd0Xzuuj+ds2LChcsopp1SeeOKJSqVi/+hu2nsfu7u87vBP/p3Q1NSU448/Pkly5JFH5t57763yRFTTiSeemM9//vNtl2tra3PvvffmN7/5TT784Q/nkksuSXNzcxUnpJqWL1+eTZs25ayzzsqECRNy991357777stb3/rWJMnIkSPzxz/+scpTUm1Lly7Ngw8+mNNPP93+0c0NHjw4s2bNarvc3n5xzz335M1vfnN69+6dfv36ZfDgwVm+fHm1RmYX2XFtXH311Rk+fHiSZPv27dlrr73S2tqaRx55JJdeemnGjRuXBQsWVGtcdrEd10d7zyX2ju5rx/XxnFmzZmX8+PEZNGiQ/aMbau997O7yukO46oTm5ubU1dW1Xa6trc22bduqOBHV1Ldv39TV1aW5uTnnnXdezj///BxxxBG56KKL8oMf/CCvf/3rc+2111Z7TKrkFa94Rc4+++zMnTs3l19+eS688MJUKpXU1NQk+b/1849//KPKU1Jts2fPzmc/+9kksX90c+9///vTs+f//+aG9vaL5ubmF3x0o2/fvgJnN7Dj2hg0aFCS5K677sr3v//9fOxjH8s///nPjB8/PjNmzMh3vvOd/O///m/V31ywa+y4Ptp7LrF3dF87ro8keeqpp3L77bdnzJgxSWL/6Ibaex+7u7zuEK46oa6uLhs3bmy73Nra+qKNgO7lb3/7WyZMmJDRo0fn5JNPzgknnJDDDjssSXLCCSfk/vvvr/KEVMuQIUNyyimnpKamJkOGDMmrXvWqPPXUU22/37hxY/r371/FCam2Z599Ng899FCOPfbYJLF/8ALP//675/aLHV+HbNy40XeQdFM//elPc9lll2XOnDnZZ5990qdPn0yYMCF9+vRJXV1djj32WG88u6n2nkvsHTzfz3/+84waNSq1tbVJYv/opnZ8H7u7vO4QrjrhLW95S373u98lSe6+++4ceuihVZ6IanryySdz1lln5Ytf/GJOPfXUJMnZZ5+de+65J0ly++23541vfGM1R6SKFixYkCuuuCJJ8sQTT6S5uTnHHXdc/vSnPyVJfve73+Woo46q5ohU2ZIlS/L2t7+97bL9g+d7wxve8KL94ogjjkhTU1NaWlryj3/8IytXrvRapBv60Y9+lO9///uZP39+Xv/61ydJVq1alTPPPDPbt2/P1q1bc9ddd9lDuqn2nkvsHTzf7bffnpEjR7Zdtn90P+29j91dXnc4bagTTjjhhCxevDjjxo1LpVJJQ0NDtUeiir797W/n2WefzXXXXZfrrrsuSTJ58uQ0NDSkV69e2XfffTN16tQqT0m1nHrqqbn44otzxhlnpKamJg0NDRkwYEC++tWv5uqrr85BBx2U97///dUekyp6+OGHU19f33Z5ypQpmTp1qv2DJMmXvvSlF+0XtbW1+chHPpIzzzwzlUolkyZNyl577VXtUdmFtm/fnunTp2f//ffPueeemyQ5+uijc9555+Xkk0/Oaaedll69emX06NE55JBDqjwt1dDec0ldXZ29gzYPP/xwW/ROkqFDh9o/upn23sd++ctfzrRp04p/3VFTqVQqVZ0AAAAAANrho4IAAAAAFEm4AgAAAKBIwhUAAAAARRKuAAAAACiScAUAAABAkYQrAIBuasOGDfnxj39c7TEAAHZKuAIA6KYeeOCB/OpXv6r2GAAAO9Wz2gMAAPCvbd68ORdffHEee+yxbN26NZdcckluvPHGrFmzJtu3b8/HP/7xnHTSSfnIRz6SKVOmZOjQobnhhhvy5JNP5kMf+lAuuOCC7LffflmzZk0OP/zwXH755fn2t7+d5cuX58Ybb8zpp59e7YcIAPAiwhUAwG6gsbExr3vd63LNNddkxYoVue222zJgwIDMmDEjzc3NGTNmTI499tid3n/VqlWZO3du+vTpk/e+971Zv359Jk6cmMbGRtEKACiWjwoCAOwGHnrooRx55JFJkkMPPTTr16/P0UcfnSSpq6vL0KFDs2bNmhfcp1KptP08ePDg1NXVpba2NgMHDkxLS8uuGx4A4N8kXAEA7AaGDh2apUuXJknWrFmTRYsW5c4770ySNDc3Z8WKFamvr0/v3r2zfv36JMn999/fdv+ampoXHbNHjx5pbW3dBdMDAPx7hCsAgN3AuHHjsnbt2owfPz4XXXRRvvOd72TDhg0544wzMmHChHzuc5/Lq1/96kyYMCFf+9rXcvbZZ2f79u0dHnPw4MFZsWJFvve97+2aBwEA8BLVVJ5/DjkAAAAAFMIZVwAAAAAUSbgCAAAAoEjCFQAAAABFEq4AAAAAKJJwBQAAAECRhCsAAAAAiiRcAQAAAFAk4QoAAACAIv0/GJh6sXGpKeAAAAAASUVORK5CYII=\n",
            "text/plain": [
              "<Figure size 1440x504 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "hidden": true,
        "id": "RzMkNF2m9tB8"
      },
      "source": [
        "**Feature: FabricType**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "GIZcnAxK9tB8",
        "outputId": "d089497f-70d4-46e7-a961-0a6ad279c74e"
      },
      "source": [
        "# Visualize the data\n",
        "plt.figure(figsize=(20,7)) \n",
        "sns.countplot(y=\"FabricType\", data=df_data);"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x504 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "iLqYBsqr9tB8",
        "outputId": "79f945d0-cca0-47de-dd6e-64390492401e"
      },
      "source": [
        "# Fix the groups\n",
        "\n",
        "# flannel group\n",
        "df_data.loc[df_data['FabricType'] == 'flannael', 'FabricType'] = 'flannel'\n",
        "df_data.loc[df_data['FabricType'] == 'flannel', 'FabricType'] = 'flannel'\n",
        "\n",
        "# Woolen group\n",
        "df_data.loc[df_data['FabricType'] == 'woolen', 'FabricType'] = 'woolen'\n",
        "df_data.loc[df_data['FabricType'] == 'knitting', 'FabricType'] = 'woolen'\n",
        "df_data.loc[df_data['FabricType'] == 'wollen', 'FabricType'] = 'woolen'\n",
        "df_data.loc[df_data['FabricType'] == 'knitted', 'FabricType'] = 'woolen'\n",
        "\n",
        "# satin group\n",
        "df_data.loc[df_data['FabricType'] == 'sattin', 'FabricType'] = 'satin'\n",
        "df_data.loc[df_data['FabricType'] == 'satin', 'FabricType'] = 'satin'\n",
        "\n",
        "# Visualize the data\n",
        "plt.figure(figsize=(20,7)) \n",
        "sns.countplot(y=\"FabricType\", data=df_data);"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x504 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "hidden": true,
        "id": "Rwxt-WFm9tB8"
      },
      "source": [
        "**Feature: Decoration**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "OzUi9o9d9tB8",
        "outputId": "3722e9b7-44fe-483c-87a2-a7077f1c4d5b"
      },
      "source": [
        "# Visualize the data\n",
        "plt.figure(figsize=(20,7)) \n",
        "sns.countplot(y=\"Decoration\", data=df_data);"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x504 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "hidden": true,
        "id": "TaXmc-5T9tB9"
      },
      "source": [
        "**Finally since Dress_ID has soo many unique values it is unlikely to help in training so we will drop this feature**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "c86G9e-J9tB9"
      },
      "source": [
        "df_data.drop('Dress_ID', axis=1, inplace=True)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "K_YDXvIF9tB9",
        "outputId": "6c6d31cb-facd-4b18-f7ca-ee7bca6644cb"
      },
      "source": [
        "df_data"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Style</th>\n",
              "      <th>Price</th>\n",
              "      <th>Rating</th>\n",
              "      <th>Size</th>\n",
              "      <th>Season</th>\n",
              "      <th>NeckLine</th>\n",
              "      <th>SleeveLength</th>\n",
              "      <th>waiseline</th>\n",
              "      <th>Material</th>\n",
              "      <th>FabricType</th>\n",
              "      <th>Decoration</th>\n",
              "      <th>Pattern Type</th>\n",
              "      <th>Recommendation</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>animal</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>designer</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>animal</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>vintage</td>\n",
              "      <td>high</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brief</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>embroidary</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>designer</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>bow</td>\n",
              "      <td>dot</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>NaN</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Novelty</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>lace</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Flare</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>beading</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Flare</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>NaN</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>animal</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>lace</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>jersey</td>\n",
              "      <td>NaN</td>\n",
              "      <td>animal</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>NaN</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>NaN</td>\n",
              "      <td>other</td>\n",
              "      <td>other</td>\n",
              "      <td>lace</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>NaN</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Brief</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>colored</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>NaN</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>beading</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Brief</td>\n",
              "      <td>low</td>\n",
              "      <td>4.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>pockets</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>S</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>sequined</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>jersey</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>striped</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>designer</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>bow</td>\n",
              "      <td>dot</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>applique</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>animal</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>Brief</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>bow</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>Brief</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>button</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>Brief</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>Brief</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>applique</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>geometric</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>dot</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>animal</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>51</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>animal</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>53</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>geometric</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>Novelty</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>winter</td>\n",
              "      <td>designer</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>56</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>S</td>\n",
              "      <td>winter</td>\n",
              "      <td>designer</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>57</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>58</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>low</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>59</th>\n",
              "      <td>work</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>bow</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>60</th>\n",
              "      <td>cute</td>\n",
              "      <td>high</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>61</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>plaid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>animal</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>63</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>64</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>65</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>beading</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>66</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>applique</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>67</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>S</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>68</th>\n",
              "      <td>work</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>70</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>batik</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>71</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>satin</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>72</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.20000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>flannel</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>73</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>worsted</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>74</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>S</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>NaN</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>bow</td>\n",
              "      <td>dot</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>76</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>NaN</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>geometric</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>78</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>79</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>high</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>80</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>animal</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>81</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>82</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>worsted</td>\n",
              "      <td>NaN</td>\n",
              "      <td>striped</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>83</th>\n",
              "      <td>vintage</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>84</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>85</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>86</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>beading</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>87</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>88</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>lace</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>89</th>\n",
              "      <td>Brief</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>colored</td>\n",
              "      <td>short</td>\n",
              "      <td>NaN</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>90</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>applique</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>pockets</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>92</th>\n",
              "      <td>OL</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>colored</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>93</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>94</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>animal</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>96</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>97</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98</th>\n",
              "      <td>vintage</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>S</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>jersey</td>\n",
              "      <td>applique</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>fashion</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>designer</td>\n",
              "      <td>full</td>\n",
              "      <td>NaN</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>sequined</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>102</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>worsted</td>\n",
              "      <td>NaN</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>103</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>animal</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104</th>\n",
              "      <td>work</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>colored</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Tiered</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>105</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>button</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>106</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>dot</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>107</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>108</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>sequined</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>109</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>110</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>111</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>jersey</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>112</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>applique</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>113</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>114</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>117</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>NaN</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>lace</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>118</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>worsted</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>119</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>3.60000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>woolen</td>\n",
              "      <td>beading</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>120</th>\n",
              "      <td>work</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>other</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>121</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>122</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>leopard</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>123</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>124</th>\n",
              "      <td>work</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>jersey</td>\n",
              "      <td>NaN</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>125</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>126</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>bow</td>\n",
              "      <td>dot</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>127</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>beading</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>128</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>129</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>NaN</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>130</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>131</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>132</th>\n",
              "      <td>work</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>133</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>134</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>135</th>\n",
              "      <td>cute</td>\n",
              "      <td>high</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>lace</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>136</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>button</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>137</th>\n",
              "      <td>Novelty</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>138</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>NaN</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>139</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>140</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>141</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>bow</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>142</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>143</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>animal</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>144</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>145</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>146</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>147</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>148</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>NaN</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>149</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>150</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>151</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>winter</td>\n",
              "      <td>designer</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>NaN</td>\n",
              "      <td>plaid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>152</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>153</th>\n",
              "      <td>vintage</td>\n",
              "      <td>high</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>154</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>NaN</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>155</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>156</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>157</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>158</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>159</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>sequined</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>160</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>bow</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>161</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>other</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>embroidary</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>162</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>3.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>163</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>164</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>NaN</td>\n",
              "      <td>natural</td>\n",
              "      <td>worsted</td>\n",
              "      <td>applique</td>\n",
              "      <td>dot</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>165</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>designer</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>other</td>\n",
              "      <td>poplin</td>\n",
              "      <td>applique</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>166</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>bow</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>167</th>\n",
              "      <td>Brief</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>168</th>\n",
              "      <td>Casual</td>\n",
              "      <td>high</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>S</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>dot</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>169</th>\n",
              "      <td>Brief</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>other</td>\n",
              "      <td>NaN</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>170</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>other</td>\n",
              "      <td>worsted</td>\n",
              "      <td>applique</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>171</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>other</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>geometric</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>172</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>jersey</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>173</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>button</td>\n",
              "      <td>striped</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>174</th>\n",
              "      <td>work</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>175</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>leopard</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>176</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>177</th>\n",
              "      <td>Brief</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>other</td>\n",
              "      <td>worsted</td>\n",
              "      <td>sequined</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>178</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>leopard</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>179</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>colored</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>applique</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>180</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>181</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>182</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>floral</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>183</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>colored</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>lace</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>184</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>worsted</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>185</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>designer</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>other</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>186</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>NaN</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>187</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>188</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>beading</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>189</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>S</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>190</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>other</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>191</th>\n",
              "      <td>work</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>192</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>rivet</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>193</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>194</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>animal</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>195</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>applique</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>196</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>197</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>198</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>geometric</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>199</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>embroidary</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>200</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>S</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>dot</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>201</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.10000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>202</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>203</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>sequined</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>204</th>\n",
              "      <td>work</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>205</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>colored</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>206</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>worsted</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>207</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>208</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>worsted</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>209</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>sashes</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>210</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>striped</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>211</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>212</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>worsted</td>\n",
              "      <td>NaN</td>\n",
              "      <td>striped</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>213</th>\n",
              "      <td>work</td>\n",
              "      <td>low</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>214</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>S</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>215</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>dobby</td>\n",
              "      <td>lace</td>\n",
              "      <td>animal</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>216</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>designer</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>217</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>worsted</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>218</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>NaN</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>219</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>220</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>colored</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>221</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>S</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>222</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>223</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>224</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>plaid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>225</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>high</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>woolen</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>226</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>sashes</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>227</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>embroidary</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>228</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>other</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>229</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>230</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>flannel</td>\n",
              "      <td>NaN</td>\n",
              "      <td>striped</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>231</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>232</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>233</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>234</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>235</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>applique</td>\n",
              "      <td>dot</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>236</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>237</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>sashes</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>238</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>beading</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>239</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>240</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>applique</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>241</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>NaN</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>242</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>3.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>243</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>244</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>jersey</td>\n",
              "      <td>feathers</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>245</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>sashes</td>\n",
              "      <td>striped</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>246</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>247</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>button</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>248</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>character</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>249</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>250</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>S</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>251</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>252</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>flowers</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>253</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>254</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>tulle</td>\n",
              "      <td>beading</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>255</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>designer</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>lace</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>256</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>designer</td>\n",
              "      <td>NaN</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>257</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>satin</td>\n",
              "      <td>applique</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>258</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>pearls</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>259</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>260</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>designer</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>261</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>flowers</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>262</th>\n",
              "      <td>party</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>embroidary</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>263</th>\n",
              "      <td>party</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>NaN</td>\n",
              "      <td>full</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>264</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>beading</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>265</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>267</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>organza</td>\n",
              "      <td>beading</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>268</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>beading</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>269</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>beading</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>270</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>L</td>\n",
              "      <td>NaN</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>pleat</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>271</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>S</td>\n",
              "      <td>winter</td>\n",
              "      <td>designer</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>crystal</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>272</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>beading</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>273</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>S</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>274</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.20000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>275</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>276</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.10000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>designer</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>lace</td>\n",
              "      <td>applique</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>277</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>feathers</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>278</th>\n",
              "      <td>Casual</td>\n",
              "      <td>high</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>beading</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>279</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>280</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>other</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>beading</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>281</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>designer</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>282</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>beading</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>283</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>princess</td>\n",
              "      <td>NaN</td>\n",
              "      <td>satin</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>284</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>285</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>button</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>286</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>tulle</td>\n",
              "      <td>ruched</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>287</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>288</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>beading</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>289</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>crystal</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>290</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>flowers</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>291</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>lace</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>292</th>\n",
              "      <td>work</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>NaN</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>293</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>satin</td>\n",
              "      <td>beading</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>294</th>\n",
              "      <td>Casual</td>\n",
              "      <td>high</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>295</th>\n",
              "      <td>Casual</td>\n",
              "      <td>high</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>applique</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>296</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>bow</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>297</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>298</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>299</th>\n",
              "      <td>Casual</td>\n",
              "      <td>high</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>flowers</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>300</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>draped</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>301</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>302</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>303</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>rivet</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>304</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>designer</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>305</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>S</td>\n",
              "      <td>summer</td>\n",
              "      <td>designer</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>306</th>\n",
              "      <td>work</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>colored</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>satin</td>\n",
              "      <td>sashes</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>307</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>308</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>309</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>sequined</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>310</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>311</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.20000</td>\n",
              "      <td>S</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>other</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>312</th>\n",
              "      <td>Novelty</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>satin</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>313</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>crystal</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>314</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>3.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>315</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>lace</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>316</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>317</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>318</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>poplin</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>319</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>320</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>striped</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>321</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>colored</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>322</th>\n",
              "      <td>Novelty</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.20000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>animal</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>324</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>applique</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>325</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>326</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>jersey</td>\n",
              "      <td>sashes</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>327</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>colored</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>applique</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>328</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>329</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>330</th>\n",
              "      <td>Novelty</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>lace</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>331</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>332</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>sequined</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>333</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>334</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>335</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>ruched</td>\n",
              "      <td>striped</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>336</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>S</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>337</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>sashes</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>338</th>\n",
              "      <td>work</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>339</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>340</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>341</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>342</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>343</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>344</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>345</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>346</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>347</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>rivet</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>348</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>349</th>\n",
              "      <td>Casual</td>\n",
              "      <td>high</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>NaN</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>350</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>worsted</td>\n",
              "      <td>lace</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>351</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>352</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>NaN</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>353</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>designer</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>354</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>NaN</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>ruched</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>355</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Corduroy</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>356</th>\n",
              "      <td>vintage</td>\n",
              "      <td>low</td>\n",
              "      <td>4.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>designer</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>woolen</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>357</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>358</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>tassel</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>359</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>S</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>360</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>S</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>361</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>sashes</td>\n",
              "      <td>splice</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>vintage</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>batik</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.10000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.20000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>365</th>\n",
              "      <td>Brief</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>366</th>\n",
              "      <td>Brief</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>367</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>S</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>368</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>369</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>beading</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>370</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>371</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>striped</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>372</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>spring</td>\n",
              "      <td>designer</td>\n",
              "      <td>full</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>worsted</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>373</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>1.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>374</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.10000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>375</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>376</th>\n",
              "      <td>work</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>377</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>jersey</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>379</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>striped</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>380</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>applique</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>381</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>jersey</td>\n",
              "      <td>pockets</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>382</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>383</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>leapord</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>384</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>NaN</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>385</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>striped</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>386</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>striped</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>387</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>388</th>\n",
              "      <td>work</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>worsted</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>389</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.10000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>390</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>391</th>\n",
              "      <td>Brief</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>animal</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>392</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>393</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>NaN</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>394</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>applique</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>395</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>sequined</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>396</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>397</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>colored</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>dot</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>398</th>\n",
              "      <td>Casual</td>\n",
              "      <td>high</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>399</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>400</th>\n",
              "      <td>Brief</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>401</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>colored</td>\n",
              "      <td>full</td>\n",
              "      <td>NaN</td>\n",
              "      <td>natural</td>\n",
              "      <td>woolen</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>402</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>shiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>animal</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>403</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>404</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>S</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>405</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>colored</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>sashes</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>406</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>3.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>designer</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>sashes</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>407</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>shiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>408</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>plain</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>409</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>shiffon</td>\n",
              "      <td>pockets</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>410</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>other</td>\n",
              "      <td>jersey</td>\n",
              "      <td>plain</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>411</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>colored</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>dot</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>412</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>animal</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>413</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>414</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>other</td>\n",
              "      <td>worsted</td>\n",
              "      <td>lace</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>415</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>shiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>416</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>NaN</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>417</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>beading</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>418</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>419</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>shiffon</td>\n",
              "      <td>bow</td>\n",
              "      <td>dot</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>420</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>animal</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>421</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>422</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.20000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>worsted</td>\n",
              "      <td>NaN</td>\n",
              "      <td>striped</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>423</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>dropped</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>424</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>shiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>425</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>dot</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>426</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>colored</td>\n",
              "      <td>short</td>\n",
              "      <td>NaN</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>427</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>floral</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>428</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>sequined</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>429</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>worsted</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>430</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>woolen</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>431</th>\n",
              "      <td>Brief</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>432</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>433</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>434</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>shiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>435</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>colored</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>436</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>shiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>437</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>colored</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>other</td>\n",
              "      <td>NaN</td>\n",
              "      <td>bow</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>438</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>439</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>440</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>441</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>NaN</td>\n",
              "      <td>dropped</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>442</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>colored</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>other</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>443</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>satin</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>444</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>striped</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>445</th>\n",
              "      <td>Brief</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>shiffon</td>\n",
              "      <td>sequined</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>446</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>high</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>other</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>striped</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>447</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>colored</td>\n",
              "      <td>full</td>\n",
              "      <td>dropped</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>448</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>S</td>\n",
              "      <td>summer</td>\n",
              "      <td>colored</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>bow</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>449</th>\n",
              "      <td>Novelty</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>none</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>450</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>none</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>451</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>S</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>452</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>453</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>jersey</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>454</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>designer</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>455</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>456</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>dropped</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>457</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>458</th>\n",
              "      <td>work</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>459</th>\n",
              "      <td>Novelty</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>460</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>draped</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>461</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>462</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>dobby</td>\n",
              "      <td>lace</td>\n",
              "      <td>animal</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>463</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>464</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>465</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>NaN</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>466</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>467</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>468</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>469</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>470</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>471</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>animal</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>472</th>\n",
              "      <td>cute</td>\n",
              "      <td>high</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>terry</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>473</th>\n",
              "      <td>work</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>designer</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>474</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>475</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>476</th>\n",
              "      <td>Casual</td>\n",
              "      <td>high</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>sequined</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>477</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>478</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>479</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>worsted</td>\n",
              "      <td>lace</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>480</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>pockets</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>481</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sequined</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>482</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>beading</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>483</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>484</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>485</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>NaN</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>486</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>cascading</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>487</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>sequined</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>488</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>bow</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>489</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>490</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>colored</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>bow</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>491</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>492</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>493</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>none</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>494</th>\n",
              "      <td>Brief</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>NaN</td>\n",
              "      <td>striped</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>495</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>496</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>497</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>NaN</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>498</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>applique</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>499</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>Corduroy</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "        Style   Price  Rating Size  Season  NeckLine SleeveLength waiseline  \\\n",
              "0        Sexy     low 4.60000    M  summer      neck   sleeveless    empire   \n",
              "1      Casual     low 0.00000    L  summer      neck     designer   natural   \n",
              "2     vintage    high 0.00000    L  autumn      neck         full   natural   \n",
              "3       Brief  medium 4.60000    L  spring      neck         full   natural   \n",
              "4        cute     low 4.50000    M  summer      neck     designer   natural   \n",
              "5    bohemian     low 0.00000    M  summer      neck   sleeveless    empire   \n",
              "6      Casual  medium 0.00000   XL  summer      neck         full       NaN   \n",
              "7     Novelty  medium 0.00000   XL  autumn      neck        short   natural   \n",
              "8       Flare  medium 0.00000   XL  spring      neck        short    empire   \n",
              "9    bohemian     low 0.00000   XL  summer      neck   sleeveless   natural   \n",
              "10      party  medium 5.00000   XL  summer      neck         full   natural   \n",
              "11      Flare  medium 0.00000   XL  spring      neck        short       NaN   \n",
              "12       Sexy     low 4.70000    M  winter      neck        short       NaN   \n",
              "13    vintage  medium 4.80000    M  summer      neck        short    empire   \n",
              "14     Casual     low 5.00000    M  summer      neck        short       NaN   \n",
              "15     Casual     low 0.00000   XL  winter      neck         full       NaN   \n",
              "16       cute  medium 4.70000    L  spring      neck        short       NaN   \n",
              "17   bohemian  medium 5.00000   XL  autumn      neck         full   natural   \n",
              "18      Brief  medium 0.00000    M  winter   colored        short   natural   \n",
              "19       Sexy  medium 5.00000    M  autumn      neck   sleeveless    empire   \n",
              "20       Sexy  medium 4.50000    L  autumn      neck         full       NaN   \n",
              "21     Casual     low 4.30000    M  summer      neck   sleeveless   natural   \n",
              "22      Brief     low 4.00000   XL  summer      neck        short   natural   \n",
              "23       Sexy  medium 4.70000    S  summer      neck   sleeveless    empire   \n",
              "24       Sexy  medium 0.00000   XL  autumn      neck   sleeveless   natural   \n",
              "25       Sexy  medium 0.00000    M  autumn      neck   sleeveless    empire   \n",
              "26       Sexy  medium 4.70000    M  spring      neck   sleeveless   natural   \n",
              "27     Casual     low 0.00000    L  summer      neck   sleeveless   natural   \n",
              "28       cute     low 4.30000   XL  autumn      neck   sleeveless   natural   \n",
              "29       cute     low 4.70000    M  spring  designer        short    empire   \n",
              "30     Casual  medium 4.60000    L  autumn      neck   sleeveless    empire   \n",
              "31     Casual     low 0.00000    M  spring      neck   sleeveless   natural   \n",
              "32     Casual  medium 4.40000    L  autumn      neck   sleeveless   natural   \n",
              "33      Brief  medium 4.30000    L  spring      neck   sleeveless    empire   \n",
              "34      party    high 4.70000    M  spring      neck        short       NaN   \n",
              "35     Casual     low 4.60000   XL  winter      neck         full   natural   \n",
              "36    vintage  medium 4.60000   XL  winter      neck         full   natural   \n",
              "37      Brief  medium 0.00000    M  autumn      neck        short   natural   \n",
              "38      party  medium 4.60000    M  winter      neck   sleeveless   natural   \n",
              "39     Casual  medium 4.50000    M  spring      neck        short    empire   \n",
              "40      Brief  medium 5.00000   XL  spring      neck   sleeveless   natural   \n",
              "41      Brief     low 4.40000    L  autumn      neck        short   natural   \n",
              "42     Casual  medium 4.80000    M  winter      neck        short   natural   \n",
              "43     Casual     low 4.80000   XL  spring      neck   sleeveless   natural   \n",
              "44    vintage  medium 4.80000    M  winter      neck   sleeveless   natural   \n",
              "45       Sexy  medium 0.00000    M  winter      neck        short   natural   \n",
              "46       Sexy  medium 4.80000    L  spring      neck        short    empire   \n",
              "47     Casual  medium 0.00000    M  summer      neck        short   natural   \n",
              "48     Casual     low 4.70000    M  summer      neck   sleeveless    empire   \n",
              "49     Casual  medium 0.00000    L  winter      neck         full    empire   \n",
              "50       Sexy     low 5.00000   XL  summer      neck   sleeveless    empire   \n",
              "51     Casual     low 4.30000   XL  summer      neck   sleeveless       NaN   \n",
              "52     Casual  medium 0.00000    L  spring      neck        short   natural   \n",
              "53     Casual  medium 4.60000   XL  autumn      neck   sleeveless   natural   \n",
              "54       Sexy  medium 4.50000    M  spring      neck        short   natural   \n",
              "55    Novelty  medium 0.00000    S  winter  designer         full   natural   \n",
              "56     Casual  medium 4.90000    S  winter  designer         full   natural   \n",
              "57       Sexy     low 4.60000    L  autumn      neck   sleeveless   natural   \n",
              "58   bohemian     low 4.50000    M  summer      neck   sleeveless   natural   \n",
              "59       work  medium 0.00000    M  autumn      neck   sleeveless   natural   \n",
              "60       cute    high 0.00000    M  spring      neck         full   natural   \n",
              "61     Casual  medium 0.00000   XL  spring      neck        short   natural   \n",
              "62     Casual  medium 5.00000    M  summer      neck        short    empire   \n",
              "63     Casual  medium 4.70000    M  spring      neck   sleeveless   natural   \n",
              "64       Sexy     low 4.00000    S  autumn      neck   sleeveless    empire   \n",
              "65     Casual  medium 5.00000    M  autumn      neck        short   natural   \n",
              "66     Casual     low 0.00000   XL  summer      neck        short   natural   \n",
              "67     Casual  medium 4.50000    S  winter      neck         full   natural   \n",
              "68       work  medium 4.80000    L  summer      neck        short   natural   \n",
              "69     Casual  medium 0.00000    M  autumn      neck        short    empire   \n",
              "70   bohemian  medium 5.00000   XL  summer      neck   sleeveless   natural   \n",
              "71       Sexy     low 0.00000    M  spring      neck        short   natural   \n",
              "72       Sexy  medium 4.20000    M  winter      neck   sleeveless   natural   \n",
              "73     Casual     low 4.80000   XL  spring      neck         full   natural   \n",
              "74     Casual     low 4.40000    S  autumn      neck   sleeveless   natural   \n",
              "75     Casual     low 4.70000    L  spring      neck        short       NaN   \n",
              "76     Casual  medium 5.00000   XL  winter      neck         full       NaN   \n",
              "77     Casual     low 0.00000   XL  spring      neck   sleeveless       NaN   \n",
              "78     Casual  medium 0.00000   XL  spring      neck   sleeveless   natural   \n",
              "79   bohemian    high 4.70000   XL  winter      neck   sleeveless       NaN   \n",
              "80     Casual     low 5.00000    M  summer      neck   sleeveless    empire   \n",
              "81      party  medium 4.70000    M  spring      neck   sleeveless   natural   \n",
              "82       Sexy     low 5.00000   XL  spring      neck         full   natural   \n",
              "83    vintage     low 4.60000    M  summer      neck        short   natural   \n",
              "84     Casual  medium 0.00000   XL  winter      neck        short    empire   \n",
              "85     Casual     low 4.90000    L  summer      neck        short       NaN   \n",
              "86     Casual     low 0.00000    S  autumn      neck         full   natural   \n",
              "87       Sexy  medium 4.00000    S  autumn      neck   sleeveless       NaN   \n",
              "88       Sexy     low 5.00000    M  autumn      neck         full   natural   \n",
              "89      Brief  medium 4.60000    M  winter   colored        short       NaN   \n",
              "90     Casual  medium 0.00000    L  spring      neck   sleeveless   natural   \n",
              "91     Casual  medium 4.80000    L  winter      neck        short   natural   \n",
              "92         OL  medium 0.00000    M  winter   colored        short   natural   \n",
              "93       Sexy     low 4.80000    M  spring      neck        short   natural   \n",
              "94     Casual  medium 0.00000    S  spring      neck         full       NaN   \n",
              "95     Casual  medium 0.00000    M  spring      neck        short   natural   \n",
              "96     Casual  medium 0.00000    M  spring      neck   sleeveless   natural   \n",
              "97     Casual  medium 0.00000   XL  winter      neck         full   natural   \n",
              "98    vintage     low 4.80000    S  summer      neck        short   natural   \n",
              "99       Sexy     low 4.80000    L  summer      neck         full   natural   \n",
              "100   fashion  medium 4.00000   XL  summer  designer         full       NaN   \n",
              "101    Casual  medium 4.70000    L  summer      neck        short   natural   \n",
              "102    Casual     low 0.00000   XL  winter      neck        short   natural   \n",
              "103  bohemian     low 4.80000   XL  summer      neck        short       NaN   \n",
              "104      work  medium 4.60000    L  winter   colored        short    empire   \n",
              "105   vintage  medium 4.70000    L  summer      neck        short   natural   \n",
              "106      cute     low 4.70000    M  spring      neck        short    empire   \n",
              "107    Casual     low 4.60000   XL  autumn      neck         full   natural   \n",
              "108    Casual  medium 0.00000   XL  spring      neck   sleeveless   natural   \n",
              "109    Casual  medium 4.70000    L  autumn      neck        short       NaN   \n",
              "110      Sexy  medium 0.00000    L  autumn      neck   sleeveless    empire   \n",
              "111    Casual     low 4.70000   XL  winter      neck   sleeveless   natural   \n",
              "112    Casual  medium 0.00000    M  autumn      neck        short    empire   \n",
              "113      cute  medium 4.80000    L  autumn      neck   sleeveless   natural   \n",
              "114     party  medium 5.00000    M  spring      neck        short   natural   \n",
              "115      cute  medium 4.30000    L  winter      neck   sleeveless   natural   \n",
              "116    Casual  medium 4.50000    L  spring      neck        short   natural   \n",
              "117    Casual     low 4.70000    L  autumn      neck         full       NaN   \n",
              "118    Casual     low 4.50000   XL  autumn      neck        short   natural   \n",
              "119      Sexy  medium 3.60000    L  winter      neck         full   natural   \n",
              "120      work  medium 4.80000    L  winter      neck        short   natural   \n",
              "121   vintage  medium 0.00000   XL  summer      neck   sleeveless       NaN   \n",
              "122      Sexy     low 4.60000   XL  spring      neck         full   natural   \n",
              "123      Sexy     low 0.00000   XL  winter      neck   sleeveless    empire   \n",
              "124      work  medium 4.60000    L  spring      neck        short    empire   \n",
              "125    Casual  medium 4.40000    M  summer      neck        short    empire   \n",
              "126      cute     low 4.90000    M  autumn      neck        short   natural   \n",
              "127      Sexy     low 4.60000   XL  summer      neck   sleeveless   natural   \n",
              "128     party  medium 4.40000   XL  autumn      neck        short   natural   \n",
              "129    Casual  medium 0.00000   XL  spring      neck        short       NaN   \n",
              "130    Casual     low 0.00000    M  summer      neck         full   natural   \n",
              "131      Sexy  medium 4.60000    M  winter      neck         full   natural   \n",
              "132      work  medium 4.60000    M  spring      neck         full       NaN   \n",
              "133      cute  medium 4.70000    L  winter      neck   sleeveless   natural   \n",
              "134  bohemian  medium 4.70000    L  autumn      neck   sleeveless   natural   \n",
              "135      cute    high 0.00000    M  winter      neck        short    empire   \n",
              "136    Casual  medium 0.00000   XL  winter      neck        short    empire   \n",
              "137   Novelty  medium 4.90000    L  autumn      neck        short   natural   \n",
              "138    Casual     low 4.70000    M  autumn      neck         full       NaN   \n",
              "139      cute  medium 4.30000   XL  summer      neck   sleeveless       NaN   \n",
              "140      Sexy     low 0.00000   XL  autumn      neck        short    empire   \n",
              "141      cute     low 4.70000   XL  summer      neck        short    empire   \n",
              "142      Sexy     low 4.50000    L  spring      neck   sleeveless       NaN   \n",
              "143    Casual  medium 4.70000    M  autumn      neck   sleeveless       NaN   \n",
              "144    Casual  medium 0.00000    L  spring      neck   sleeveless   natural   \n",
              "145      cute     low 4.70000   XL  summer      neck   sleeveless       NaN   \n",
              "146    Casual     low 4.40000   XL  summer  designer   sleeveless   natural   \n",
              "147    Casual  medium 4.80000    L  winter      neck        short    empire   \n",
              "148   vintage  medium 4.30000   XL  winter      neck        short       NaN   \n",
              "149      cute     low 4.50000    L  summer      neck   sleeveless   natural   \n",
              "150    Casual  medium 4.40000    M  summer  designer   sleeveless   natural   \n",
              "151   vintage  medium 0.00000    S  winter  designer        short   natural   \n",
              "152      Sexy     low 4.70000   XL  summer  designer   sleeveless   natural   \n",
              "153   vintage    high 0.00000    L  summer      neck        short   natural   \n",
              "154    Casual     low 0.00000   XL  spring      neck        short       NaN   \n",
              "155      Sexy  medium 0.00000    S  autumn      neck        short   natural   \n",
              "156    Casual     low 0.00000   XL  spring      neck        short   natural   \n",
              "157      cute  medium 5.00000   XL  winter      neck   sleeveless   natural   \n",
              "158    Casual     low 4.70000   XL  summer      neck   sleeveless       NaN   \n",
              "159      Sexy     low 4.80000   XL  spring      neck   sleeveless       NaN   \n",
              "160    Casual  medium 4.50000    L  winter      neck        short   natural   \n",
              "161   vintage  medium 0.00000    S  spring      neck         full   natural   \n",
              "162    Casual  medium 3.70000   XL  autumn      neck         full       NaN   \n",
              "163   vintage  medium 4.80000    L  winter      neck   sleeveless   natural   \n",
              "164      cute  medium 0.00000   XL  spring      neck         full       NaN   \n",
              "165    Casual  medium 0.00000    L  winter  designer        short   natural   \n",
              "166      Sexy  medium 5.00000    M  winter      neck   sleeveless    empire   \n",
              "167     Brief  medium 4.90000   XL  summer      neck   sleeveless   natural   \n",
              "168    Casual    high 4.90000    S  spring      neck        short   natural   \n",
              "169     Brief  medium 4.60000   XL  winter      neck         full   natural   \n",
              "170    Casual     low 4.50000   XL  winter      neck         full   natural   \n",
              "171    Casual     low 4.80000   XL  summer      neck        short    empire   \n",
              "172      Sexy  medium 4.60000    L  summer      neck        short   natural   \n",
              "173    Casual  medium 4.50000    M  winter      neck   sleeveless   natural   \n",
              "174      work  medium 0.00000    S  autumn      neck   sleeveless   natural   \n",
              "175    Casual     low 0.00000    L  winter      neck   sleeveless    empire   \n",
              "176      cute     low 5.00000    L  winter      neck        short   natural   \n",
              "177     Brief  medium 4.30000    M  spring      neck         full   natural   \n",
              "178      Sexy     low 4.40000   XL  autumn      neck         full    empire   \n",
              "179      cute     low 0.00000   XL  summer   colored        short    empire   \n",
              "180    Casual  medium 4.50000   XL  summer      neck        short   natural   \n",
              "181      Sexy     low 4.70000    M  winter      neck   sleeveless       NaN   \n",
              "182    Casual     low 4.70000   XL  spring      neck   sleeveless    empire   \n",
              "183    Casual  medium 4.80000    M  winter   colored        short   natural   \n",
              "184      Sexy     low 4.30000   XL  winter      neck   sleeveless   natural   \n",
              "185  bohemian  medium 0.00000    L  winter  designer         full   natural   \n",
              "186    Casual     low 0.00000   XL     NaN      neck         full   natural   \n",
              "187      cute  medium 4.80000   XL  spring      neck   sleeveless   natural   \n",
              "188      Sexy  medium 0.00000    S  autumn      neck   sleeveless    empire   \n",
              "189    Casual     low 4.60000    S  spring      neck         full   natural   \n",
              "190   vintage  medium 4.70000   XL  spring  designer   sleeveless   natural   \n",
              "191      work     low 4.70000   XL  summer      neck         full    empire   \n",
              "192      cute  medium 4.80000    M  summer      neck        short   natural   \n",
              "193      cute  medium 0.00000    M  summer      neck        short   natural   \n",
              "194    Casual  medium 4.70000    M  winter      neck         full       NaN   \n",
              "195    Casual     low 4.60000   XL  winter      neck         full   natural   \n",
              "196     party  medium 5.00000   XL  summer      neck   sleeveless       NaN   \n",
              "197    Casual  medium 0.00000   XL  summer      neck   sleeveless   natural   \n",
              "198      Sexy  medium 5.00000    L  winter      neck        short   natural   \n",
              "199      Sexy  medium 4.80000   XL  winter      neck   sleeveless   natural   \n",
              "200    Casual  medium 4.70000    S  summer      neck        short   natural   \n",
              "201    Casual  medium 4.10000    M  autumn      neck         full       NaN   \n",
              "202    Casual  medium 5.00000   XL  autumn      neck        short   natural   \n",
              "203      Sexy  medium 5.00000    M  summer      neck   sleeveless    empire   \n",
              "204      work  medium 4.60000    L  summer      neck        short   natural   \n",
              "205    Casual  medium 4.50000    M  summer   colored   sleeveless       NaN   \n",
              "206   vintage  medium 4.50000    L  autumn      neck   sleeveless    empire   \n",
              "207    Casual  medium 0.00000    M  summer      neck        short   natural   \n",
              "208      cute  medium 4.70000    L  summer      neck   sleeveless   natural   \n",
              "209  bohemian     low 4.70000   XL  winter      neck        short   natural   \n",
              "210    Casual     low 5.00000   XL  spring      neck   sleeveless    empire   \n",
              "211    Casual  medium 5.00000    M  winter      neck   sleeveless   natural   \n",
              "212    Casual  medium 4.30000   XL  summer      neck   sleeveless   natural   \n",
              "213      work     low 4.50000    M  winter      neck        short       NaN   \n",
              "214    Casual  medium 4.30000    S  spring      neck         full   natural   \n",
              "215    Casual  medium 4.40000    L  autumn      neck        short   natural   \n",
              "216      Sexy     low 4.30000    M  autumn  designer        short   natural   \n",
              "217    Casual     low 4.60000   XL  summer      neck         full   natural   \n",
              "218    Casual     low 4.60000    L  winter      neck         full       NaN   \n",
              "219    Casual  medium 4.60000    M  spring      neck   sleeveless   natural   \n",
              "220    Casual     low 0.00000   XL  autumn   colored        short    empire   \n",
              "221    Casual  medium 4.70000    S  spring      neck        short    empire   \n",
              "222    Casual  medium 0.00000    S  summer      neck   sleeveless    empire   \n",
              "223    Casual     low 4.80000   XL  summer      neck   sleeveless   natural   \n",
              "224    Casual  medium 5.00000    S  winter      neck   sleeveless    empire   \n",
              "225      Sexy    high 0.00000   XL  winter      neck   sleeveless   natural   \n",
              "226    Casual     low 4.40000   XL  summer      neck   sleeveless   natural   \n",
              "227    Casual  medium 4.80000    M  autumn      neck        short       NaN   \n",
              "228    Casual  medium 5.00000   XL  summer      neck   sleeveless       NaN   \n",
              "229      Sexy     low 4.80000    M  autumn      neck         full   natural   \n",
              "230    Casual  medium 4.60000   XL  winter      neck         full   natural   \n",
              "231    Casual  medium 4.60000    M  winter      neck         full   natural   \n",
              "232    Casual     low 5.00000    S  spring      neck   sleeveless   natural   \n",
              "233      cute  medium 0.00000    M  winter      neck        short   natural   \n",
              "234    Casual     low 4.80000   XL  spring      neck   sleeveless       NaN   \n",
              "235    Casual  medium 4.60000    M  autumn      neck        short    empire   \n",
              "236  bohemian  medium 5.00000    M  spring      neck   sleeveless    empire   \n",
              "237    Casual     low 4.90000   XL  winter      neck   sleeveless    empire   \n",
              "238    Casual  medium 4.70000    L  summer      neck   sleeveless   natural   \n",
              "239    Casual  medium 4.60000    M  winter      neck         full   natural   \n",
              "240    Casual  medium 4.70000    M  winter      neck   sleeveless    empire   \n",
              "241      Sexy  medium 4.70000    M  winter      neck   sleeveless   natural   \n",
              "242    Casual  medium 3.50000    M  winter      neck        short   natural   \n",
              "243    Casual  medium 4.80000    M  winter      neck        short   natural   \n",
              "244    Casual  medium 0.00000    M  winter      neck         full   natural   \n",
              "245    Casual     low 4.60000    M  summer      neck   sleeveless   natural   \n",
              "246    Casual  medium 4.70000    L  spring      neck        short   natural   \n",
              "247    Casual     low 4.50000   XL  summer      neck         full   natural   \n",
              "248    Casual  medium 4.70000    M  summer      neck   sleeveless   natural   \n",
              "249    Casual     low 4.50000    M  winter      neck        short   natural   \n",
              "250    Casual     low 4.70000    S  summer      neck         full   natural   \n",
              "251      cute     low 0.00000   XL  summer      neck   sleeveless       NaN   \n",
              "252     party    high 5.00000    M  spring      neck   sleeveless   natural   \n",
              "253    Casual  medium 4.90000    M  autumn      neck   sleeveless       NaN   \n",
              "254     party    high 0.00000    L  winter      neck   sleeveless   natural   \n",
              "255     party    high 0.00000    M  winter      neck     designer       NaN   \n",
              "256    Casual     low 4.40000    M  winter      neck     designer       NaN   \n",
              "257     party    high 0.00000    M  spring      neck        short   natural   \n",
              "258     party    high 0.00000    M  winter  designer   sleeveless   natural   \n",
              "259     party    high 0.00000    M  spring  designer   sleeveless       NaN   \n",
              "260     party  medium 5.00000    M  winter      neck     designer    empire   \n",
              "261     party    high 4.70000    M  winter  designer   sleeveless   natural   \n",
              "262     party     NaN 4.80000   XL  winter      neck   sleeveless    empire   \n",
              "263     party     NaN 4.50000    L  summer       NaN         full       NaN   \n",
              "264     party    high 4.90000    M  spring  designer   sleeveless    empire   \n",
              "265     party    high 4.60000    M  winter  designer   sleeveless   natural   \n",
              "266     party  medium 5.00000    M  spring  designer   sleeveless   natural   \n",
              "267     party    high 4.80000    L  spring  designer   sleeveless    empire   \n",
              "268     party    high 0.00000    M  winter  designer   sleeveless   natural   \n",
              "269     party    high 4.60000    L  spring      neck   sleeveless    empire   \n",
              "270     party  medium 4.80000    L     NaN  designer   sleeveless    empire   \n",
              "271     party  medium 4.60000    S  winter  designer        short    empire   \n",
              "272     party    high 4.90000    M  spring  designer   sleeveless   natural   \n",
              "273     party  medium 4.80000    S  spring      neck   sleeveless    empire   \n",
              "274     party    high 4.20000    L  winter      neck   sleeveless       NaN   \n",
              "275    Casual     low 4.40000   XL  summer      neck   sleeveless       NaN   \n",
              "276     party    high 4.10000    M  winter  designer        short   natural   \n",
              "277     party    high 0.00000    M  winter      neck         full   natural   \n",
              "278    Casual    high 4.60000    M  summer  designer   sleeveless    empire   \n",
              "279     party  medium 4.70000   XL  winter      neck   sleeveless       NaN   \n",
              "280     party    high 4.70000    L  winter      neck   sleeveless    empire   \n",
              "281     party    high 4.50000    M  spring      neck     designer       NaN   \n",
              "282     party  medium 4.70000   XL  spring  designer   sleeveless    empire   \n",
              "283     party    high 4.80000    M  summer  designer   sleeveless  princess   \n",
              "284     party    high 4.60000    M  summer      neck   sleeveless   natural   \n",
              "285     party  medium 4.70000    M  winter      neck   sleeveless    empire   \n",
              "286      cute  medium 4.40000   XL  spring  designer   sleeveless    empire   \n",
              "287     party  medium 5.00000    M  spring      neck   sleeveless       NaN   \n",
              "288     party    high 4.80000   XL  spring  designer   sleeveless   natural   \n",
              "289     party  medium 4.80000    M  spring      neck   sleeveless   natural   \n",
              "290     party    high 4.90000    L  spring      neck   sleeveless       NaN   \n",
              "291     party  medium 0.00000   XL  winter      neck        short    empire   \n",
              "292      work  medium 5.00000   XL  winter      neck        short       NaN   \n",
              "293     party    high 4.90000    M  spring      neck   sleeveless    empire   \n",
              "294    Casual    high 5.00000   XL  summer      neck   sleeveless   natural   \n",
              "295    Casual    high 0.00000    S  spring      neck         full       NaN   \n",
              "296    Casual  medium 4.70000    M  spring      neck   sleeveless   natural   \n",
              "297     party  medium 0.00000    M  spring      neck   sleeveless   natural   \n",
              "298    Casual  medium 4.40000   XL  summer      neck   sleeveless    empire   \n",
              "299    Casual    high 4.60000    M  winter      neck        short   natural   \n",
              "300    Casual     low 4.40000   XL  winter  designer   sleeveless   natural   \n",
              "301     party    high 4.50000    M  winter      neck   sleeveless       NaN   \n",
              "302    Casual  medium 4.80000   XL  summer      neck   sleeveless   natural   \n",
              "303      Sexy  medium 5.00000    M  summer      neck   sleeveless   natural   \n",
              "304   vintage  medium 4.90000   XL  summer      neck     designer    empire   \n",
              "305   vintage  medium 4.70000    S  summer  designer        short    empire   \n",
              "306      work  medium 4.90000    M  summer   colored        short    empire   \n",
              "307    Casual     low 4.70000    L  spring      neck        short   natural   \n",
              "308    Casual  medium 4.80000    L  autumn      neck        short   natural   \n",
              "309      Sexy     low 4.70000   XL  spring      neck   sleeveless       NaN   \n",
              "310    Casual  medium 0.00000    S  winter      neck        short   natural   \n",
              "311    Casual  medium 4.20000    S  winter      neck   sleeveless    empire   \n",
              "312   Novelty  medium 0.00000   XL  summer      neck         full   natural   \n",
              "313    Casual     low 4.30000   XL  summer  designer   sleeveless    empire   \n",
              "314    Casual  medium 3.70000    M  summer      neck   sleeveless   natural   \n",
              "315    Casual  medium 5.00000   XL  winter      neck   sleeveless   natural   \n",
              "316      Sexy     low 5.00000   XL  spring      neck   sleeveless    empire   \n",
              "317      cute     low 0.00000   XL  winter      neck   sleeveless   natural   \n",
              "318   vintage  medium 4.80000    M  summer      neck         full   natural   \n",
              "319  bohemian  medium 4.80000    L  winter      neck   sleeveless   natural   \n",
              "320  bohemian  medium 0.00000   XL  spring      neck   sleeveless   natural   \n",
              "321      Sexy  medium 4.50000    M  summer   colored   sleeveless       NaN   \n",
              "322   Novelty  medium 4.20000    M  winter      neck        short   natural   \n",
              "323    Casual     low 5.00000   XL  spring      neck         full   natural   \n",
              "324    Casual  medium 5.00000    L  winter      neck        short   natural   \n",
              "325    Casual     low 4.80000    M  winter      neck   sleeveless   natural   \n",
              "326  bohemian     low 5.00000   XL  spring      neck        short   natural   \n",
              "327    Casual     low 5.00000   XL  spring   colored   sleeveless   natural   \n",
              "328    Casual     low 5.00000    M  spring      neck   sleeveless   natural   \n",
              "329      cute  medium 4.30000    M  summer       NaN          NaN   natural   \n",
              "330   Novelty  medium 0.00000   XL  winter      neck        short   natural   \n",
              "331      cute     low 0.00000    L  spring      neck   sleeveless    empire   \n",
              "332      Sexy     low 4.80000   XL  spring      neck   sleeveless   natural   \n",
              "333      Sexy     low 4.80000   XL  summer      neck   sleeveless    empire   \n",
              "334    Casual     low 4.40000    M  winter      neck   sleeveless   natural   \n",
              "335    Casual  medium 4.50000    M  winter      neck   sleeveless   natural   \n",
              "336    Casual     low 4.70000    S  summer      neck         full   natural   \n",
              "337    Casual     low 4.40000   XL  spring      neck   sleeveless   natural   \n",
              "338      work  medium 4.90000    M  winter      neck        short   natural   \n",
              "339      cute  medium 4.60000   XL  spring      neck        short   natural   \n",
              "340    Casual     low 4.70000   XL  spring      neck        short   natural   \n",
              "341    Casual     low 4.70000    M  winter      neck         full    empire   \n",
              "342    Casual  medium 4.80000    M  spring      neck   sleeveless   natural   \n",
              "343      Sexy     low 4.80000    L  summer      neck   sleeveless   natural   \n",
              "344    Casual  medium 4.30000    M  spring      neck        short       NaN   \n",
              "345    Casual  medium 4.70000   XL  winter      neck        short    empire   \n",
              "346    Casual     low 0.00000    L  winter      neck         full       NaN   \n",
              "347      Sexy  medium 4.70000    M  autumn      neck   sleeveless   natural   \n",
              "348    Casual     low 4.70000   XL  winter      neck   sleeveless   natural   \n",
              "349    Casual    high 0.00000    L  winter      neck         full       NaN   \n",
              "350    Casual     low 4.70000    L  summer      neck   sleeveless   natural   \n",
              "351    Casual  medium 4.70000   XL  summer      neck         full   natural   \n",
              "352    Casual  medium 0.00000   XL  winter      neck         full       NaN   \n",
              "353    Casual     low 4.70000   XL  summer      neck     designer   natural   \n",
              "354    Casual  medium 4.70000    M  summer      neck        short       NaN   \n",
              "355      Sexy     low 4.50000   XL  summer      neck   sleeveless       NaN   \n",
              "356   vintage     low 4.00000   XL  summer  designer        short   natural   \n",
              "357      Sexy     low 4.70000   XL  summer      neck   sleeveless       NaN   \n",
              "358  bohemian     low 5.00000   XL  summer      neck   sleeveless    empire   \n",
              "359    Casual     low 4.70000    S  winter      neck   sleeveless   natural   \n",
              "360      Sexy  medium 4.50000    S  winter      neck   sleeveless       NaN   \n",
              "361      cute  medium 4.70000    M  summer      neck   sleeveless   natural   \n",
              "362   vintage     low 0.00000   XL  summer      neck   sleeveless   natural   \n",
              "363    Casual  medium 4.10000    L  winter      neck   sleeveless   natural   \n",
              "364    Casual  medium 4.20000    M  winter      neck         full    empire   \n",
              "365     Brief  medium 4.80000   XL  winter      neck        short   natural   \n",
              "366     Brief  medium 4.90000   XL  winter      neck   sleeveless   natural   \n",
              "367      Sexy  medium 4.80000    S  winter      neck   sleeveless    empire   \n",
              "368    Casual  medium 4.70000    L  winter      neck   sleeveless   natural   \n",
              "369   vintage  medium 4.70000    M  summer      neck        short   natural   \n",
              "370    Casual  medium 4.80000   XL  summer      neck   sleeveless   natural   \n",
              "371      Sexy     low 4.70000    M  winter      neck   sleeveless   natural   \n",
              "372    Casual  medium 5.00000    S  spring  designer         full    empire   \n",
              "373    Casual     low 1.00000    M  spring      neck        short       NaN   \n",
              "374      Sexy  medium 4.10000   XL  summer      neck   sleeveless   natural   \n",
              "375    Casual     low 4.00000   XL  summer      neck   sleeveless   natural   \n",
              "376      work  medium 4.70000    M  spring      neck   sleeveless       NaN   \n",
              "377      cute  medium 4.60000   XL  spring      neck         full   natural   \n",
              "378    Casual     low 5.00000    M  spring      neck   sleeveless   natural   \n",
              "379    Casual  medium 4.70000    M  autumn      neck   sleeveless   natural   \n",
              "380    Casual     low 4.60000   XL  winter      neck         full   natural   \n",
              "381    Casual  medium 4.50000    L  summer      neck        short   natural   \n",
              "382      cute  medium 4.60000    M  autumn      neck        short   natural   \n",
              "383    Casual     low 4.60000   XL  autumn      neck        short   natural   \n",
              "384    Casual     low 4.70000    L  summer       NaN   sleeveless       NaN   \n",
              "385      Sexy     low 0.00000    L  summer      neck   sleeveless    empire   \n",
              "386  bohemian  medium 4.00000   XL  winter      neck   sleeveless   natural   \n",
              "387    Casual     low 4.70000   XL  summer      neck         full   natural   \n",
              "388      work  medium 0.00000    M  summer      neck   sleeveless   natural   \n",
              "389  bohemian  medium 4.10000   XL  summer      neck        short       NaN   \n",
              "390    Casual  medium 0.00000    M  spring      neck        short   natural   \n",
              "391     Brief     low 4.60000    M  summer      neck        short   natural   \n",
              "392      cute     low 0.00000   XL  spring      neck   sleeveless    empire   \n",
              "393    Casual  medium 5.00000    M  spring      neck        short       NaN   \n",
              "394    Casual     low 5.00000   XL  winter      neck         full   natural   \n",
              "395   vintage  medium 4.50000    L  winter      neck        short    empire   \n",
              "396    Casual  medium 4.50000   XL  summer      neck        short   natural   \n",
              "397  bohemian     low 4.40000    L  summer   colored        short   natural   \n",
              "398    Casual    high 0.00000    L  winter      neck        short   natural   \n",
              "399    Casual  medium 4.80000   XL  winter      neck   sleeveless       NaN   \n",
              "400     Brief     low 4.70000    M  winter      neck         full   natural   \n",
              "401    Casual  medium 0.00000   XL  winter   colored         full       NaN   \n",
              "402    Casual  medium 4.70000    M  winter      neck        short    empire   \n",
              "403     party  medium 0.00000    M  summer      neck         full   natural   \n",
              "404  bohemian  medium 4.80000    S  summer      neck        short   natural   \n",
              "405      Sexy  medium 4.90000   XL  summer   colored   sleeveless   natural   \n",
              "406    Casual  medium 3.00000    M  spring  designer        short    empire   \n",
              "407    Casual     low 4.70000    L  autumn      neck        short   natural   \n",
              "408    Casual  medium 4.30000    M  autumn      neck   sleeveless   natural   \n",
              "409    Casual  medium 0.00000   XL  winter      neck        short    empire   \n",
              "410    Casual     low 5.00000   XL  summer      neck   sleeveless   natural   \n",
              "411   vintage  medium 0.00000    L  summer   colored        short    empire   \n",
              "412    Casual     low 4.70000   XL  winter      neck   sleeveless   natural   \n",
              "413   vintage  medium 5.00000    M  summer      neck        short   natural   \n",
              "414    Casual     low 4.70000    L  summer      neck         full   natural   \n",
              "415  bohemian  medium 4.60000    M  spring      neck   sleeveless   natural   \n",
              "416     party  medium 4.80000    M  summer      neck         full       NaN   \n",
              "417  bohemian     low 4.60000   XL  summer      neck   sleeveless   natural   \n",
              "418     party    high 4.60000   XL  summer      neck   sleeveless    empire   \n",
              "419      cute     low 4.80000    M  spring      neck        short   natural   \n",
              "420   vintage  medium 0.00000    M  spring      neck        short    empire   \n",
              "421    Casual  medium 4.90000    L  winter      neck        short   natural   \n",
              "422    Casual  medium 4.20000   XL  summer      neck   sleeveless   natural   \n",
              "423    Casual  medium 4.90000    M  summer      neck        short   dropped   \n",
              "424  bohemian     low 5.00000   XL  spring      neck        short   natural   \n",
              "425    Casual  medium 4.70000    M  summer      neck   sleeveless       NaN   \n",
              "426    Casual  medium 0.00000   XL  summer   colored        short       NaN   \n",
              "427    Casual  medium 0.00000   XL  summer      neck   sleeveless   natural   \n",
              "428      Sexy  medium 0.00000   XL  winter      neck   sleeveless   natural   \n",
              "429      Sexy     low 4.40000   XL  autumn      neck   sleeveless   natural   \n",
              "430      Sexy  medium 0.00000   XL  spring      neck         full   natural   \n",
              "431     Brief  medium 4.90000   XL  spring      neck         full   natural   \n",
              "432    Casual  medium 4.70000   XL  summer      neck        short   natural   \n",
              "433    Casual  medium 0.00000   XL  autumn      neck         full   natural   \n",
              "434    Casual  medium 4.80000    M  summer      neck         full   natural   \n",
              "435    Casual  medium 4.90000    L  spring   colored   sleeveless    empire   \n",
              "436     party  medium 4.70000    M  spring      neck        short    empire   \n",
              "437      Sexy     low 4.40000   XL  summer   colored   sleeveless   natural   \n",
              "438  bohemian     low 4.60000   XL  winter      neck   sleeveless    empire   \n",
              "439    Casual     low 4.60000   XL  autumn      neck         full   natural   \n",
              "440      Sexy     low 4.50000   XL  summer      neck   sleeveless    empire   \n",
              "441      Sexy     low 0.00000   XL  winter      neck          NaN   dropped   \n",
              "442    Casual  medium 0.00000   XL  spring   colored   sleeveless   natural   \n",
              "443      Sexy  medium 0.00000   XL  autumn      neck         full   natural   \n",
              "444      Sexy     low 4.80000   XL  spring      neck   sleeveless   natural   \n",
              "445     Brief     low 4.70000   XL  autumn      neck   sleeveless   natural   \n",
              "446      Sexy    high 5.00000    M  summer      neck   sleeveless   natural   \n",
              "447    Casual  medium 4.60000    L  summer   colored         full   dropped   \n",
              "448      cute  medium 4.90000    S  summer   colored   sleeveless    empire   \n",
              "449   Novelty  medium 4.90000    M  autumn      neck        short   natural   \n",
              "450    Casual     low 4.30000   XL  spring      neck         full       NaN   \n",
              "451    Casual     low 4.70000    S  autumn      neck   sleeveless   natural   \n",
              "452    Casual  medium 4.80000    L  autumn      neck   sleeveless   natural   \n",
              "453      cute  medium 4.50000    L  winter      neck   sleeveless   natural   \n",
              "454    Casual  medium 4.40000   XL  summer      neck     designer   natural   \n",
              "455     party  medium 0.00000    M  spring      neck   sleeveless       NaN   \n",
              "456      Sexy     low 0.00000   XL  summer      neck   sleeveless   dropped   \n",
              "457    Casual     low 4.80000    L  summer      neck        short   natural   \n",
              "458      work  medium 5.00000    M  summer      neck   sleeveless   natural   \n",
              "459   Novelty  medium 5.00000   XL  summer      neck   sleeveless   natural   \n",
              "460    Casual     low 4.60000   XL  spring      neck   sleeveless   natural   \n",
              "461    Casual  medium 4.50000    M  summer      neck         full   natural   \n",
              "462    Casual  medium 4.50000    L  spring      neck        short   natural   \n",
              "463    Casual  medium 4.50000   XL  autumn      neck        short   natural   \n",
              "464      cute     low 0.00000    M  summer      neck        short       NaN   \n",
              "465     party  medium 4.90000    M  winter      neck        short       NaN   \n",
              "466    Casual  medium 4.80000    M  summer      neck        short       NaN   \n",
              "467    Casual     low 4.40000    L  summer      neck   sleeveless   natural   \n",
              "468    Casual  medium 4.30000    M  winter      neck   sleeveless   natural   \n",
              "469      cute  medium 4.70000    L  summer      neck   sleeveless   natural   \n",
              "470      Sexy  medium 0.00000    S  summer      neck   sleeveless       NaN   \n",
              "471    Casual     low 4.40000   XL  summer      neck   sleeveless       NaN   \n",
              "472      cute    high 4.30000    M  spring      neck         full   natural   \n",
              "473      work  medium 4.80000    M  winter  designer         full   natural   \n",
              "474    Casual  medium 4.60000    M  spring      neck        short   natural   \n",
              "475      Sexy     low 0.00000   XL  summer      neck   sleeveless    empire   \n",
              "476    Casual    high 4.90000   XL  winter      neck         full    empire   \n",
              "477      Sexy     low 0.00000   XL  winter      neck   sleeveless   natural   \n",
              "478      cute  medium 5.00000    M  autumn      neck   sleeveless   natural   \n",
              "479      cute     low 0.00000   XL  spring      neck   sleeveless   natural   \n",
              "480    Casual     low 4.40000   XL  summer      neck         full   natural   \n",
              "481    Casual  medium 0.00000    L  spring      neck   sleeveless   natural   \n",
              "482      cute  medium 4.70000    M  spring      neck         full   natural   \n",
              "483    Casual  medium 4.60000    M  winter      neck        short   natural   \n",
              "484    Casual     low 4.40000   XL  summer      neck         full   natural   \n",
              "485    Casual     low 5.00000    M  autumn      neck   sleeveless    empire   \n",
              "486    Casual  medium 0.00000   XL  winter      neck        short   natural   \n",
              "487      Sexy  medium 0.00000   XL  winter      neck   sleeveless   natural   \n",
              "488    Casual     low 4.40000    M  summer      neck        short    empire   \n",
              "489      cute  medium 0.00000    L  summer      neck   sleeveless    empire   \n",
              "490    Casual     low 4.80000   XL  winter   colored         full   natural   \n",
              "491    Casual  medium 5.00000    L  summer      neck   sleeveless   natural   \n",
              "492      cute  medium 4.60000    M  spring      neck        short   natural   \n",
              "493  bohemian     low 4.60000   XL  summer      neck   sleeveless   natural   \n",
              "494     Brief  medium 4.70000    M  winter      neck        short   natural   \n",
              "495    Casual     low 4.70000    M  spring      neck         full   natural   \n",
              "496      Sexy     low 4.30000   XL  summer      neck         full    empire   \n",
              "497    Casual  medium 4.70000    M  summer      neck         full    empire   \n",
              "498    Casual  medium 4.60000    L  winter      neck   sleeveless    empire   \n",
              "499    Casual     low 4.40000   XL  summer      neck        short    empire   \n",
              "\n",
              "        Material  FabricType  Decoration Pattern Type  Recommendation  \n",
              "0            NaN     chiffon     ruffles       animal               1  \n",
              "1    non-natural         NaN     ruffles       animal               0  \n",
              "2    non-natural         NaN         NaN        print               0  \n",
              "3        natural     chiffon  embroidary        print               1  \n",
              "4    non-natural     chiffon         bow          dot               0  \n",
              "5            NaN         NaN         NaN        print               0  \n",
              "6        natural         NaN         NaN        solid               0  \n",
              "7    non-natural  broadcloth        lace          NaN               0  \n",
              "8        natural  broadcloth     beading        solid               1  \n",
              "9    non-natural     chiffon         NaN          NaN               1  \n",
              "10   non-natural  broadcloth        lace        solid               0  \n",
              "11   non-natural         NaN         NaN       animal               0  \n",
              "12           NaN     chiffon        lace        print               1  \n",
              "13       natural      jersey         NaN       animal               1  \n",
              "14       natural         NaN      sashes        solid               0  \n",
              "15         other       other        lace          NaN               0  \n",
              "16       natural         NaN      sashes        solid               1  \n",
              "17           NaN         NaN   hollowout    patchwork               1  \n",
              "18       natural         NaN         NaN    patchwork               0  \n",
              "19       natural         NaN         NaN          NaN               1  \n",
              "20       natural         NaN     beading        solid               0  \n",
              "21           NaN     chiffon         NaN        solid               0  \n",
              "22       natural         NaN     pockets        solid               0  \n",
              "23       natural         NaN    sequined        solid               1  \n",
              "24   non-natural         NaN        lace    patchwork               0  \n",
              "25       natural  broadcloth         NaN        print               0  \n",
              "26           NaN         NaN         NaN        solid               1  \n",
              "27       natural      jersey         NaN        print               0  \n",
              "28   non-natural     chiffon      sashes      striped               0  \n",
              "29   non-natural     chiffon         bow          dot               1  \n",
              "30   non-natural     chiffon     ruffles        solid               0  \n",
              "31       natural     chiffon    applique        solid               1  \n",
              "32       natural     chiffon     ruffles       animal               0  \n",
              "33           NaN         NaN         bow        solid               1  \n",
              "34           NaN         NaN         NaN        print               0  \n",
              "35       natural         NaN         NaN    patchwork               1  \n",
              "36           NaN     chiffon         NaN        print               1  \n",
              "37       natural         NaN         NaN        print               0  \n",
              "38       natural         NaN        lace        solid               1  \n",
              "39       natural         NaN      button        solid               1  \n",
              "40       natural  broadcloth        lace        solid               1  \n",
              "41   non-natural     chiffon      sashes        solid               0  \n",
              "42   non-natural  broadcloth    applique    patchwork               0  \n",
              "43       natural         NaN         NaN        print               0  \n",
              "44       natural         NaN         NaN    patchwork               1  \n",
              "45           NaN         NaN        lace        solid               0  \n",
              "46   non-natural         NaN        lace    geometric               0  \n",
              "47       natural     chiffon     ruffles          dot               1  \n",
              "48       natural         NaN         NaN        solid               0  \n",
              "49           NaN         NaN         NaN        solid               1  \n",
              "50           NaN     chiffon         NaN       animal               1  \n",
              "51       natural         NaN         NaN       animal               0  \n",
              "52   non-natural     chiffon   hollowout        solid               1  \n",
              "53   non-natural     chiffon      sashes        solid               1  \n",
              "54   non-natural         NaN        lace    geometric               0  \n",
              "55       natural         NaN         NaN    patchwork               0  \n",
              "56       natural         NaN         NaN        solid               1  \n",
              "57           NaN         NaN        lace        solid               1  \n",
              "58   non-natural         NaN         NaN        print               1  \n",
              "59   non-natural         NaN         bow    patchwork               0  \n",
              "60   non-natural         NaN         NaN        solid               1  \n",
              "61       natural         NaN   hollowout        plaid               0  \n",
              "62   non-natural     chiffon         NaN       animal               0  \n",
              "63           NaN     chiffon      sashes        solid               0  \n",
              "64       natural         NaN         NaN        solid               1  \n",
              "65       natural  broadcloth     beading        solid               0  \n",
              "66       natural  broadcloth    applique        solid               0  \n",
              "67   non-natural         NaN         NaN    patchwork               1  \n",
              "68   non-natural         NaN   hollowout        solid               0  \n",
              "69   non-natural         NaN         NaN        solid               0  \n",
              "70       natural       batik         NaN        print               1  \n",
              "71   non-natural       satin     ruffles        solid               1  \n",
              "72       natural     flannel         NaN        solid               0  \n",
              "73       natural     worsted        lace        solid               0  \n",
              "74   non-natural         NaN         NaN        solid               0  \n",
              "75   non-natural     chiffon         bow          dot               0  \n",
              "76       natural         NaN         NaN    geometric               1  \n",
              "77       natural         NaN         NaN        print               0  \n",
              "78           NaN     chiffon         NaN        solid               0  \n",
              "79   non-natural         NaN         NaN          NaN               1  \n",
              "80   non-natural     chiffon     ruffles       animal               0  \n",
              "81   non-natural     chiffon   hollowout        solid               0  \n",
              "82       natural     worsted         NaN      striped               0  \n",
              "83           NaN     chiffon         NaN        print               0  \n",
              "84   non-natural     chiffon   hollowout        solid               0  \n",
              "85           NaN     chiffon         NaN    patchwork               1  \n",
              "86           NaN         NaN     beading        solid               1  \n",
              "87   non-natural     chiffon         NaN    patchwork               1  \n",
              "88           NaN     chiffon        lace        print               1  \n",
              "89       natural         NaN         NaN        solid               0  \n",
              "90       natural         NaN    applique    patchwork               1  \n",
              "91       natural         NaN     pockets        solid               1  \n",
              "92       natural         NaN      sashes        solid               0  \n",
              "93       natural         NaN         NaN        solid               0  \n",
              "94           NaN         NaN         NaN       animal               1  \n",
              "95       natural     chiffon     ruffles        solid               1  \n",
              "96       natural         NaN         NaN        print               0  \n",
              "97           NaN     chiffon     ruffles        print               0  \n",
              "98           NaN     chiffon     ruffles        print               0  \n",
              "99       natural      jersey    applique        print               1  \n",
              "100      natural         NaN    sequined        solid               0  \n",
              "101          NaN         NaN         NaN        print               1  \n",
              "102  non-natural     worsted         NaN    patchwork               1  \n",
              "103          NaN         NaN         NaN       animal               1  \n",
              "104      natural         NaN      Tiered        solid               0  \n",
              "105      natural         NaN      button        solid               0  \n",
              "106  non-natural     chiffon     ruffles          dot               1  \n",
              "107      natural         NaN         NaN        solid               1  \n",
              "108      natural  broadcloth    sequined        solid               1  \n",
              "109          NaN         NaN        lace          NaN               0  \n",
              "110          NaN     chiffon         NaN    patchwork               0  \n",
              "111      natural      jersey         NaN        solid               1  \n",
              "112  non-natural         NaN    applique        print               0  \n",
              "113          NaN     chiffon   hollowout        solid               0  \n",
              "114          NaN         NaN         NaN          NaN               1  \n",
              "115          NaN     chiffon         NaN        solid               0  \n",
              "116      natural     chiffon         NaN    patchwork               0  \n",
              "117      natural     chiffon        lace        print               0  \n",
              "118      natural     worsted        lace        solid               0  \n",
              "119  non-natural      woolen     beading        solid               1  \n",
              "120        other  broadcloth        lace        solid               0  \n",
              "121          NaN         NaN         NaN          NaN               0  \n",
              "122          NaN         NaN        lace      leopard               1  \n",
              "123      natural     chiffon         NaN        solid               1  \n",
              "124      natural      jersey         NaN    patchwork               0  \n",
              "125          NaN         NaN        lace    patchwork               0  \n",
              "126  non-natural     chiffon         bow          dot               0  \n",
              "127      natural  broadcloth     beading        solid               0  \n",
              "128          NaN         NaN         NaN        solid               0  \n",
              "129      natural         NaN        lace          NaN               1  \n",
              "130  non-natural         NaN        lace        solid               0  \n",
              "131  non-natural         NaN         NaN    patchwork               1  \n",
              "132          NaN     chiffon         NaN          NaN               0  \n",
              "133  non-natural         NaN        lace        solid               0  \n",
              "134          NaN     chiffon         NaN        solid               0  \n",
              "135      natural     chiffon        lace    patchwork               0  \n",
              "136  non-natural         NaN      button        solid               0  \n",
              "137  non-natural     chiffon         NaN        print               1  \n",
              "138      natural         NaN         NaN        solid               0  \n",
              "139          NaN         NaN         NaN          NaN               1  \n",
              "140          NaN         NaN   hollowout        solid               0  \n",
              "141  non-natural     chiffon         bow        print               0  \n",
              "142          NaN         NaN        lace        solid               0  \n",
              "143      natural         NaN         NaN       animal               1  \n",
              "144      natural         NaN        lace        solid               1  \n",
              "145          NaN     chiffon         NaN        print               1  \n",
              "146      natural         NaN         NaN        solid               0  \n",
              "147  non-natural         NaN     ruffles        solid               0  \n",
              "148  non-natural     chiffon         NaN        print               0  \n",
              "149      natural     chiffon      sashes        solid               1  \n",
              "150  non-natural     chiffon         NaN        solid               0  \n",
              "151      natural  broadcloth         NaN        plaid               0  \n",
              "152      natural         NaN         NaN        solid               1  \n",
              "153      natural         NaN         NaN        print               0  \n",
              "154      natural         NaN        lace          NaN               1  \n",
              "155          NaN         NaN        lace        solid               0  \n",
              "156          NaN         NaN   hollowout        solid               0  \n",
              "157      natural         NaN        lace        solid               1  \n",
              "158          NaN         NaN         NaN        print               0  \n",
              "159          NaN         NaN    sequined        solid               1  \n",
              "160      natural         NaN         bow    patchwork               0  \n",
              "161        other     chiffon  embroidary        print               0  \n",
              "162          NaN         NaN         NaN        solid               1  \n",
              "163      natural         NaN         NaN    patchwork               0  \n",
              "164      natural     worsted    applique          dot               1  \n",
              "165        other      poplin    applique        solid               1  \n",
              "166  non-natural         NaN         bow        solid               0  \n",
              "167          NaN         NaN         NaN        solid               0  \n",
              "168          NaN         NaN         NaN          dot               1  \n",
              "169        other         NaN      sashes        solid               0  \n",
              "170        other     worsted    applique        solid               0  \n",
              "171        other     chiffon      sashes    geometric               0  \n",
              "172  non-natural      jersey        lace        solid               0  \n",
              "173          NaN     chiffon      button      striped               0  \n",
              "174      natural         NaN         NaN    patchwork               0  \n",
              "175  non-natural         NaN         NaN      leopard               0  \n",
              "176      natural     chiffon      sashes        print               0  \n",
              "177        other     worsted    sequined    patchwork               1  \n",
              "178      natural         NaN         NaN      leopard               0  \n",
              "179      natural  broadcloth    applique        print               0  \n",
              "180      natural         NaN         NaN        solid               1  \n",
              "181  non-natural         NaN      sashes        solid               1  \n",
              "182      natural     chiffon         NaN       floral               0  \n",
              "183  non-natural     chiffon        lace    patchwork               0  \n",
              "184      natural     worsted        lace        solid               1  \n",
              "185        other         NaN         NaN        solid               0  \n",
              "186      natural         NaN         NaN    patchwork               0  \n",
              "187  non-natural     chiffon      sashes        solid               1  \n",
              "188      natural         NaN     beading        solid               0  \n",
              "189      natural         NaN         NaN        solid               1  \n",
              "190        other         NaN        lace        solid               1  \n",
              "191      natural         NaN         NaN        solid               0  \n",
              "192      natural         NaN       rivet        solid               0  \n",
              "193      natural     chiffon         NaN        print               0  \n",
              "194          NaN         NaN         NaN       animal               0  \n",
              "195  non-natural         NaN    applique        solid               1  \n",
              "196          NaN         NaN         NaN          NaN               0  \n",
              "197      natural     chiffon         NaN    patchwork               0  \n",
              "198  non-natural         NaN        lace    geometric               0  \n",
              "199  non-natural         NaN  embroidary        solid               0  \n",
              "200      natural         NaN         NaN          dot               0  \n",
              "201          NaN     chiffon      sashes          NaN               1  \n",
              "202  non-natural     chiffon         NaN          NaN               0  \n",
              "203      natural         NaN    sequined        solid               1  \n",
              "204      natural         NaN         NaN        solid               0  \n",
              "205          NaN         NaN         NaN          NaN               0  \n",
              "206          NaN     worsted         NaN        solid               0  \n",
              "207  non-natural  broadcloth         NaN        solid               1  \n",
              "208      natural     worsted         NaN        print               0  \n",
              "209  non-natural         NaN      sashes        print               0  \n",
              "210  non-natural         NaN         NaN      striped               1  \n",
              "211          NaN     chiffon      sashes        solid               1  \n",
              "212      natural     worsted         NaN      striped               0  \n",
              "213          NaN         NaN         NaN    patchwork               0  \n",
              "214      natural         NaN        lace    patchwork               1  \n",
              "215          NaN       dobby        lace       animal               0  \n",
              "216      natural         NaN        lace        print               0  \n",
              "217      natural     worsted        lace        solid               1  \n",
              "218      natural         NaN         NaN          NaN               0  \n",
              "219          NaN     chiffon      sashes        solid               1  \n",
              "220          NaN         NaN         NaN          NaN               0  \n",
              "221          NaN     chiffon         NaN          NaN               1  \n",
              "222      natural         NaN         NaN        solid               0  \n",
              "223      natural         NaN         NaN        print               1  \n",
              "224  non-natural     chiffon         NaN        plaid               0  \n",
              "225  non-natural      woolen         NaN        solid               0  \n",
              "226  non-natural         NaN      sashes        print               0  \n",
              "227          NaN     chiffon  embroidary        print               1  \n",
              "228        other         NaN         NaN    patchwork               0  \n",
              "229      natural         NaN         NaN        print               1  \n",
              "230      natural     flannel         NaN      striped               0  \n",
              "231  non-natural     chiffon         NaN          NaN               0  \n",
              "232  non-natural         NaN         NaN        print               0  \n",
              "233  non-natural     chiffon      sashes        solid               0  \n",
              "234  non-natural     chiffon         NaN        print               1  \n",
              "235  non-natural         NaN    applique          dot               0  \n",
              "236          NaN     chiffon     ruffles        solid               1  \n",
              "237      natural         NaN      sashes        print               1  \n",
              "238      natural     chiffon     beading        solid               0  \n",
              "239      natural         NaN         NaN        solid               1  \n",
              "240  non-natural     chiffon    applique        print               0  \n",
              "241  non-natural  broadcloth         NaN    patchwork               0  \n",
              "242          NaN         NaN         NaN        solid               0  \n",
              "243          NaN         NaN         NaN        print               1  \n",
              "244      natural      jersey    feathers        solid               1  \n",
              "245      natural         NaN      sashes      striped               0  \n",
              "246          NaN  broadcloth         NaN        print               1  \n",
              "247      natural         NaN      button        solid               0  \n",
              "248  non-natural         NaN         NaN    character               0  \n",
              "249  non-natural     chiffon         NaN        solid               0  \n",
              "250      natural         NaN         NaN    patchwork               0  \n",
              "251      natural         NaN         NaN        print               0  \n",
              "252  non-natural     chiffon     flowers          NaN               1  \n",
              "253  non-natural         NaN         NaN          NaN               1  \n",
              "254  non-natural       tulle     beading          NaN               0  \n",
              "255          NaN     chiffon        lace          NaN               0  \n",
              "256      natural         NaN         NaN          NaN               1  \n",
              "257  non-natural       satin    applique          NaN               1  \n",
              "258          NaN         NaN      pearls          NaN               0  \n",
              "259  non-natural         NaN         NaN          NaN               0  \n",
              "260  non-natural         NaN        lace          NaN               1  \n",
              "261          NaN     chiffon     flowers          NaN               0  \n",
              "262          NaN         NaN  embroidary          NaN               1  \n",
              "263          NaN         NaN         NaN          NaN               1  \n",
              "264          NaN     chiffon     beading          NaN               1  \n",
              "265          NaN     chiffon         NaN          NaN               0  \n",
              "266  non-natural         NaN         NaN          NaN               1  \n",
              "267  non-natural     organza     beading          NaN               1  \n",
              "268  non-natural     chiffon     beading          NaN               1  \n",
              "269      natural     chiffon     beading          NaN               0  \n",
              "270          NaN         NaN       pleat          NaN               1  \n",
              "271          NaN         NaN     crystal          NaN               0  \n",
              "272      natural     chiffon     beading          NaN               1  \n",
              "273          NaN         NaN         NaN          NaN               1  \n",
              "274          NaN         NaN        lace          NaN               1  \n",
              "275          NaN         NaN         NaN          NaN               1  \n",
              "276      natural        lace    applique          NaN               1  \n",
              "277          NaN         NaN    feathers          NaN               1  \n",
              "278          NaN         NaN     beading          NaN               1  \n",
              "279  non-natural         NaN         NaN          NaN               0  \n",
              "280        other     chiffon     beading          NaN               1  \n",
              "281          NaN         NaN        lace          NaN               1  \n",
              "282  non-natural     chiffon     beading        solid               1  \n",
              "283          NaN       satin         NaN          NaN               1  \n",
              "284          NaN     chiffon         NaN          NaN               1  \n",
              "285      natural     chiffon      button          NaN               1  \n",
              "286  non-natural       tulle      ruched        solid               1  \n",
              "287          NaN         NaN         NaN          NaN               1  \n",
              "288  non-natural     chiffon     beading          NaN               1  \n",
              "289      natural     chiffon     crystal          NaN               1  \n",
              "290          NaN     chiffon     flowers          NaN               1  \n",
              "291          NaN     chiffon        lace          NaN               1  \n",
              "292  non-natural         NaN         NaN          NaN               0  \n",
              "293          NaN       satin     beading          NaN               1  \n",
              "294  non-natural         NaN         NaN          NaN               1  \n",
              "295          NaN     chiffon    applique          NaN               0  \n",
              "296      natural         NaN         bow          NaN               1  \n",
              "297          NaN         NaN         NaN          NaN               1  \n",
              "298      natural         NaN         NaN          NaN               1  \n",
              "299          NaN         NaN     flowers          NaN               1  \n",
              "300          NaN         NaN      draped          NaN               1  \n",
              "301          NaN         NaN         NaN          NaN               1  \n",
              "302          NaN         NaN         NaN          NaN               0  \n",
              "303  non-natural  broadcloth       rivet          NaN               0  \n",
              "304          NaN         NaN         NaN          NaN               0  \n",
              "305      natural         NaN         NaN          NaN               0  \n",
              "306  non-natural       satin      sashes          NaN               0  \n",
              "307  non-natural     chiffon         NaN          NaN               0  \n",
              "308      natural         NaN         NaN          NaN               0  \n",
              "309          NaN         NaN    sequined          NaN               1  \n",
              "310  non-natural  broadcloth         NaN          NaN               0  \n",
              "311        other     chiffon   hollowout    patchwork               0  \n",
              "312      natural       satin   hollowout        solid               0  \n",
              "313  non-natural     chiffon     crystal          NaN               0  \n",
              "314      natural         NaN         NaN          NaN               0  \n",
              "315  non-natural  broadcloth        lace          NaN               1  \n",
              "316          NaN     chiffon         NaN          NaN               0  \n",
              "317          NaN     chiffon         NaN          NaN               0  \n",
              "318  non-natural      poplin         NaN          NaN               1  \n",
              "319  non-natural     chiffon         NaN        solid               0  \n",
              "320  non-natural     chiffon         NaN      striped               1  \n",
              "321      natural     chiffon         NaN        solid               0  \n",
              "322  non-natural     chiffon   hollowout       animal               1  \n",
              "323      natural         NaN         NaN        solid               1  \n",
              "324  non-natural         NaN    applique        solid               0  \n",
              "325  non-natural         NaN         NaN        print               0  \n",
              "326  non-natural      jersey      sashes        print               1  \n",
              "327      natural     chiffon    applique        print               0  \n",
              "328  non-natural     chiffon         NaN        solid               1  \n",
              "329      natural     chiffon         NaN        solid               0  \n",
              "330  non-natural  broadcloth        lace          NaN               1  \n",
              "331          NaN         NaN         NaN          NaN               1  \n",
              "332      natural  broadcloth    sequined        solid               0  \n",
              "333      natural         NaN        lace        solid               0  \n",
              "334  non-natural         NaN         NaN        solid               0  \n",
              "335  non-natural     chiffon      ruched      striped               0  \n",
              "336      natural         NaN         NaN    patchwork               0  \n",
              "337  non-natural         NaN      sashes        print               0  \n",
              "338  non-natural  broadcloth     ruffles        solid               0  \n",
              "339  non-natural         NaN   hollowout        solid               1  \n",
              "340      natural     chiffon      sashes        print               0  \n",
              "341  non-natural     chiffon         NaN        print               1  \n",
              "342      natural     chiffon   hollowout        print               0  \n",
              "343      natural         NaN         NaN        solid               1  \n",
              "344          NaN         NaN         NaN          NaN               1  \n",
              "345      natural         NaN         NaN        print               0  \n",
              "346          NaN         NaN         NaN        solid               0  \n",
              "347  non-natural         NaN       rivet        solid               0  \n",
              "348          NaN         NaN         NaN          NaN               1  \n",
              "349  non-natural         NaN         NaN        solid               0  \n",
              "350      natural     worsted        lace    patchwork               0  \n",
              "351      natural         NaN      sashes        solid               0  \n",
              "352      natural         NaN         NaN        solid               1  \n",
              "353  non-natural     chiffon         NaN        print               1  \n",
              "354  non-natural     chiffon      ruched        solid               0  \n",
              "355  non-natural    Corduroy         NaN          NaN               0  \n",
              "356      natural      woolen   hollowout        solid               0  \n",
              "357          NaN         NaN         NaN          NaN               0  \n",
              "358      natural  broadcloth      tassel        print               1  \n",
              "359      natural         NaN        lace        solid               0  \n",
              "360  non-natural         NaN         NaN          NaN               0  \n",
              "361  non-natural         NaN      sashes       splice               0  \n",
              "362      natural       batik         NaN        print               1  \n",
              "363  non-natural         NaN         NaN          NaN               1  \n",
              "364  non-natural         NaN        lace    patchwork               1  \n",
              "365  non-natural  broadcloth         NaN        solid               0  \n",
              "366          NaN         NaN         NaN        solid               0  \n",
              "367  non-natural     chiffon        lace        solid               0  \n",
              "368  non-natural     chiffon         NaN    patchwork               0  \n",
              "369  non-natural         NaN     beading        print               0  \n",
              "370      natural     chiffon      sashes        solid               0  \n",
              "371  non-natural         NaN         NaN      striped               0  \n",
              "372      natural     worsted         NaN        solid               0  \n",
              "373          NaN     chiffon         NaN          NaN               0  \n",
              "374      natural         NaN        lace          NaN               1  \n",
              "375      natural  broadcloth   hollowout        print               0  \n",
              "376          NaN         NaN         NaN          NaN               1  \n",
              "377      natural     chiffon         NaN        solid               1  \n",
              "378  non-natural      jersey         NaN        print               0  \n",
              "379          NaN     chiffon         NaN      striped               1  \n",
              "380  non-natural         NaN    applique        solid               0  \n",
              "381      natural      jersey     pockets        solid               0  \n",
              "382      natural     chiffon      sashes        print               0  \n",
              "383  non-natural     chiffon         NaN      leapord               1  \n",
              "384      natural         NaN         NaN        solid               1  \n",
              "385      natural         NaN         NaN      striped               0  \n",
              "386  non-natural     chiffon     ruffles      striped               0  \n",
              "387      natural         NaN         NaN        solid               1  \n",
              "388      natural     worsted         NaN        solid               1  \n",
              "389          NaN         NaN   hollowout          NaN               0  \n",
              "390          NaN         NaN        lace          NaN               0  \n",
              "391      natural         NaN         NaN       animal               0  \n",
              "392  non-natural     chiffon         NaN          NaN               1  \n",
              "393  non-natural         NaN         NaN          NaN               0  \n",
              "394      natural         NaN    applique        solid               0  \n",
              "395          NaN         NaN    sequined    patchwork               1  \n",
              "396  non-natural         NaN         NaN        solid               0  \n",
              "397      natural         NaN         NaN          dot               0  \n",
              "398  non-natural         NaN     ruffles        solid               1  \n",
              "399  non-natural         NaN      sashes        solid               0  \n",
              "400      natural         NaN         NaN    patchwork               0  \n",
              "401      natural      woolen         NaN        solid               1  \n",
              "402  non-natural     shiffon         NaN       animal               0  \n",
              "403      natural         NaN         NaN    patchwork               1  \n",
              "404      natural         NaN         NaN        solid               0  \n",
              "405  non-natural         NaN      sashes        print               0  \n",
              "406  non-natural         NaN      sashes    patchwork               0  \n",
              "407  non-natural     shiffon         NaN    patchwork               1  \n",
              "408  non-natural         NaN       plain        solid               0  \n",
              "409  non-natural     shiffon     pockets        solid               1  \n",
              "410        other      jersey       plain        solid               1  \n",
              "411      natural     chiffon         NaN          dot               1  \n",
              "412      natural         NaN         NaN       animal               0  \n",
              "413  non-natural         NaN         NaN        print               0  \n",
              "414        other     worsted        lace    patchwork               1  \n",
              "415      natural     shiffon      sashes        solid               0  \n",
              "416      natural         NaN         NaN        solid               1  \n",
              "417      natural  broadcloth     beading        solid               0  \n",
              "418  non-natural         NaN   hollowout        solid               0  \n",
              "419      natural     shiffon         bow          dot               1  \n",
              "420  non-natural         NaN        lace       animal               0  \n",
              "421      natural  broadcloth      sashes        solid               0  \n",
              "422      natural     worsted         NaN      striped               1  \n",
              "423      natural         NaN     ruffles    patchwork               0  \n",
              "424          NaN     shiffon         NaN        print               1  \n",
              "425      natural         NaN         NaN          dot               0  \n",
              "426      natural         NaN         NaN          NaN               0  \n",
              "427      natural         NaN        lace       floral               0  \n",
              "428  non-natural         NaN    sequined        solid               0  \n",
              "429      natural     worsted        lace        solid               0  \n",
              "430      natural      woolen        lace        solid               1  \n",
              "431          NaN         NaN      sashes        solid               0  \n",
              "432          NaN  broadcloth         NaN        print               1  \n",
              "433      natural         NaN        lace        solid               0  \n",
              "434          NaN     shiffon         NaN          NaN               0  \n",
              "435          NaN         NaN         NaN        print               0  \n",
              "436          NaN     shiffon         NaN    patchwork               0  \n",
              "437        other         NaN         bow        solid               0  \n",
              "438  non-natural         NaN         NaN    patchwork               1  \n",
              "439  non-natural         NaN        lace        solid               1  \n",
              "440      natural         NaN      sashes        solid               1  \n",
              "441      natural         NaN        lace          NaN               1  \n",
              "442        other         NaN        lace        solid               0  \n",
              "443  non-natural       satin   hollowout        solid               0  \n",
              "444          NaN         NaN         NaN      striped               1  \n",
              "445          NaN     shiffon    sequined        solid               0  \n",
              "446        other         NaN         NaN      striped               0  \n",
              "447      natural         NaN         NaN    patchwork               0  \n",
              "448          NaN         NaN         bow    patchwork               1  \n",
              "449  non-natural     chiffon        none        print               0  \n",
              "450          NaN     chiffon      sashes         none               1  \n",
              "451      natural         NaN         NaN        solid               0  \n",
              "452          NaN         NaN      sashes        solid               0  \n",
              "453  non-natural      jersey      sashes        solid               1  \n",
              "454      natural         NaN         NaN        solid               0  \n",
              "455          NaN     chiffon         NaN        solid               1  \n",
              "456          NaN         NaN         NaN          NaN               1  \n",
              "457      natural         NaN         NaN        print               0  \n",
              "458          NaN         NaN         NaN        solid               1  \n",
              "459          NaN         NaN         NaN        print               0  \n",
              "460      natural     chiffon      draped        solid               0  \n",
              "461      natural         NaN        lace        solid               0  \n",
              "462          NaN       dobby        lace       animal               1  \n",
              "463      natural     chiffon   hollowout        solid               1  \n",
              "464          NaN     chiffon      sashes          NaN               0  \n",
              "465      natural         NaN        lace          NaN               1  \n",
              "466          NaN         NaN         NaN          NaN               0  \n",
              "467      natural     chiffon         NaN        solid               0  \n",
              "468  non-natural         NaN      sashes        solid               0  \n",
              "469  non-natural  broadcloth        lace        solid               0  \n",
              "470          NaN         NaN         NaN          NaN               1  \n",
              "471          NaN         NaN         NaN       animal               0  \n",
              "472  non-natural       terry        lace        solid               1  \n",
              "473          NaN         NaN         NaN        solid               0  \n",
              "474  non-natural         NaN        lace        solid               0  \n",
              "475      natural         NaN         NaN        solid               0  \n",
              "476      natural         NaN    sequined        solid               0  \n",
              "477  non-natural     chiffon   hollowout        solid               0  \n",
              "478      natural         NaN         NaN        solid               0  \n",
              "479      natural     worsted        lace    patchwork               1  \n",
              "480      natural         NaN     pockets        solid               0  \n",
              "481  non-natural     chiffon    sequined        solid               0  \n",
              "482  non-natural     chiffon     beading        solid               1  \n",
              "483      natural     chiffon      sashes        solid               1  \n",
              "484      natural         NaN         NaN        solid               1  \n",
              "485          NaN     chiffon         NaN        print               1  \n",
              "486  non-natural     chiffon   cascading        solid               0  \n",
              "487      natural  broadcloth    sequined        solid               1  \n",
              "488  non-natural     chiffon         bow        solid               0  \n",
              "489      natural         NaN        lace        solid               1  \n",
              "490  non-natural     chiffon         bow        solid               0  \n",
              "491      natural         NaN         NaN          NaN               1  \n",
              "492  non-natural     chiffon         NaN          NaN               0  \n",
              "493      natural     chiffon        none        solid               1  \n",
              "494  non-natural     chiffon         NaN      striped               0  \n",
              "495  non-natural         NaN         NaN        solid               1  \n",
              "496      natural         NaN         NaN          NaN               0  \n",
              "497      natural         NaN        lace        solid               1  \n",
              "498      natural  broadcloth    applique        print               1  \n",
              "499      natural    Corduroy        lace        solid               0  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 46
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "hidden": true,
        "id": "lXIayF_b9tB9"
      },
      "source": [
        "#### Filling Missing values\n",
        "\n",
        "We will fill the missing values with the mode of the data for now"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "RJCmOJu19tB9"
      },
      "source": [
        "# Let's make a new dataframe to we can trace back\n",
        "df_nona = df_data.copy()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "4y66ZLXP9tB9",
        "outputId": "d237a7bf-0a15-4a36-e9f8-f1e7bde7b6ea"
      },
      "source": [
        "# Fill in the missing values\n",
        "for column in df_nona.columns:\n",
        "    df_nona.fillna(df_nona[column].mode()[0], inplace=True)\n",
        "df_nona.isna().sum()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Style             0\n",
              "Price             0\n",
              "Rating            0\n",
              "Size              0\n",
              "Season            0\n",
              "NeckLine          0\n",
              "SleeveLength      0\n",
              "waiseline         0\n",
              "Material          0\n",
              "FabricType        0\n",
              "Decoration        0\n",
              "Pattern Type      0\n",
              "Recommendation    0\n",
              "dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "hidden": true,
        "id": "7N3ctHDa9tB9",
        "outputId": "12a73e23-4c6e-4608-a458-e8647f2d081d"
      },
      "source": [
        "df_nona"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Style</th>\n",
              "      <th>Price</th>\n",
              "      <th>Rating</th>\n",
              "      <th>Size</th>\n",
              "      <th>Season</th>\n",
              "      <th>NeckLine</th>\n",
              "      <th>SleeveLength</th>\n",
              "      <th>waiseline</th>\n",
              "      <th>Material</th>\n",
              "      <th>FabricType</th>\n",
              "      <th>Decoration</th>\n",
              "      <th>Pattern Type</th>\n",
              "      <th>Recommendation</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>animal</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>designer</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>animal</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>vintage</td>\n",
              "      <td>high</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Brief</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>embroidary</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>designer</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>bow</td>\n",
              "      <td>dot</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>Casual</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Novelty</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>lace</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Flare</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>beading</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Flare</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>Casual</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>animal</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>lace</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>jersey</td>\n",
              "      <td>Casual</td>\n",
              "      <td>animal</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>Casual</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>Casual</td>\n",
              "      <td>other</td>\n",
              "      <td>other</td>\n",
              "      <td>lace</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>Casual</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Brief</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>colored</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>Casual</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>beading</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Brief</td>\n",
              "      <td>low</td>\n",
              "      <td>4.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>pockets</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>S</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>sequined</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>jersey</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>striped</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>designer</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>bow</td>\n",
              "      <td>dot</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>applique</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>animal</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>Brief</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>bow</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>Brief</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>button</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>Brief</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>Brief</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>applique</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>geometric</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>dot</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>empire</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>animal</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>51</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>animal</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>53</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>geometric</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>Novelty</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>winter</td>\n",
              "      <td>designer</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>56</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>S</td>\n",
              "      <td>winter</td>\n",
              "      <td>designer</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>57</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>58</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>low</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>59</th>\n",
              "      <td>work</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>bow</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>60</th>\n",
              "      <td>cute</td>\n",
              "      <td>high</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>61</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>plaid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>62</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>animal</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>63</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>64</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>65</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>beading</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>66</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>applique</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>67</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>S</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>68</th>\n",
              "      <td>work</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>70</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>batik</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>71</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>satin</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>72</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.20000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>flannel</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>73</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>worsted</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>74</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>S</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>Casual</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>bow</td>\n",
              "      <td>dot</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>76</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>Casual</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>geometric</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>78</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>79</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>high</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>80</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>animal</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>81</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>82</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>worsted</td>\n",
              "      <td>Casual</td>\n",
              "      <td>striped</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>83</th>\n",
              "      <td>vintage</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>84</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>85</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>86</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>beading</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>87</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>88</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>lace</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>89</th>\n",
              "      <td>Brief</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>colored</td>\n",
              "      <td>short</td>\n",
              "      <td>Casual</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>90</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>applique</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>pockets</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>92</th>\n",
              "      <td>OL</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>colored</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>93</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>94</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>animal</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>96</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>97</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98</th>\n",
              "      <td>vintage</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>S</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>jersey</td>\n",
              "      <td>applique</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>fashion</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>designer</td>\n",
              "      <td>full</td>\n",
              "      <td>Casual</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>sequined</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>102</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>worsted</td>\n",
              "      <td>Casual</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>103</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>animal</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104</th>\n",
              "      <td>work</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>colored</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Tiered</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>105</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>button</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>106</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>dot</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>107</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>108</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>sequined</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>109</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>110</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>111</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>jersey</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>112</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>applique</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>113</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>114</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>117</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>Casual</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>lace</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>118</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>worsted</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>119</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>3.60000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>woolen</td>\n",
              "      <td>beading</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>120</th>\n",
              "      <td>work</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>other</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>121</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>122</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>leopard</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>123</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>124</th>\n",
              "      <td>work</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>jersey</td>\n",
              "      <td>Casual</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>125</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>126</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>bow</td>\n",
              "      <td>dot</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>127</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>beading</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>128</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>129</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>Casual</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>130</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>131</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>132</th>\n",
              "      <td>work</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>133</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>134</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>135</th>\n",
              "      <td>cute</td>\n",
              "      <td>high</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>lace</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>136</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>button</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>137</th>\n",
              "      <td>Novelty</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>138</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>Casual</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>139</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>140</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>141</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>bow</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>142</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>143</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>animal</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>144</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>145</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>146</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>147</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>148</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>Casual</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>149</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>150</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>151</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>winter</td>\n",
              "      <td>designer</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>Casual</td>\n",
              "      <td>plaid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>152</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>153</th>\n",
              "      <td>vintage</td>\n",
              "      <td>high</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>154</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>Casual</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>155</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>156</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>157</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>158</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>159</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>sequined</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>160</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>bow</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>161</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>other</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>embroidary</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>162</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>3.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>163</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>164</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>Casual</td>\n",
              "      <td>natural</td>\n",
              "      <td>worsted</td>\n",
              "      <td>applique</td>\n",
              "      <td>dot</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>165</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>designer</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>other</td>\n",
              "      <td>poplin</td>\n",
              "      <td>applique</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>166</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>bow</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>167</th>\n",
              "      <td>Brief</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>168</th>\n",
              "      <td>Casual</td>\n",
              "      <td>high</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>S</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>dot</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>169</th>\n",
              "      <td>Brief</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>other</td>\n",
              "      <td>Casual</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>170</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>other</td>\n",
              "      <td>worsted</td>\n",
              "      <td>applique</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>171</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>other</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>geometric</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>172</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>jersey</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>173</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>button</td>\n",
              "      <td>striped</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>174</th>\n",
              "      <td>work</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>175</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>leopard</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>176</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>177</th>\n",
              "      <td>Brief</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>other</td>\n",
              "      <td>worsted</td>\n",
              "      <td>sequined</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>178</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>leopard</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>179</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>colored</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>applique</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>180</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>181</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>182</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>floral</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>183</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>colored</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>lace</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>184</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>worsted</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>185</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>designer</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>other</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>186</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>Casual</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>187</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>188</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>beading</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>189</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>S</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>190</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>other</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>191</th>\n",
              "      <td>work</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>192</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>rivet</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>193</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>194</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>animal</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>195</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>applique</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>196</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>197</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>198</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>geometric</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>199</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>embroidary</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>200</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>S</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>dot</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>201</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.10000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>202</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>203</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>sequined</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>204</th>\n",
              "      <td>work</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>205</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>colored</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>206</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>Casual</td>\n",
              "      <td>worsted</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>207</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>208</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>worsted</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>209</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>sashes</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>210</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>striped</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>211</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>212</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>worsted</td>\n",
              "      <td>Casual</td>\n",
              "      <td>striped</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>213</th>\n",
              "      <td>work</td>\n",
              "      <td>low</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>214</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>S</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>215</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>dobby</td>\n",
              "      <td>lace</td>\n",
              "      <td>animal</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>216</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>designer</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>217</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>worsted</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>218</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>Casual</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>219</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>220</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>colored</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>221</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>S</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>222</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>223</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>224</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>plaid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>225</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>high</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>woolen</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>226</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>sashes</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>227</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>embroidary</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>228</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>other</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>229</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>230</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>flannel</td>\n",
              "      <td>Casual</td>\n",
              "      <td>striped</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>231</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>232</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>233</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>234</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>235</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>applique</td>\n",
              "      <td>dot</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>236</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>237</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>sashes</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>238</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>beading</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>239</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>240</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>applique</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>241</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>Casual</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>242</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>3.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>243</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>244</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>jersey</td>\n",
              "      <td>feathers</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>245</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>sashes</td>\n",
              "      <td>striped</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>246</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>247</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>button</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>248</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>character</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>249</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>250</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>S</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>251</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>252</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>flowers</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>253</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>254</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>tulle</td>\n",
              "      <td>beading</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>255</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>designer</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>lace</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>256</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>designer</td>\n",
              "      <td>Casual</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>257</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>satin</td>\n",
              "      <td>applique</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>258</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>pearls</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>259</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>260</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>designer</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>261</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>flowers</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>262</th>\n",
              "      <td>party</td>\n",
              "      <td>Casual</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>embroidary</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>263</th>\n",
              "      <td>party</td>\n",
              "      <td>Casual</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>Casual</td>\n",
              "      <td>full</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>264</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>beading</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>265</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>266</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>267</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>organza</td>\n",
              "      <td>beading</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>268</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>beading</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>269</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>beading</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>270</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>L</td>\n",
              "      <td>Casual</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>pleat</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>271</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>S</td>\n",
              "      <td>winter</td>\n",
              "      <td>designer</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>crystal</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>272</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>beading</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>273</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>S</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>274</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.20000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>275</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>276</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.10000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>designer</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>lace</td>\n",
              "      <td>applique</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>277</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>feathers</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>278</th>\n",
              "      <td>Casual</td>\n",
              "      <td>high</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>beading</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>279</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>280</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>other</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>beading</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>281</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>designer</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>282</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>beading</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>283</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>princess</td>\n",
              "      <td>Casual</td>\n",
              "      <td>satin</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>284</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>285</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>button</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>286</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>tulle</td>\n",
              "      <td>ruched</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>287</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>288</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>beading</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>289</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>crystal</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>290</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>flowers</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>291</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>lace</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>292</th>\n",
              "      <td>work</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>Casual</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>293</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>Casual</td>\n",
              "      <td>satin</td>\n",
              "      <td>beading</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>294</th>\n",
              "      <td>Casual</td>\n",
              "      <td>high</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>295</th>\n",
              "      <td>Casual</td>\n",
              "      <td>high</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>applique</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>296</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>bow</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>297</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>298</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>299</th>\n",
              "      <td>Casual</td>\n",
              "      <td>high</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>flowers</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>300</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>draped</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>301</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>302</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>303</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>rivet</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>304</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>designer</td>\n",
              "      <td>empire</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>305</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>S</td>\n",
              "      <td>summer</td>\n",
              "      <td>designer</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>306</th>\n",
              "      <td>work</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>colored</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>satin</td>\n",
              "      <td>sashes</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>307</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>308</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>309</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>sequined</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>310</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>311</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.20000</td>\n",
              "      <td>S</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>other</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>312</th>\n",
              "      <td>Novelty</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>satin</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>313</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>designer</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>crystal</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>314</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>3.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>315</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>lace</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>316</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>317</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>318</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>poplin</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>319</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>320</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>striped</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>321</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>colored</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>322</th>\n",
              "      <td>Novelty</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.20000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>animal</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>323</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>324</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>applique</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>325</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>326</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>jersey</td>\n",
              "      <td>sashes</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>327</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>colored</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>applique</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>328</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>329</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>330</th>\n",
              "      <td>Novelty</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>lace</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>331</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>332</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>sequined</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>333</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>334</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>335</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>ruched</td>\n",
              "      <td>striped</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>336</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>S</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>337</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>sashes</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>338</th>\n",
              "      <td>work</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>339</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>340</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>341</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>342</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>343</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>344</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>345</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>346</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>347</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>rivet</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>348</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>349</th>\n",
              "      <td>Casual</td>\n",
              "      <td>high</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>Casual</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>350</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>worsted</td>\n",
              "      <td>lace</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>351</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>352</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>Casual</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>353</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>designer</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>354</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>Casual</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>ruched</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>355</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Corduroy</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>356</th>\n",
              "      <td>vintage</td>\n",
              "      <td>low</td>\n",
              "      <td>4.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>designer</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>woolen</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>357</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>358</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>tassel</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>359</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>S</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>360</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>S</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>361</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>sashes</td>\n",
              "      <td>splice</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>362</th>\n",
              "      <td>vintage</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>batik</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>363</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.10000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>364</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.20000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>365</th>\n",
              "      <td>Brief</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>366</th>\n",
              "      <td>Brief</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>367</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>S</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>368</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>369</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>beading</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>370</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>371</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>striped</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>372</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>spring</td>\n",
              "      <td>designer</td>\n",
              "      <td>full</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>worsted</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>373</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>1.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>374</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.10000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>375</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>376</th>\n",
              "      <td>work</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>377</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>jersey</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>379</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>striped</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>380</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>applique</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>381</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>jersey</td>\n",
              "      <td>pockets</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>382</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>383</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>leapord</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>384</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>Casual</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>385</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>striped</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>386</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>striped</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>387</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>388</th>\n",
              "      <td>work</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>worsted</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>389</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.10000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>390</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>391</th>\n",
              "      <td>Brief</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>animal</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>392</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>393</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>Casual</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>394</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>applique</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>395</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>sequined</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>396</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>397</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>colored</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>dot</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>398</th>\n",
              "      <td>Casual</td>\n",
              "      <td>high</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>399</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>400</th>\n",
              "      <td>Brief</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>401</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>colored</td>\n",
              "      <td>full</td>\n",
              "      <td>Casual</td>\n",
              "      <td>natural</td>\n",
              "      <td>woolen</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>402</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>shiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>animal</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>403</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>404</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>S</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>405</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>colored</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>sashes</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>406</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>3.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>designer</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>sashes</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>407</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>shiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>408</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>plain</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>409</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>shiffon</td>\n",
              "      <td>pockets</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>410</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>other</td>\n",
              "      <td>jersey</td>\n",
              "      <td>plain</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>411</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>colored</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>dot</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>412</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>animal</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>413</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>414</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>other</td>\n",
              "      <td>worsted</td>\n",
              "      <td>lace</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>415</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>shiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>416</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>Casual</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>417</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>beading</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>418</th>\n",
              "      <td>party</td>\n",
              "      <td>high</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>419</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>shiffon</td>\n",
              "      <td>bow</td>\n",
              "      <td>dot</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>420</th>\n",
              "      <td>vintage</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>animal</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>421</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>422</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.20000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>worsted</td>\n",
              "      <td>Casual</td>\n",
              "      <td>striped</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>423</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>dropped</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>ruffles</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>424</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>shiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>425</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>dot</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>426</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>colored</td>\n",
              "      <td>short</td>\n",
              "      <td>Casual</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>427</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>floral</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>428</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>sequined</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>429</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>worsted</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>430</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>woolen</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>431</th>\n",
              "      <td>Brief</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>432</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>433</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>434</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>shiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>435</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>colored</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>436</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>Casual</td>\n",
              "      <td>shiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>437</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>colored</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>other</td>\n",
              "      <td>Casual</td>\n",
              "      <td>bow</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>438</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>439</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>440</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>441</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>Casual</td>\n",
              "      <td>dropped</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>442</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>colored</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>other</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>443</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>satin</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>444</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>striped</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>445</th>\n",
              "      <td>Brief</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>shiffon</td>\n",
              "      <td>sequined</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>446</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>high</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>other</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>striped</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>447</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>colored</td>\n",
              "      <td>full</td>\n",
              "      <td>dropped</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>448</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>S</td>\n",
              "      <td>summer</td>\n",
              "      <td>colored</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>bow</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>449</th>\n",
              "      <td>Novelty</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>none</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>450</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>none</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>451</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>S</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>452</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>L</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>453</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>jersey</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>454</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>designer</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>455</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>456</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>dropped</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>457</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>458</th>\n",
              "      <td>work</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>459</th>\n",
              "      <td>Novelty</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>460</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>draped</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>461</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>462</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>dobby</td>\n",
              "      <td>lace</td>\n",
              "      <td>animal</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>463</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.50000</td>\n",
              "      <td>XL</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>464</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>465</th>\n",
              "      <td>party</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>Casual</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>466</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>467</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>468</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>469</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>470</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>S</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>471</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>animal</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>472</th>\n",
              "      <td>cute</td>\n",
              "      <td>high</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>terry</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>473</th>\n",
              "      <td>work</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>designer</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>474</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>475</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>476</th>\n",
              "      <td>Casual</td>\n",
              "      <td>high</td>\n",
              "      <td>4.90000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>sequined</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>477</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>hollowout</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>478</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>479</th>\n",
              "      <td>cute</td>\n",
              "      <td>low</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>worsted</td>\n",
              "      <td>lace</td>\n",
              "      <td>patchwork</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>480</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>pockets</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>481</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sequined</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>482</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>beading</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>483</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>sashes</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>484</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>485</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>M</td>\n",
              "      <td>autumn</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>Casual</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>486</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>cascading</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>487</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>sequined</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>488</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>bow</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>489</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>490</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.80000</td>\n",
              "      <td>XL</td>\n",
              "      <td>winter</td>\n",
              "      <td>colored</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>bow</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>491</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>5.00000</td>\n",
              "      <td>L</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>492</th>\n",
              "      <td>cute</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>493</th>\n",
              "      <td>bohemian</td>\n",
              "      <td>low</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>natural</td>\n",
              "      <td>natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>none</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>494</th>\n",
              "      <td>Brief</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>chiffon</td>\n",
              "      <td>Casual</td>\n",
              "      <td>striped</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>495</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>spring</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>natural</td>\n",
              "      <td>non-natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>496</th>\n",
              "      <td>Sexy</td>\n",
              "      <td>low</td>\n",
              "      <td>4.30000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>Casual</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>497</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.70000</td>\n",
              "      <td>M</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>full</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>Casual</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>498</th>\n",
              "      <td>Casual</td>\n",
              "      <td>medium</td>\n",
              "      <td>4.60000</td>\n",
              "      <td>L</td>\n",
              "      <td>winter</td>\n",
              "      <td>neck</td>\n",
              "      <td>sleeveless</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>broadcloth</td>\n",
              "      <td>applique</td>\n",
              "      <td>print</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>499</th>\n",
              "      <td>Casual</td>\n",
              "      <td>low</td>\n",
              "      <td>4.40000</td>\n",
              "      <td>XL</td>\n",
              "      <td>summer</td>\n",
              "      <td>neck</td>\n",
              "      <td>short</td>\n",
              "      <td>empire</td>\n",
              "      <td>natural</td>\n",
              "      <td>Corduroy</td>\n",
              "      <td>lace</td>\n",
              "      <td>solid</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "        Style   Price  Rating Size  Season  NeckLine SleeveLength waiseline  \\\n",
              "0        Sexy     low 4.60000    M  summer      neck   sleeveless    empire   \n",
              "1      Casual     low 0.00000    L  summer      neck     designer   natural   \n",
              "2     vintage    high 0.00000    L  autumn      neck         full   natural   \n",
              "3       Brief  medium 4.60000    L  spring      neck         full   natural   \n",
              "4        cute     low 4.50000    M  summer      neck     designer   natural   \n",
              "5    bohemian     low 0.00000    M  summer      neck   sleeveless    empire   \n",
              "6      Casual  medium 0.00000   XL  summer      neck         full    Casual   \n",
              "7     Novelty  medium 0.00000   XL  autumn      neck        short   natural   \n",
              "8       Flare  medium 0.00000   XL  spring      neck        short    empire   \n",
              "9    bohemian     low 0.00000   XL  summer      neck   sleeveless   natural   \n",
              "10      party  medium 5.00000   XL  summer      neck         full   natural   \n",
              "11      Flare  medium 0.00000   XL  spring      neck        short    Casual   \n",
              "12       Sexy     low 4.70000    M  winter      neck        short    Casual   \n",
              "13    vintage  medium 4.80000    M  summer      neck        short    empire   \n",
              "14     Casual     low 5.00000    M  summer      neck        short    Casual   \n",
              "15     Casual     low 0.00000   XL  winter      neck         full    Casual   \n",
              "16       cute  medium 4.70000    L  spring      neck        short    Casual   \n",
              "17   bohemian  medium 5.00000   XL  autumn      neck         full   natural   \n",
              "18      Brief  medium 0.00000    M  winter   colored        short   natural   \n",
              "19       Sexy  medium 5.00000    M  autumn      neck   sleeveless    empire   \n",
              "20       Sexy  medium 4.50000    L  autumn      neck         full    Casual   \n",
              "21     Casual     low 4.30000    M  summer      neck   sleeveless   natural   \n",
              "22      Brief     low 4.00000   XL  summer      neck        short   natural   \n",
              "23       Sexy  medium 4.70000    S  summer      neck   sleeveless    empire   \n",
              "24       Sexy  medium 0.00000   XL  autumn      neck   sleeveless   natural   \n",
              "25       Sexy  medium 0.00000    M  autumn      neck   sleeveless    empire   \n",
              "26       Sexy  medium 4.70000    M  spring      neck   sleeveless   natural   \n",
              "27     Casual     low 0.00000    L  summer      neck   sleeveless   natural   \n",
              "28       cute     low 4.30000   XL  autumn      neck   sleeveless   natural   \n",
              "29       cute     low 4.70000    M  spring  designer        short    empire   \n",
              "30     Casual  medium 4.60000    L  autumn      neck   sleeveless    empire   \n",
              "31     Casual     low 0.00000    M  spring      neck   sleeveless   natural   \n",
              "32     Casual  medium 4.40000    L  autumn      neck   sleeveless   natural   \n",
              "33      Brief  medium 4.30000    L  spring      neck   sleeveless    empire   \n",
              "34      party    high 4.70000    M  spring      neck        short    Casual   \n",
              "35     Casual     low 4.60000   XL  winter      neck         full   natural   \n",
              "36    vintage  medium 4.60000   XL  winter      neck         full   natural   \n",
              "37      Brief  medium 0.00000    M  autumn      neck        short   natural   \n",
              "38      party  medium 4.60000    M  winter      neck   sleeveless   natural   \n",
              "39     Casual  medium 4.50000    M  spring      neck        short    empire   \n",
              "40      Brief  medium 5.00000   XL  spring      neck   sleeveless   natural   \n",
              "41      Brief     low 4.40000    L  autumn      neck        short   natural   \n",
              "42     Casual  medium 4.80000    M  winter      neck        short   natural   \n",
              "43     Casual     low 4.80000   XL  spring      neck   sleeveless   natural   \n",
              "44    vintage  medium 4.80000    M  winter      neck   sleeveless   natural   \n",
              "45       Sexy  medium 0.00000    M  winter      neck        short   natural   \n",
              "46       Sexy  medium 4.80000    L  spring      neck        short    empire   \n",
              "47     Casual  medium 0.00000    M  summer      neck        short   natural   \n",
              "48     Casual     low 4.70000    M  summer      neck   sleeveless    empire   \n",
              "49     Casual  medium 0.00000    L  winter      neck         full    empire   \n",
              "50       Sexy     low 5.00000   XL  summer      neck   sleeveless    empire   \n",
              "51     Casual     low 4.30000   XL  summer      neck   sleeveless    Casual   \n",
              "52     Casual  medium 0.00000    L  spring      neck        short   natural   \n",
              "53     Casual  medium 4.60000   XL  autumn      neck   sleeveless   natural   \n",
              "54       Sexy  medium 4.50000    M  spring      neck        short   natural   \n",
              "55    Novelty  medium 0.00000    S  winter  designer         full   natural   \n",
              "56     Casual  medium 4.90000    S  winter  designer         full   natural   \n",
              "57       Sexy     low 4.60000    L  autumn      neck   sleeveless   natural   \n",
              "58   bohemian     low 4.50000    M  summer      neck   sleeveless   natural   \n",
              "59       work  medium 0.00000    M  autumn      neck   sleeveless   natural   \n",
              "60       cute    high 0.00000    M  spring      neck         full   natural   \n",
              "61     Casual  medium 0.00000   XL  spring      neck        short   natural   \n",
              "62     Casual  medium 5.00000    M  summer      neck        short    empire   \n",
              "63     Casual  medium 4.70000    M  spring      neck   sleeveless   natural   \n",
              "64       Sexy     low 4.00000    S  autumn      neck   sleeveless    empire   \n",
              "65     Casual  medium 5.00000    M  autumn      neck        short   natural   \n",
              "66     Casual     low 0.00000   XL  summer      neck        short   natural   \n",
              "67     Casual  medium 4.50000    S  winter      neck         full   natural   \n",
              "68       work  medium 4.80000    L  summer      neck        short   natural   \n",
              "69     Casual  medium 0.00000    M  autumn      neck        short    empire   \n",
              "70   bohemian  medium 5.00000   XL  summer      neck   sleeveless   natural   \n",
              "71       Sexy     low 0.00000    M  spring      neck        short   natural   \n",
              "72       Sexy  medium 4.20000    M  winter      neck   sleeveless   natural   \n",
              "73     Casual     low 4.80000   XL  spring      neck         full   natural   \n",
              "74     Casual     low 4.40000    S  autumn      neck   sleeveless   natural   \n",
              "75     Casual     low 4.70000    L  spring      neck        short    Casual   \n",
              "76     Casual  medium 5.00000   XL  winter      neck         full    Casual   \n",
              "77     Casual     low 0.00000   XL  spring      neck   sleeveless    Casual   \n",
              "78     Casual  medium 0.00000   XL  spring      neck   sleeveless   natural   \n",
              "79   bohemian    high 4.70000   XL  winter      neck   sleeveless    Casual   \n",
              "80     Casual     low 5.00000    M  summer      neck   sleeveless    empire   \n",
              "81      party  medium 4.70000    M  spring      neck   sleeveless   natural   \n",
              "82       Sexy     low 5.00000   XL  spring      neck         full   natural   \n",
              "83    vintage     low 4.60000    M  summer      neck        short   natural   \n",
              "84     Casual  medium 0.00000   XL  winter      neck        short    empire   \n",
              "85     Casual     low 4.90000    L  summer      neck        short    Casual   \n",
              "86     Casual     low 0.00000    S  autumn      neck         full   natural   \n",
              "87       Sexy  medium 4.00000    S  autumn      neck   sleeveless    Casual   \n",
              "88       Sexy     low 5.00000    M  autumn      neck         full   natural   \n",
              "89      Brief  medium 4.60000    M  winter   colored        short    Casual   \n",
              "90     Casual  medium 0.00000    L  spring      neck   sleeveless   natural   \n",
              "91     Casual  medium 4.80000    L  winter      neck        short   natural   \n",
              "92         OL  medium 0.00000    M  winter   colored        short   natural   \n",
              "93       Sexy     low 4.80000    M  spring      neck        short   natural   \n",
              "94     Casual  medium 0.00000    S  spring      neck         full    Casual   \n",
              "95     Casual  medium 0.00000    M  spring      neck        short   natural   \n",
              "96     Casual  medium 0.00000    M  spring      neck   sleeveless   natural   \n",
              "97     Casual  medium 0.00000   XL  winter      neck         full   natural   \n",
              "98    vintage     low 4.80000    S  summer      neck        short   natural   \n",
              "99       Sexy     low 4.80000    L  summer      neck         full   natural   \n",
              "100   fashion  medium 4.00000   XL  summer  designer         full    Casual   \n",
              "101    Casual  medium 4.70000    L  summer      neck        short   natural   \n",
              "102    Casual     low 0.00000   XL  winter      neck        short   natural   \n",
              "103  bohemian     low 4.80000   XL  summer      neck        short    Casual   \n",
              "104      work  medium 4.60000    L  winter   colored        short    empire   \n",
              "105   vintage  medium 4.70000    L  summer      neck        short   natural   \n",
              "106      cute     low 4.70000    M  spring      neck        short    empire   \n",
              "107    Casual     low 4.60000   XL  autumn      neck         full   natural   \n",
              "108    Casual  medium 0.00000   XL  spring      neck   sleeveless   natural   \n",
              "109    Casual  medium 4.70000    L  autumn      neck        short    Casual   \n",
              "110      Sexy  medium 0.00000    L  autumn      neck   sleeveless    empire   \n",
              "111    Casual     low 4.70000   XL  winter      neck   sleeveless   natural   \n",
              "112    Casual  medium 0.00000    M  autumn      neck        short    empire   \n",
              "113      cute  medium 4.80000    L  autumn      neck   sleeveless   natural   \n",
              "114     party  medium 5.00000    M  spring      neck        short   natural   \n",
              "115      cute  medium 4.30000    L  winter      neck   sleeveless   natural   \n",
              "116    Casual  medium 4.50000    L  spring      neck        short   natural   \n",
              "117    Casual     low 4.70000    L  autumn      neck         full    Casual   \n",
              "118    Casual     low 4.50000   XL  autumn      neck        short   natural   \n",
              "119      Sexy  medium 3.60000    L  winter      neck         full   natural   \n",
              "120      work  medium 4.80000    L  winter      neck        short   natural   \n",
              "121   vintage  medium 0.00000   XL  summer      neck   sleeveless    Casual   \n",
              "122      Sexy     low 4.60000   XL  spring      neck         full   natural   \n",
              "123      Sexy     low 0.00000   XL  winter      neck   sleeveless    empire   \n",
              "124      work  medium 4.60000    L  spring      neck        short    empire   \n",
              "125    Casual  medium 4.40000    M  summer      neck        short    empire   \n",
              "126      cute     low 4.90000    M  autumn      neck        short   natural   \n",
              "127      Sexy     low 4.60000   XL  summer      neck   sleeveless   natural   \n",
              "128     party  medium 4.40000   XL  autumn      neck        short   natural   \n",
              "129    Casual  medium 0.00000   XL  spring      neck        short    Casual   \n",
              "130    Casual     low 0.00000    M  summer      neck         full   natural   \n",
              "131      Sexy  medium 4.60000    M  winter      neck         full   natural   \n",
              "132      work  medium 4.60000    M  spring      neck         full    Casual   \n",
              "133      cute  medium 4.70000    L  winter      neck   sleeveless   natural   \n",
              "134  bohemian  medium 4.70000    L  autumn      neck   sleeveless   natural   \n",
              "135      cute    high 0.00000    M  winter      neck        short    empire   \n",
              "136    Casual  medium 0.00000   XL  winter      neck        short    empire   \n",
              "137   Novelty  medium 4.90000    L  autumn      neck        short   natural   \n",
              "138    Casual     low 4.70000    M  autumn      neck         full    Casual   \n",
              "139      cute  medium 4.30000   XL  summer      neck   sleeveless    Casual   \n",
              "140      Sexy     low 0.00000   XL  autumn      neck        short    empire   \n",
              "141      cute     low 4.70000   XL  summer      neck        short    empire   \n",
              "142      Sexy     low 4.50000    L  spring      neck   sleeveless    Casual   \n",
              "143    Casual  medium 4.70000    M  autumn      neck   sleeveless    Casual   \n",
              "144    Casual  medium 0.00000    L  spring      neck   sleeveless   natural   \n",
              "145      cute     low 4.70000   XL  summer      neck   sleeveless    Casual   \n",
              "146    Casual     low 4.40000   XL  summer  designer   sleeveless   natural   \n",
              "147    Casual  medium 4.80000    L  winter      neck        short    empire   \n",
              "148   vintage  medium 4.30000   XL  winter      neck        short    Casual   \n",
              "149      cute     low 4.50000    L  summer      neck   sleeveless   natural   \n",
              "150    Casual  medium 4.40000    M  summer  designer   sleeveless   natural   \n",
              "151   vintage  medium 0.00000    S  winter  designer        short   natural   \n",
              "152      Sexy     low 4.70000   XL  summer  designer   sleeveless   natural   \n",
              "153   vintage    high 0.00000    L  summer      neck        short   natural   \n",
              "154    Casual     low 0.00000   XL  spring      neck        short    Casual   \n",
              "155      Sexy  medium 0.00000    S  autumn      neck        short   natural   \n",
              "156    Casual     low 0.00000   XL  spring      neck        short   natural   \n",
              "157      cute  medium 5.00000   XL  winter      neck   sleeveless   natural   \n",
              "158    Casual     low 4.70000   XL  summer      neck   sleeveless    Casual   \n",
              "159      Sexy     low 4.80000   XL  spring      neck   sleeveless    Casual   \n",
              "160    Casual  medium 4.50000    L  winter      neck        short   natural   \n",
              "161   vintage  medium 0.00000    S  spring      neck         full   natural   \n",
              "162    Casual  medium 3.70000   XL  autumn      neck         full    Casual   \n",
              "163   vintage  medium 4.80000    L  winter      neck   sleeveless   natural   \n",
              "164      cute  medium 0.00000   XL  spring      neck         full    Casual   \n",
              "165    Casual  medium 0.00000    L  winter  designer        short   natural   \n",
              "166      Sexy  medium 5.00000    M  winter      neck   sleeveless    empire   \n",
              "167     Brief  medium 4.90000   XL  summer      neck   sleeveless   natural   \n",
              "168    Casual    high 4.90000    S  spring      neck        short   natural   \n",
              "169     Brief  medium 4.60000   XL  winter      neck         full   natural   \n",
              "170    Casual     low 4.50000   XL  winter      neck         full   natural   \n",
              "171    Casual     low 4.80000   XL  summer      neck        short    empire   \n",
              "172      Sexy  medium 4.60000    L  summer      neck        short   natural   \n",
              "173    Casual  medium 4.50000    M  winter      neck   sleeveless   natural   \n",
              "174      work  medium 0.00000    S  autumn      neck   sleeveless   natural   \n",
              "175    Casual     low 0.00000    L  winter      neck   sleeveless    empire   \n",
              "176      cute     low 5.00000    L  winter      neck        short   natural   \n",
              "177     Brief  medium 4.30000    M  spring      neck         full   natural   \n",
              "178      Sexy     low 4.40000   XL  autumn      neck         full    empire   \n",
              "179      cute     low 0.00000   XL  summer   colored        short    empire   \n",
              "180    Casual  medium 4.50000   XL  summer      neck        short   natural   \n",
              "181      Sexy     low 4.70000    M  winter      neck   sleeveless    Casual   \n",
              "182    Casual     low 4.70000   XL  spring      neck   sleeveless    empire   \n",
              "183    Casual  medium 4.80000    M  winter   colored        short   natural   \n",
              "184      Sexy     low 4.30000   XL  winter      neck   sleeveless   natural   \n",
              "185  bohemian  medium 0.00000    L  winter  designer         full   natural   \n",
              "186    Casual     low 0.00000   XL  Casual      neck         full   natural   \n",
              "187      cute  medium 4.80000   XL  spring      neck   sleeveless   natural   \n",
              "188      Sexy  medium 0.00000    S  autumn      neck   sleeveless    empire   \n",
              "189    Casual     low 4.60000    S  spring      neck         full   natural   \n",
              "190   vintage  medium 4.70000   XL  spring  designer   sleeveless   natural   \n",
              "191      work     low 4.70000   XL  summer      neck         full    empire   \n",
              "192      cute  medium 4.80000    M  summer      neck        short   natural   \n",
              "193      cute  medium 0.00000    M  summer      neck        short   natural   \n",
              "194    Casual  medium 4.70000    M  winter      neck         full    Casual   \n",
              "195    Casual     low 4.60000   XL  winter      neck         full   natural   \n",
              "196     party  medium 5.00000   XL  summer      neck   sleeveless    Casual   \n",
              "197    Casual  medium 0.00000   XL  summer      neck   sleeveless   natural   \n",
              "198      Sexy  medium 5.00000    L  winter      neck        short   natural   \n",
              "199      Sexy  medium 4.80000   XL  winter      neck   sleeveless   natural   \n",
              "200    Casual  medium 4.70000    S  summer      neck        short   natural   \n",
              "201    Casual  medium 4.10000    M  autumn      neck         full    Casual   \n",
              "202    Casual  medium 5.00000   XL  autumn      neck        short   natural   \n",
              "203      Sexy  medium 5.00000    M  summer      neck   sleeveless    empire   \n",
              "204      work  medium 4.60000    L  summer      neck        short   natural   \n",
              "205    Casual  medium 4.50000    M  summer   colored   sleeveless    Casual   \n",
              "206   vintage  medium 4.50000    L  autumn      neck   sleeveless    empire   \n",
              "207    Casual  medium 0.00000    M  summer      neck        short   natural   \n",
              "208      cute  medium 4.70000    L  summer      neck   sleeveless   natural   \n",
              "209  bohemian     low 4.70000   XL  winter      neck        short   natural   \n",
              "210    Casual     low 5.00000   XL  spring      neck   sleeveless    empire   \n",
              "211    Casual  medium 5.00000    M  winter      neck   sleeveless   natural   \n",
              "212    Casual  medium 4.30000   XL  summer      neck   sleeveless   natural   \n",
              "213      work     low 4.50000    M  winter      neck        short    Casual   \n",
              "214    Casual  medium 4.30000    S  spring      neck         full   natural   \n",
              "215    Casual  medium 4.40000    L  autumn      neck        short   natural   \n",
              "216      Sexy     low 4.30000    M  autumn  designer        short   natural   \n",
              "217    Casual     low 4.60000   XL  summer      neck         full   natural   \n",
              "218    Casual     low 4.60000    L  winter      neck         full    Casual   \n",
              "219    Casual  medium 4.60000    M  spring      neck   sleeveless   natural   \n",
              "220    Casual     low 0.00000   XL  autumn   colored        short    empire   \n",
              "221    Casual  medium 4.70000    S  spring      neck        short    empire   \n",
              "222    Casual  medium 0.00000    S  summer      neck   sleeveless    empire   \n",
              "223    Casual     low 4.80000   XL  summer      neck   sleeveless   natural   \n",
              "224    Casual  medium 5.00000    S  winter      neck   sleeveless    empire   \n",
              "225      Sexy    high 0.00000   XL  winter      neck   sleeveless   natural   \n",
              "226    Casual     low 4.40000   XL  summer      neck   sleeveless   natural   \n",
              "227    Casual  medium 4.80000    M  autumn      neck        short    Casual   \n",
              "228    Casual  medium 5.00000   XL  summer      neck   sleeveless    Casual   \n",
              "229      Sexy     low 4.80000    M  autumn      neck         full   natural   \n",
              "230    Casual  medium 4.60000   XL  winter      neck         full   natural   \n",
              "231    Casual  medium 4.60000    M  winter      neck         full   natural   \n",
              "232    Casual     low 5.00000    S  spring      neck   sleeveless   natural   \n",
              "233      cute  medium 0.00000    M  winter      neck        short   natural   \n",
              "234    Casual     low 4.80000   XL  spring      neck   sleeveless    Casual   \n",
              "235    Casual  medium 4.60000    M  autumn      neck        short    empire   \n",
              "236  bohemian  medium 5.00000    M  spring      neck   sleeveless    empire   \n",
              "237    Casual     low 4.90000   XL  winter      neck   sleeveless    empire   \n",
              "238    Casual  medium 4.70000    L  summer      neck   sleeveless   natural   \n",
              "239    Casual  medium 4.60000    M  winter      neck         full   natural   \n",
              "240    Casual  medium 4.70000    M  winter      neck   sleeveless    empire   \n",
              "241      Sexy  medium 4.70000    M  winter      neck   sleeveless   natural   \n",
              "242    Casual  medium 3.50000    M  winter      neck        short   natural   \n",
              "243    Casual  medium 4.80000    M  winter      neck        short   natural   \n",
              "244    Casual  medium 0.00000    M  winter      neck         full   natural   \n",
              "245    Casual     low 4.60000    M  summer      neck   sleeveless   natural   \n",
              "246    Casual  medium 4.70000    L  spring      neck        short   natural   \n",
              "247    Casual     low 4.50000   XL  summer      neck         full   natural   \n",
              "248    Casual  medium 4.70000    M  summer      neck   sleeveless   natural   \n",
              "249    Casual     low 4.50000    M  winter      neck        short   natural   \n",
              "250    Casual     low 4.70000    S  summer      neck         full   natural   \n",
              "251      cute     low 0.00000   XL  summer      neck   sleeveless    Casual   \n",
              "252     party    high 5.00000    M  spring      neck   sleeveless   natural   \n",
              "253    Casual  medium 4.90000    M  autumn      neck   sleeveless    Casual   \n",
              "254     party    high 0.00000    L  winter      neck   sleeveless   natural   \n",
              "255     party    high 0.00000    M  winter      neck     designer    Casual   \n",
              "256    Casual     low 4.40000    M  winter      neck     designer    Casual   \n",
              "257     party    high 0.00000    M  spring      neck        short   natural   \n",
              "258     party    high 0.00000    M  winter  designer   sleeveless   natural   \n",
              "259     party    high 0.00000    M  spring  designer   sleeveless    Casual   \n",
              "260     party  medium 5.00000    M  winter      neck     designer    empire   \n",
              "261     party    high 4.70000    M  winter  designer   sleeveless   natural   \n",
              "262     party  Casual 4.80000   XL  winter      neck   sleeveless    empire   \n",
              "263     party  Casual 4.50000    L  summer    Casual         full    Casual   \n",
              "264     party    high 4.90000    M  spring  designer   sleeveless    empire   \n",
              "265     party    high 4.60000    M  winter  designer   sleeveless   natural   \n",
              "266     party  medium 5.00000    M  spring  designer   sleeveless   natural   \n",
              "267     party    high 4.80000    L  spring  designer   sleeveless    empire   \n",
              "268     party    high 0.00000    M  winter  designer   sleeveless   natural   \n",
              "269     party    high 4.60000    L  spring      neck   sleeveless    empire   \n",
              "270     party  medium 4.80000    L  Casual  designer   sleeveless    empire   \n",
              "271     party  medium 4.60000    S  winter  designer        short    empire   \n",
              "272     party    high 4.90000    M  spring  designer   sleeveless   natural   \n",
              "273     party  medium 4.80000    S  spring      neck   sleeveless    empire   \n",
              "274     party    high 4.20000    L  winter      neck   sleeveless    Casual   \n",
              "275    Casual     low 4.40000   XL  summer      neck   sleeveless    Casual   \n",
              "276     party    high 4.10000    M  winter  designer        short   natural   \n",
              "277     party    high 0.00000    M  winter      neck         full   natural   \n",
              "278    Casual    high 4.60000    M  summer  designer   sleeveless    empire   \n",
              "279     party  medium 4.70000   XL  winter      neck   sleeveless    Casual   \n",
              "280     party    high 4.70000    L  winter      neck   sleeveless    empire   \n",
              "281     party    high 4.50000    M  spring      neck     designer    Casual   \n",
              "282     party  medium 4.70000   XL  spring  designer   sleeveless    empire   \n",
              "283     party    high 4.80000    M  summer  designer   sleeveless  princess   \n",
              "284     party    high 4.60000    M  summer      neck   sleeveless   natural   \n",
              "285     party  medium 4.70000    M  winter      neck   sleeveless    empire   \n",
              "286      cute  medium 4.40000   XL  spring  designer   sleeveless    empire   \n",
              "287     party  medium 5.00000    M  spring      neck   sleeveless    Casual   \n",
              "288     party    high 4.80000   XL  spring  designer   sleeveless   natural   \n",
              "289     party  medium 4.80000    M  spring      neck   sleeveless   natural   \n",
              "290     party    high 4.90000    L  spring      neck   sleeveless    Casual   \n",
              "291     party  medium 0.00000   XL  winter      neck        short    empire   \n",
              "292      work  medium 5.00000   XL  winter      neck        short    Casual   \n",
              "293     party    high 4.90000    M  spring      neck   sleeveless    empire   \n",
              "294    Casual    high 5.00000   XL  summer      neck   sleeveless   natural   \n",
              "295    Casual    high 0.00000    S  spring      neck         full    Casual   \n",
              "296    Casual  medium 4.70000    M  spring      neck   sleeveless   natural   \n",
              "297     party  medium 0.00000    M  spring      neck   sleeveless   natural   \n",
              "298    Casual  medium 4.40000   XL  summer      neck   sleeveless    empire   \n",
              "299    Casual    high 4.60000    M  winter      neck        short   natural   \n",
              "300    Casual     low 4.40000   XL  winter  designer   sleeveless   natural   \n",
              "301     party    high 4.50000    M  winter      neck   sleeveless    Casual   \n",
              "302    Casual  medium 4.80000   XL  summer      neck   sleeveless   natural   \n",
              "303      Sexy  medium 5.00000    M  summer      neck   sleeveless   natural   \n",
              "304   vintage  medium 4.90000   XL  summer      neck     designer    empire   \n",
              "305   vintage  medium 4.70000    S  summer  designer        short    empire   \n",
              "306      work  medium 4.90000    M  summer   colored        short    empire   \n",
              "307    Casual     low 4.70000    L  spring      neck        short   natural   \n",
              "308    Casual  medium 4.80000    L  autumn      neck        short   natural   \n",
              "309      Sexy     low 4.70000   XL  spring      neck   sleeveless    Casual   \n",
              "310    Casual  medium 0.00000    S  winter      neck        short   natural   \n",
              "311    Casual  medium 4.20000    S  winter      neck   sleeveless    empire   \n",
              "312   Novelty  medium 0.00000   XL  summer      neck         full   natural   \n",
              "313    Casual     low 4.30000   XL  summer  designer   sleeveless    empire   \n",
              "314    Casual  medium 3.70000    M  summer      neck   sleeveless   natural   \n",
              "315    Casual  medium 5.00000   XL  winter      neck   sleeveless   natural   \n",
              "316      Sexy     low 5.00000   XL  spring      neck   sleeveless    empire   \n",
              "317      cute     low 0.00000   XL  winter      neck   sleeveless   natural   \n",
              "318   vintage  medium 4.80000    M  summer      neck         full   natural   \n",
              "319  bohemian  medium 4.80000    L  winter      neck   sleeveless   natural   \n",
              "320  bohemian  medium 0.00000   XL  spring      neck   sleeveless   natural   \n",
              "321      Sexy  medium 4.50000    M  summer   colored   sleeveless    Casual   \n",
              "322   Novelty  medium 4.20000    M  winter      neck        short   natural   \n",
              "323    Casual     low 5.00000   XL  spring      neck         full   natural   \n",
              "324    Casual  medium 5.00000    L  winter      neck        short   natural   \n",
              "325    Casual     low 4.80000    M  winter      neck   sleeveless   natural   \n",
              "326  bohemian     low 5.00000   XL  spring      neck        short   natural   \n",
              "327    Casual     low 5.00000   XL  spring   colored   sleeveless   natural   \n",
              "328    Casual     low 5.00000    M  spring      neck   sleeveless   natural   \n",
              "329      cute  medium 4.30000    M  summer    Casual       Casual   natural   \n",
              "330   Novelty  medium 0.00000   XL  winter      neck        short   natural   \n",
              "331      cute     low 0.00000    L  spring      neck   sleeveless    empire   \n",
              "332      Sexy     low 4.80000   XL  spring      neck   sleeveless   natural   \n",
              "333      Sexy     low 4.80000   XL  summer      neck   sleeveless    empire   \n",
              "334    Casual     low 4.40000    M  winter      neck   sleeveless   natural   \n",
              "335    Casual  medium 4.50000    M  winter      neck   sleeveless   natural   \n",
              "336    Casual     low 4.70000    S  summer      neck         full   natural   \n",
              "337    Casual     low 4.40000   XL  spring      neck   sleeveless   natural   \n",
              "338      work  medium 4.90000    M  winter      neck        short   natural   \n",
              "339      cute  medium 4.60000   XL  spring      neck        short   natural   \n",
              "340    Casual     low 4.70000   XL  spring      neck        short   natural   \n",
              "341    Casual     low 4.70000    M  winter      neck         full    empire   \n",
              "342    Casual  medium 4.80000    M  spring      neck   sleeveless   natural   \n",
              "343      Sexy     low 4.80000    L  summer      neck   sleeveless   natural   \n",
              "344    Casual  medium 4.30000    M  spring      neck        short    Casual   \n",
              "345    Casual  medium 4.70000   XL  winter      neck        short    empire   \n",
              "346    Casual     low 0.00000    L  winter      neck         full    Casual   \n",
              "347      Sexy  medium 4.70000    M  autumn      neck   sleeveless   natural   \n",
              "348    Casual     low 4.70000   XL  winter      neck   sleeveless   natural   \n",
              "349    Casual    high 0.00000    L  winter      neck         full    Casual   \n",
              "350    Casual     low 4.70000    L  summer      neck   sleeveless   natural   \n",
              "351    Casual  medium 4.70000   XL  summer      neck         full   natural   \n",
              "352    Casual  medium 0.00000   XL  winter      neck         full    Casual   \n",
              "353    Casual     low 4.70000   XL  summer      neck     designer   natural   \n",
              "354    Casual  medium 4.70000    M  summer      neck        short    Casual   \n",
              "355      Sexy     low 4.50000   XL  summer      neck   sleeveless    Casual   \n",
              "356   vintage     low 4.00000   XL  summer  designer        short   natural   \n",
              "357      Sexy     low 4.70000   XL  summer      neck   sleeveless    Casual   \n",
              "358  bohemian     low 5.00000   XL  summer      neck   sleeveless    empire   \n",
              "359    Casual     low 4.70000    S  winter      neck   sleeveless   natural   \n",
              "360      Sexy  medium 4.50000    S  winter      neck   sleeveless    Casual   \n",
              "361      cute  medium 4.70000    M  summer      neck   sleeveless   natural   \n",
              "362   vintage     low 0.00000   XL  summer      neck   sleeveless   natural   \n",
              "363    Casual  medium 4.10000    L  winter      neck   sleeveless   natural   \n",
              "364    Casual  medium 4.20000    M  winter      neck         full    empire   \n",
              "365     Brief  medium 4.80000   XL  winter      neck        short   natural   \n",
              "366     Brief  medium 4.90000   XL  winter      neck   sleeveless   natural   \n",
              "367      Sexy  medium 4.80000    S  winter      neck   sleeveless    empire   \n",
              "368    Casual  medium 4.70000    L  winter      neck   sleeveless   natural   \n",
              "369   vintage  medium 4.70000    M  summer      neck        short   natural   \n",
              "370    Casual  medium 4.80000   XL  summer      neck   sleeveless   natural   \n",
              "371      Sexy     low 4.70000    M  winter      neck   sleeveless   natural   \n",
              "372    Casual  medium 5.00000    S  spring  designer         full    empire   \n",
              "373    Casual     low 1.00000    M  spring      neck        short    Casual   \n",
              "374      Sexy  medium 4.10000   XL  summer      neck   sleeveless   natural   \n",
              "375    Casual     low 4.00000   XL  summer      neck   sleeveless   natural   \n",
              "376      work  medium 4.70000    M  spring      neck   sleeveless    Casual   \n",
              "377      cute  medium 4.60000   XL  spring      neck         full   natural   \n",
              "378    Casual     low 5.00000    M  spring      neck   sleeveless   natural   \n",
              "379    Casual  medium 4.70000    M  autumn      neck   sleeveless   natural   \n",
              "380    Casual     low 4.60000   XL  winter      neck         full   natural   \n",
              "381    Casual  medium 4.50000    L  summer      neck        short   natural   \n",
              "382      cute  medium 4.60000    M  autumn      neck        short   natural   \n",
              "383    Casual     low 4.60000   XL  autumn      neck        short   natural   \n",
              "384    Casual     low 4.70000    L  summer    Casual   sleeveless    Casual   \n",
              "385      Sexy     low 0.00000    L  summer      neck   sleeveless    empire   \n",
              "386  bohemian  medium 4.00000   XL  winter      neck   sleeveless   natural   \n",
              "387    Casual     low 4.70000   XL  summer      neck         full   natural   \n",
              "388      work  medium 0.00000    M  summer      neck   sleeveless   natural   \n",
              "389  bohemian  medium 4.10000   XL  summer      neck        short    Casual   \n",
              "390    Casual  medium 0.00000    M  spring      neck        short   natural   \n",
              "391     Brief     low 4.60000    M  summer      neck        short   natural   \n",
              "392      cute     low 0.00000   XL  spring      neck   sleeveless    empire   \n",
              "393    Casual  medium 5.00000    M  spring      neck        short    Casual   \n",
              "394    Casual     low 5.00000   XL  winter      neck         full   natural   \n",
              "395   vintage  medium 4.50000    L  winter      neck        short    empire   \n",
              "396    Casual  medium 4.50000   XL  summer      neck        short   natural   \n",
              "397  bohemian     low 4.40000    L  summer   colored        short   natural   \n",
              "398    Casual    high 0.00000    L  winter      neck        short   natural   \n",
              "399    Casual  medium 4.80000   XL  winter      neck   sleeveless    Casual   \n",
              "400     Brief     low 4.70000    M  winter      neck         full   natural   \n",
              "401    Casual  medium 0.00000   XL  winter   colored         full    Casual   \n",
              "402    Casual  medium 4.70000    M  winter      neck        short    empire   \n",
              "403     party  medium 0.00000    M  summer      neck         full   natural   \n",
              "404  bohemian  medium 4.80000    S  summer      neck        short   natural   \n",
              "405      Sexy  medium 4.90000   XL  summer   colored   sleeveless   natural   \n",
              "406    Casual  medium 3.00000    M  spring  designer        short    empire   \n",
              "407    Casual     low 4.70000    L  autumn      neck        short   natural   \n",
              "408    Casual  medium 4.30000    M  autumn      neck   sleeveless   natural   \n",
              "409    Casual  medium 0.00000   XL  winter      neck        short    empire   \n",
              "410    Casual     low 5.00000   XL  summer      neck   sleeveless   natural   \n",
              "411   vintage  medium 0.00000    L  summer   colored        short    empire   \n",
              "412    Casual     low 4.70000   XL  winter      neck   sleeveless   natural   \n",
              "413   vintage  medium 5.00000    M  summer      neck        short   natural   \n",
              "414    Casual     low 4.70000    L  summer      neck         full   natural   \n",
              "415  bohemian  medium 4.60000    M  spring      neck   sleeveless   natural   \n",
              "416     party  medium 4.80000    M  summer      neck         full    Casual   \n",
              "417  bohemian     low 4.60000   XL  summer      neck   sleeveless   natural   \n",
              "418     party    high 4.60000   XL  summer      neck   sleeveless    empire   \n",
              "419      cute     low 4.80000    M  spring      neck        short   natural   \n",
              "420   vintage  medium 0.00000    M  spring      neck        short    empire   \n",
              "421    Casual  medium 4.90000    L  winter      neck        short   natural   \n",
              "422    Casual  medium 4.20000   XL  summer      neck   sleeveless   natural   \n",
              "423    Casual  medium 4.90000    M  summer      neck        short   dropped   \n",
              "424  bohemian     low 5.00000   XL  spring      neck        short   natural   \n",
              "425    Casual  medium 4.70000    M  summer      neck   sleeveless    Casual   \n",
              "426    Casual  medium 0.00000   XL  summer   colored        short    Casual   \n",
              "427    Casual  medium 0.00000   XL  summer      neck   sleeveless   natural   \n",
              "428      Sexy  medium 0.00000   XL  winter      neck   sleeveless   natural   \n",
              "429      Sexy     low 4.40000   XL  autumn      neck   sleeveless   natural   \n",
              "430      Sexy  medium 0.00000   XL  spring      neck         full   natural   \n",
              "431     Brief  medium 4.90000   XL  spring      neck         full   natural   \n",
              "432    Casual  medium 4.70000   XL  summer      neck        short   natural   \n",
              "433    Casual  medium 0.00000   XL  autumn      neck         full   natural   \n",
              "434    Casual  medium 4.80000    M  summer      neck         full   natural   \n",
              "435    Casual  medium 4.90000    L  spring   colored   sleeveless    empire   \n",
              "436     party  medium 4.70000    M  spring      neck        short    empire   \n",
              "437      Sexy     low 4.40000   XL  summer   colored   sleeveless   natural   \n",
              "438  bohemian     low 4.60000   XL  winter      neck   sleeveless    empire   \n",
              "439    Casual     low 4.60000   XL  autumn      neck         full   natural   \n",
              "440      Sexy     low 4.50000   XL  summer      neck   sleeveless    empire   \n",
              "441      Sexy     low 0.00000   XL  winter      neck       Casual   dropped   \n",
              "442    Casual  medium 0.00000   XL  spring   colored   sleeveless   natural   \n",
              "443      Sexy  medium 0.00000   XL  autumn      neck         full   natural   \n",
              "444      Sexy     low 4.80000   XL  spring      neck   sleeveless   natural   \n",
              "445     Brief     low 4.70000   XL  autumn      neck   sleeveless   natural   \n",
              "446      Sexy    high 5.00000    M  summer      neck   sleeveless   natural   \n",
              "447    Casual  medium 4.60000    L  summer   colored         full   dropped   \n",
              "448      cute  medium 4.90000    S  summer   colored   sleeveless    empire   \n",
              "449   Novelty  medium 4.90000    M  autumn      neck        short   natural   \n",
              "450    Casual     low 4.30000   XL  spring      neck         full    Casual   \n",
              "451    Casual     low 4.70000    S  autumn      neck   sleeveless   natural   \n",
              "452    Casual  medium 4.80000    L  autumn      neck   sleeveless   natural   \n",
              "453      cute  medium 4.50000    L  winter      neck   sleeveless   natural   \n",
              "454    Casual  medium 4.40000   XL  summer      neck     designer   natural   \n",
              "455     party  medium 0.00000    M  spring      neck   sleeveless    Casual   \n",
              "456      Sexy     low 0.00000   XL  summer      neck   sleeveless   dropped   \n",
              "457    Casual     low 4.80000    L  summer      neck        short   natural   \n",
              "458      work  medium 5.00000    M  summer      neck   sleeveless   natural   \n",
              "459   Novelty  medium 5.00000   XL  summer      neck   sleeveless   natural   \n",
              "460    Casual     low 4.60000   XL  spring      neck   sleeveless   natural   \n",
              "461    Casual  medium 4.50000    M  summer      neck         full   natural   \n",
              "462    Casual  medium 4.50000    L  spring      neck        short   natural   \n",
              "463    Casual  medium 4.50000   XL  autumn      neck        short   natural   \n",
              "464      cute     low 0.00000    M  summer      neck        short    Casual   \n",
              "465     party  medium 4.90000    M  winter      neck        short    Casual   \n",
              "466    Casual  medium 4.80000    M  summer      neck        short    Casual   \n",
              "467    Casual     low 4.40000    L  summer      neck   sleeveless   natural   \n",
              "468    Casual  medium 4.30000    M  winter      neck   sleeveless   natural   \n",
              "469      cute  medium 4.70000    L  summer      neck   sleeveless   natural   \n",
              "470      Sexy  medium 0.00000    S  summer      neck   sleeveless    Casual   \n",
              "471    Casual     low 4.40000   XL  summer      neck   sleeveless    Casual   \n",
              "472      cute    high 4.30000    M  spring      neck         full   natural   \n",
              "473      work  medium 4.80000    M  winter  designer         full   natural   \n",
              "474    Casual  medium 4.60000    M  spring      neck        short   natural   \n",
              "475      Sexy     low 0.00000   XL  summer      neck   sleeveless    empire   \n",
              "476    Casual    high 4.90000   XL  winter      neck         full    empire   \n",
              "477      Sexy     low 0.00000   XL  winter      neck   sleeveless   natural   \n",
              "478      cute  medium 5.00000    M  autumn      neck   sleeveless   natural   \n",
              "479      cute     low 0.00000   XL  spring      neck   sleeveless   natural   \n",
              "480    Casual     low 4.40000   XL  summer      neck         full   natural   \n",
              "481    Casual  medium 0.00000    L  spring      neck   sleeveless   natural   \n",
              "482      cute  medium 4.70000    M  spring      neck         full   natural   \n",
              "483    Casual  medium 4.60000    M  winter      neck        short   natural   \n",
              "484    Casual     low 4.40000   XL  summer      neck         full   natural   \n",
              "485    Casual     low 5.00000    M  autumn      neck   sleeveless    empire   \n",
              "486    Casual  medium 0.00000   XL  winter      neck        short   natural   \n",
              "487      Sexy  medium 0.00000   XL  winter      neck   sleeveless   natural   \n",
              "488    Casual     low 4.40000    M  summer      neck        short    empire   \n",
              "489      cute  medium 0.00000    L  summer      neck   sleeveless    empire   \n",
              "490    Casual     low 4.80000   XL  winter   colored         full   natural   \n",
              "491    Casual  medium 5.00000    L  summer      neck   sleeveless   natural   \n",
              "492      cute  medium 4.60000    M  spring      neck        short   natural   \n",
              "493  bohemian     low 4.60000   XL  summer      neck   sleeveless   natural   \n",
              "494     Brief  medium 4.70000    M  winter      neck        short   natural   \n",
              "495    Casual     low 4.70000    M  spring      neck         full   natural   \n",
              "496      Sexy     low 4.30000   XL  summer      neck         full    empire   \n",
              "497    Casual  medium 4.70000    M  summer      neck         full    empire   \n",
              "498    Casual  medium 4.60000    L  winter      neck   sleeveless    empire   \n",
              "499    Casual     low 4.40000   XL  summer      neck        short    empire   \n",
              "\n",
              "        Material  FabricType  Decoration Pattern Type  Recommendation  \n",
              "0         Casual     chiffon     ruffles       animal               1  \n",
              "1    non-natural      Casual     ruffles       animal               0  \n",
              "2    non-natural      Casual      Casual        print               0  \n",
              "3        natural     chiffon  embroidary        print               1  \n",
              "4    non-natural     chiffon         bow          dot               0  \n",
              "5         Casual      Casual      Casual        print               0  \n",
              "6        natural      Casual      Casual        solid               0  \n",
              "7    non-natural  broadcloth        lace       Casual               0  \n",
              "8        natural  broadcloth     beading        solid               1  \n",
              "9    non-natural     chiffon      Casual       Casual               1  \n",
              "10   non-natural  broadcloth        lace        solid               0  \n",
              "11   non-natural      Casual      Casual       animal               0  \n",
              "12        Casual     chiffon        lace        print               1  \n",
              "13       natural      jersey      Casual       animal               1  \n",
              "14       natural      Casual      sashes        solid               0  \n",
              "15         other       other        lace       Casual               0  \n",
              "16       natural      Casual      sashes        solid               1  \n",
              "17        Casual      Casual   hollowout    patchwork               1  \n",
              "18       natural      Casual      Casual    patchwork               0  \n",
              "19       natural      Casual      Casual       Casual               1  \n",
              "20       natural      Casual     beading        solid               0  \n",
              "21        Casual     chiffon      Casual        solid               0  \n",
              "22       natural      Casual     pockets        solid               0  \n",
              "23       natural      Casual    sequined        solid               1  \n",
              "24   non-natural      Casual        lace    patchwork               0  \n",
              "25       natural  broadcloth      Casual        print               0  \n",
              "26        Casual      Casual      Casual        solid               1  \n",
              "27       natural      jersey      Casual        print               0  \n",
              "28   non-natural     chiffon      sashes      striped               0  \n",
              "29   non-natural     chiffon         bow          dot               1  \n",
              "30   non-natural     chiffon     ruffles        solid               0  \n",
              "31       natural     chiffon    applique        solid               1  \n",
              "32       natural     chiffon     ruffles       animal               0  \n",
              "33        Casual      Casual         bow        solid               1  \n",
              "34        Casual      Casual      Casual        print               0  \n",
              "35       natural      Casual      Casual    patchwork               1  \n",
              "36        Casual     chiffon      Casual        print               1  \n",
              "37       natural      Casual      Casual        print               0  \n",
              "38       natural      Casual        lace        solid               1  \n",
              "39       natural      Casual      button        solid               1  \n",
              "40       natural  broadcloth        lace        solid               1  \n",
              "41   non-natural     chiffon      sashes        solid               0  \n",
              "42   non-natural  broadcloth    applique    patchwork               0  \n",
              "43       natural      Casual      Casual        print               0  \n",
              "44       natural      Casual      Casual    patchwork               1  \n",
              "45        Casual      Casual        lace        solid               0  \n",
              "46   non-natural      Casual        lace    geometric               0  \n",
              "47       natural     chiffon     ruffles          dot               1  \n",
              "48       natural      Casual      Casual        solid               0  \n",
              "49        Casual      Casual      Casual        solid               1  \n",
              "50        Casual     chiffon      Casual       animal               1  \n",
              "51       natural      Casual      Casual       animal               0  \n",
              "52   non-natural     chiffon   hollowout        solid               1  \n",
              "53   non-natural     chiffon      sashes        solid               1  \n",
              "54   non-natural      Casual        lace    geometric               0  \n",
              "55       natural      Casual      Casual    patchwork               0  \n",
              "56       natural      Casual      Casual        solid               1  \n",
              "57        Casual      Casual        lace        solid               1  \n",
              "58   non-natural      Casual      Casual        print               1  \n",
              "59   non-natural      Casual         bow    patchwork               0  \n",
              "60   non-natural      Casual      Casual        solid               1  \n",
              "61       natural      Casual   hollowout        plaid               0  \n",
              "62   non-natural     chiffon      Casual       animal               0  \n",
              "63        Casual     chiffon      sashes        solid               0  \n",
              "64       natural      Casual      Casual        solid               1  \n",
              "65       natural  broadcloth     beading        solid               0  \n",
              "66       natural  broadcloth    applique        solid               0  \n",
              "67   non-natural      Casual      Casual    patchwork               1  \n",
              "68   non-natural      Casual   hollowout        solid               0  \n",
              "69   non-natural      Casual      Casual        solid               0  \n",
              "70       natural       batik      Casual        print               1  \n",
              "71   non-natural       satin     ruffles        solid               1  \n",
              "72       natural     flannel      Casual        solid               0  \n",
              "73       natural     worsted        lace        solid               0  \n",
              "74   non-natural      Casual      Casual        solid               0  \n",
              "75   non-natural     chiffon         bow          dot               0  \n",
              "76       natural      Casual      Casual    geometric               1  \n",
              "77       natural      Casual      Casual        print               0  \n",
              "78        Casual     chiffon      Casual        solid               0  \n",
              "79   non-natural      Casual      Casual       Casual               1  \n",
              "80   non-natural     chiffon     ruffles       animal               0  \n",
              "81   non-natural     chiffon   hollowout        solid               0  \n",
              "82       natural     worsted      Casual      striped               0  \n",
              "83        Casual     chiffon      Casual        print               0  \n",
              "84   non-natural     chiffon   hollowout        solid               0  \n",
              "85        Casual     chiffon      Casual    patchwork               1  \n",
              "86        Casual      Casual     beading        solid               1  \n",
              "87   non-natural     chiffon      Casual    patchwork               1  \n",
              "88        Casual     chiffon        lace        print               1  \n",
              "89       natural      Casual      Casual        solid               0  \n",
              "90       natural      Casual    applique    patchwork               1  \n",
              "91       natural      Casual     pockets        solid               1  \n",
              "92       natural      Casual      sashes        solid               0  \n",
              "93       natural      Casual      Casual        solid               0  \n",
              "94        Casual      Casual      Casual       animal               1  \n",
              "95       natural     chiffon     ruffles        solid               1  \n",
              "96       natural      Casual      Casual        print               0  \n",
              "97        Casual     chiffon     ruffles        print               0  \n",
              "98        Casual     chiffon     ruffles        print               0  \n",
              "99       natural      jersey    applique        print               1  \n",
              "100      natural      Casual    sequined        solid               0  \n",
              "101       Casual      Casual      Casual        print               1  \n",
              "102  non-natural     worsted      Casual    patchwork               1  \n",
              "103       Casual      Casual      Casual       animal               1  \n",
              "104      natural      Casual      Tiered        solid               0  \n",
              "105      natural      Casual      button        solid               0  \n",
              "106  non-natural     chiffon     ruffles          dot               1  \n",
              "107      natural      Casual      Casual        solid               1  \n",
              "108      natural  broadcloth    sequined        solid               1  \n",
              "109       Casual      Casual        lace       Casual               0  \n",
              "110       Casual     chiffon      Casual    patchwork               0  \n",
              "111      natural      jersey      Casual        solid               1  \n",
              "112  non-natural      Casual    applique        print               0  \n",
              "113       Casual     chiffon   hollowout        solid               0  \n",
              "114       Casual      Casual      Casual       Casual               1  \n",
              "115       Casual     chiffon      Casual        solid               0  \n",
              "116      natural     chiffon      Casual    patchwork               0  \n",
              "117      natural     chiffon        lace        print               0  \n",
              "118      natural     worsted        lace        solid               0  \n",
              "119  non-natural      woolen     beading        solid               1  \n",
              "120        other  broadcloth        lace        solid               0  \n",
              "121       Casual      Casual      Casual       Casual               0  \n",
              "122       Casual      Casual        lace      leopard               1  \n",
              "123      natural     chiffon      Casual        solid               1  \n",
              "124      natural      jersey      Casual    patchwork               0  \n",
              "125       Casual      Casual        lace    patchwork               0  \n",
              "126  non-natural     chiffon         bow          dot               0  \n",
              "127      natural  broadcloth     beading        solid               0  \n",
              "128       Casual      Casual      Casual        solid               0  \n",
              "129      natural      Casual        lace       Casual               1  \n",
              "130  non-natural      Casual        lace        solid               0  \n",
              "131  non-natural      Casual      Casual    patchwork               1  \n",
              "132       Casual     chiffon      Casual       Casual               0  \n",
              "133  non-natural      Casual        lace        solid               0  \n",
              "134       Casual     chiffon      Casual        solid               0  \n",
              "135      natural     chiffon        lace    patchwork               0  \n",
              "136  non-natural      Casual      button        solid               0  \n",
              "137  non-natural     chiffon      Casual        print               1  \n",
              "138      natural      Casual      Casual        solid               0  \n",
              "139       Casual      Casual      Casual       Casual               1  \n",
              "140       Casual      Casual   hollowout        solid               0  \n",
              "141  non-natural     chiffon         bow        print               0  \n",
              "142       Casual      Casual        lace        solid               0  \n",
              "143      natural      Casual      Casual       animal               1  \n",
              "144      natural      Casual        lace        solid               1  \n",
              "145       Casual     chiffon      Casual        print               1  \n",
              "146      natural      Casual      Casual        solid               0  \n",
              "147  non-natural      Casual     ruffles        solid               0  \n",
              "148  non-natural     chiffon      Casual        print               0  \n",
              "149      natural     chiffon      sashes        solid               1  \n",
              "150  non-natural     chiffon      Casual        solid               0  \n",
              "151      natural  broadcloth      Casual        plaid               0  \n",
              "152      natural      Casual      Casual        solid               1  \n",
              "153      natural      Casual      Casual        print               0  \n",
              "154      natural      Casual        lace       Casual               1  \n",
              "155       Casual      Casual        lace        solid               0  \n",
              "156       Casual      Casual   hollowout        solid               0  \n",
              "157      natural      Casual        lace        solid               1  \n",
              "158       Casual      Casual      Casual        print               0  \n",
              "159       Casual      Casual    sequined        solid               1  \n",
              "160      natural      Casual         bow    patchwork               0  \n",
              "161        other     chiffon  embroidary        print               0  \n",
              "162       Casual      Casual      Casual        solid               1  \n",
              "163      natural      Casual      Casual    patchwork               0  \n",
              "164      natural     worsted    applique          dot               1  \n",
              "165        other      poplin    applique        solid               1  \n",
              "166  non-natural      Casual         bow        solid               0  \n",
              "167       Casual      Casual      Casual        solid               0  \n",
              "168       Casual      Casual      Casual          dot               1  \n",
              "169        other      Casual      sashes        solid               0  \n",
              "170        other     worsted    applique        solid               0  \n",
              "171        other     chiffon      sashes    geometric               0  \n",
              "172  non-natural      jersey        lace        solid               0  \n",
              "173       Casual     chiffon      button      striped               0  \n",
              "174      natural      Casual      Casual    patchwork               0  \n",
              "175  non-natural      Casual      Casual      leopard               0  \n",
              "176      natural     chiffon      sashes        print               0  \n",
              "177        other     worsted    sequined    patchwork               1  \n",
              "178      natural      Casual      Casual      leopard               0  \n",
              "179      natural  broadcloth    applique        print               0  \n",
              "180      natural      Casual      Casual        solid               1  \n",
              "181  non-natural      Casual      sashes        solid               1  \n",
              "182      natural     chiffon      Casual       floral               0  \n",
              "183  non-natural     chiffon        lace    patchwork               0  \n",
              "184      natural     worsted        lace        solid               1  \n",
              "185        other      Casual      Casual        solid               0  \n",
              "186      natural      Casual      Casual    patchwork               0  \n",
              "187  non-natural     chiffon      sashes        solid               1  \n",
              "188      natural      Casual     beading        solid               0  \n",
              "189      natural      Casual      Casual        solid               1  \n",
              "190        other      Casual        lace        solid               1  \n",
              "191      natural      Casual      Casual        solid               0  \n",
              "192      natural      Casual       rivet        solid               0  \n",
              "193      natural     chiffon      Casual        print               0  \n",
              "194       Casual      Casual      Casual       animal               0  \n",
              "195  non-natural      Casual    applique        solid               1  \n",
              "196       Casual      Casual      Casual       Casual               0  \n",
              "197      natural     chiffon      Casual    patchwork               0  \n",
              "198  non-natural      Casual        lace    geometric               0  \n",
              "199  non-natural      Casual  embroidary        solid               0  \n",
              "200      natural      Casual      Casual          dot               0  \n",
              "201       Casual     chiffon      sashes       Casual               1  \n",
              "202  non-natural     chiffon      Casual       Casual               0  \n",
              "203      natural      Casual    sequined        solid               1  \n",
              "204      natural      Casual      Casual        solid               0  \n",
              "205       Casual      Casual      Casual       Casual               0  \n",
              "206       Casual     worsted      Casual        solid               0  \n",
              "207  non-natural  broadcloth      Casual        solid               1  \n",
              "208      natural     worsted      Casual        print               0  \n",
              "209  non-natural      Casual      sashes        print               0  \n",
              "210  non-natural      Casual      Casual      striped               1  \n",
              "211       Casual     chiffon      sashes        solid               1  \n",
              "212      natural     worsted      Casual      striped               0  \n",
              "213       Casual      Casual      Casual    patchwork               0  \n",
              "214      natural      Casual        lace    patchwork               1  \n",
              "215       Casual       dobby        lace       animal               0  \n",
              "216      natural      Casual        lace        print               0  \n",
              "217      natural     worsted        lace        solid               1  \n",
              "218      natural      Casual      Casual       Casual               0  \n",
              "219       Casual     chiffon      sashes        solid               1  \n",
              "220       Casual      Casual      Casual       Casual               0  \n",
              "221       Casual     chiffon      Casual       Casual               1  \n",
              "222      natural      Casual      Casual        solid               0  \n",
              "223      natural      Casual      Casual        print               1  \n",
              "224  non-natural     chiffon      Casual        plaid               0  \n",
              "225  non-natural      woolen      Casual        solid               0  \n",
              "226  non-natural      Casual      sashes        print               0  \n",
              "227       Casual     chiffon  embroidary        print               1  \n",
              "228        other      Casual      Casual    patchwork               0  \n",
              "229      natural      Casual      Casual        print               1  \n",
              "230      natural     flannel      Casual      striped               0  \n",
              "231  non-natural     chiffon      Casual       Casual               0  \n",
              "232  non-natural      Casual      Casual        print               0  \n",
              "233  non-natural     chiffon      sashes        solid               0  \n",
              "234  non-natural     chiffon      Casual        print               1  \n",
              "235  non-natural      Casual    applique          dot               0  \n",
              "236       Casual     chiffon     ruffles        solid               1  \n",
              "237      natural      Casual      sashes        print               1  \n",
              "238      natural     chiffon     beading        solid               0  \n",
              "239      natural      Casual      Casual        solid               1  \n",
              "240  non-natural     chiffon    applique        print               0  \n",
              "241  non-natural  broadcloth      Casual    patchwork               0  \n",
              "242       Casual      Casual      Casual        solid               0  \n",
              "243       Casual      Casual      Casual        print               1  \n",
              "244      natural      jersey    feathers        solid               1  \n",
              "245      natural      Casual      sashes      striped               0  \n",
              "246       Casual  broadcloth      Casual        print               1  \n",
              "247      natural      Casual      button        solid               0  \n",
              "248  non-natural      Casual      Casual    character               0  \n",
              "249  non-natural     chiffon      Casual        solid               0  \n",
              "250      natural      Casual      Casual    patchwork               0  \n",
              "251      natural      Casual      Casual        print               0  \n",
              "252  non-natural     chiffon     flowers       Casual               1  \n",
              "253  non-natural      Casual      Casual       Casual               1  \n",
              "254  non-natural       tulle     beading       Casual               0  \n",
              "255       Casual     chiffon        lace       Casual               0  \n",
              "256      natural      Casual      Casual       Casual               1  \n",
              "257  non-natural       satin    applique       Casual               1  \n",
              "258       Casual      Casual      pearls       Casual               0  \n",
              "259  non-natural      Casual      Casual       Casual               0  \n",
              "260  non-natural      Casual        lace       Casual               1  \n",
              "261       Casual     chiffon     flowers       Casual               0  \n",
              "262       Casual      Casual  embroidary       Casual               1  \n",
              "263       Casual      Casual      Casual       Casual               1  \n",
              "264       Casual     chiffon     beading       Casual               1  \n",
              "265       Casual     chiffon      Casual       Casual               0  \n",
              "266  non-natural      Casual      Casual       Casual               1  \n",
              "267  non-natural     organza     beading       Casual               1  \n",
              "268  non-natural     chiffon     beading       Casual               1  \n",
              "269      natural     chiffon     beading       Casual               0  \n",
              "270       Casual      Casual       pleat       Casual               1  \n",
              "271       Casual      Casual     crystal       Casual               0  \n",
              "272      natural     chiffon     beading       Casual               1  \n",
              "273       Casual      Casual      Casual       Casual               1  \n",
              "274       Casual      Casual        lace       Casual               1  \n",
              "275       Casual      Casual      Casual       Casual               1  \n",
              "276      natural        lace    applique       Casual               1  \n",
              "277       Casual      Casual    feathers       Casual               1  \n",
              "278       Casual      Casual     beading       Casual               1  \n",
              "279  non-natural      Casual      Casual       Casual               0  \n",
              "280        other     chiffon     beading       Casual               1  \n",
              "281       Casual      Casual        lace       Casual               1  \n",
              "282  non-natural     chiffon     beading        solid               1  \n",
              "283       Casual       satin      Casual       Casual               1  \n",
              "284       Casual     chiffon      Casual       Casual               1  \n",
              "285      natural     chiffon      button       Casual               1  \n",
              "286  non-natural       tulle      ruched        solid               1  \n",
              "287       Casual      Casual      Casual       Casual               1  \n",
              "288  non-natural     chiffon     beading       Casual               1  \n",
              "289      natural     chiffon     crystal       Casual               1  \n",
              "290       Casual     chiffon     flowers       Casual               1  \n",
              "291       Casual     chiffon        lace       Casual               1  \n",
              "292  non-natural      Casual      Casual       Casual               0  \n",
              "293       Casual       satin     beading       Casual               1  \n",
              "294  non-natural      Casual      Casual       Casual               1  \n",
              "295       Casual     chiffon    applique       Casual               0  \n",
              "296      natural      Casual         bow       Casual               1  \n",
              "297       Casual      Casual      Casual       Casual               1  \n",
              "298      natural      Casual      Casual       Casual               1  \n",
              "299       Casual      Casual     flowers       Casual               1  \n",
              "300       Casual      Casual      draped       Casual               1  \n",
              "301       Casual      Casual      Casual       Casual               1  \n",
              "302       Casual      Casual      Casual       Casual               0  \n",
              "303  non-natural  broadcloth       rivet       Casual               0  \n",
              "304       Casual      Casual      Casual       Casual               0  \n",
              "305      natural      Casual      Casual       Casual               0  \n",
              "306  non-natural       satin      sashes       Casual               0  \n",
              "307  non-natural     chiffon      Casual       Casual               0  \n",
              "308      natural      Casual      Casual       Casual               0  \n",
              "309       Casual      Casual    sequined       Casual               1  \n",
              "310  non-natural  broadcloth      Casual       Casual               0  \n",
              "311        other     chiffon   hollowout    patchwork               0  \n",
              "312      natural       satin   hollowout        solid               0  \n",
              "313  non-natural     chiffon     crystal       Casual               0  \n",
              "314      natural      Casual      Casual       Casual               0  \n",
              "315  non-natural  broadcloth        lace       Casual               1  \n",
              "316       Casual     chiffon      Casual       Casual               0  \n",
              "317       Casual     chiffon      Casual       Casual               0  \n",
              "318  non-natural      poplin      Casual       Casual               1  \n",
              "319  non-natural     chiffon      Casual        solid               0  \n",
              "320  non-natural     chiffon      Casual      striped               1  \n",
              "321      natural     chiffon      Casual        solid               0  \n",
              "322  non-natural     chiffon   hollowout       animal               1  \n",
              "323      natural      Casual      Casual        solid               1  \n",
              "324  non-natural      Casual    applique        solid               0  \n",
              "325  non-natural      Casual      Casual        print               0  \n",
              "326  non-natural      jersey      sashes        print               1  \n",
              "327      natural     chiffon    applique        print               0  \n",
              "328  non-natural     chiffon      Casual        solid               1  \n",
              "329      natural     chiffon      Casual        solid               0  \n",
              "330  non-natural  broadcloth        lace       Casual               1  \n",
              "331       Casual      Casual      Casual       Casual               1  \n",
              "332      natural  broadcloth    sequined        solid               0  \n",
              "333      natural      Casual        lace        solid               0  \n",
              "334  non-natural      Casual      Casual        solid               0  \n",
              "335  non-natural     chiffon      ruched      striped               0  \n",
              "336      natural      Casual      Casual    patchwork               0  \n",
              "337  non-natural      Casual      sashes        print               0  \n",
              "338  non-natural  broadcloth     ruffles        solid               0  \n",
              "339  non-natural      Casual   hollowout        solid               1  \n",
              "340      natural     chiffon      sashes        print               0  \n",
              "341  non-natural     chiffon      Casual        print               1  \n",
              "342      natural     chiffon   hollowout        print               0  \n",
              "343      natural      Casual      Casual        solid               1  \n",
              "344       Casual      Casual      Casual       Casual               1  \n",
              "345      natural      Casual      Casual        print               0  \n",
              "346       Casual      Casual      Casual        solid               0  \n",
              "347  non-natural      Casual       rivet        solid               0  \n",
              "348       Casual      Casual      Casual       Casual               1  \n",
              "349  non-natural      Casual      Casual        solid               0  \n",
              "350      natural     worsted        lace    patchwork               0  \n",
              "351      natural      Casual      sashes        solid               0  \n",
              "352      natural      Casual      Casual        solid               1  \n",
              "353  non-natural     chiffon      Casual        print               1  \n",
              "354  non-natural     chiffon      ruched        solid               0  \n",
              "355  non-natural    Corduroy      Casual       Casual               0  \n",
              "356      natural      woolen   hollowout        solid               0  \n",
              "357       Casual      Casual      Casual       Casual               0  \n",
              "358      natural  broadcloth      tassel        print               1  \n",
              "359      natural      Casual        lace        solid               0  \n",
              "360  non-natural      Casual      Casual       Casual               0  \n",
              "361  non-natural      Casual      sashes       splice               0  \n",
              "362      natural       batik      Casual        print               1  \n",
              "363  non-natural      Casual      Casual       Casual               1  \n",
              "364  non-natural      Casual        lace    patchwork               1  \n",
              "365  non-natural  broadcloth      Casual        solid               0  \n",
              "366       Casual      Casual      Casual        solid               0  \n",
              "367  non-natural     chiffon        lace        solid               0  \n",
              "368  non-natural     chiffon      Casual    patchwork               0  \n",
              "369  non-natural      Casual     beading        print               0  \n",
              "370      natural     chiffon      sashes        solid               0  \n",
              "371  non-natural      Casual      Casual      striped               0  \n",
              "372      natural     worsted      Casual        solid               0  \n",
              "373       Casual     chiffon      Casual       Casual               0  \n",
              "374      natural      Casual        lace       Casual               1  \n",
              "375      natural  broadcloth   hollowout        print               0  \n",
              "376       Casual      Casual      Casual       Casual               1  \n",
              "377      natural     chiffon      Casual        solid               1  \n",
              "378  non-natural      jersey      Casual        print               0  \n",
              "379       Casual     chiffon      Casual      striped               1  \n",
              "380  non-natural      Casual    applique        solid               0  \n",
              "381      natural      jersey     pockets        solid               0  \n",
              "382      natural     chiffon      sashes        print               0  \n",
              "383  non-natural     chiffon      Casual      leapord               1  \n",
              "384      natural      Casual      Casual        solid               1  \n",
              "385      natural      Casual      Casual      striped               0  \n",
              "386  non-natural     chiffon     ruffles      striped               0  \n",
              "387      natural      Casual      Casual        solid               1  \n",
              "388      natural     worsted      Casual        solid               1  \n",
              "389       Casual      Casual   hollowout       Casual               0  \n",
              "390       Casual      Casual        lace       Casual               0  \n",
              "391      natural      Casual      Casual       animal               0  \n",
              "392  non-natural     chiffon      Casual       Casual               1  \n",
              "393  non-natural      Casual      Casual       Casual               0  \n",
              "394      natural      Casual    applique        solid               0  \n",
              "395       Casual      Casual    sequined    patchwork               1  \n",
              "396  non-natural      Casual      Casual        solid               0  \n",
              "397      natural      Casual      Casual          dot               0  \n",
              "398  non-natural      Casual     ruffles        solid               1  \n",
              "399  non-natural      Casual      sashes        solid               0  \n",
              "400      natural      Casual      Casual    patchwork               0  \n",
              "401      natural      woolen      Casual        solid               1  \n",
              "402  non-natural     shiffon      Casual       animal               0  \n",
              "403      natural      Casual      Casual    patchwork               1  \n",
              "404      natural      Casual      Casual        solid               0  \n",
              "405  non-natural      Casual      sashes        print               0  \n",
              "406  non-natural      Casual      sashes    patchwork               0  \n",
              "407  non-natural     shiffon      Casual    patchwork               1  \n",
              "408  non-natural      Casual       plain        solid               0  \n",
              "409  non-natural     shiffon     pockets        solid               1  \n",
              "410        other      jersey       plain        solid               1  \n",
              "411      natural     chiffon      Casual          dot               1  \n",
              "412      natural      Casual      Casual       animal               0  \n",
              "413  non-natural      Casual      Casual        print               0  \n",
              "414        other     worsted        lace    patchwork               1  \n",
              "415      natural     shiffon      sashes        solid               0  \n",
              "416      natural      Casual      Casual        solid               1  \n",
              "417      natural  broadcloth     beading        solid               0  \n",
              "418  non-natural      Casual   hollowout        solid               0  \n",
              "419      natural     shiffon         bow          dot               1  \n",
              "420  non-natural      Casual        lace       animal               0  \n",
              "421      natural  broadcloth      sashes        solid               0  \n",
              "422      natural     worsted      Casual      striped               1  \n",
              "423      natural      Casual     ruffles    patchwork               0  \n",
              "424       Casual     shiffon      Casual        print               1  \n",
              "425      natural      Casual      Casual          dot               0  \n",
              "426      natural      Casual      Casual       Casual               0  \n",
              "427      natural      Casual        lace       floral               0  \n",
              "428  non-natural      Casual    sequined        solid               0  \n",
              "429      natural     worsted        lace        solid               0  \n",
              "430      natural      woolen        lace        solid               1  \n",
              "431       Casual      Casual      sashes        solid               0  \n",
              "432       Casual  broadcloth      Casual        print               1  \n",
              "433      natural      Casual        lace        solid               0  \n",
              "434       Casual     shiffon      Casual       Casual               0  \n",
              "435       Casual      Casual      Casual        print               0  \n",
              "436       Casual     shiffon      Casual    patchwork               0  \n",
              "437        other      Casual         bow        solid               0  \n",
              "438  non-natural      Casual      Casual    patchwork               1  \n",
              "439  non-natural      Casual        lace        solid               1  \n",
              "440      natural      Casual      sashes        solid               1  \n",
              "441      natural      Casual        lace       Casual               1  \n",
              "442        other      Casual        lace        solid               0  \n",
              "443  non-natural       satin   hollowout        solid               0  \n",
              "444       Casual      Casual      Casual      striped               1  \n",
              "445       Casual     shiffon    sequined        solid               0  \n",
              "446        other      Casual      Casual      striped               0  \n",
              "447      natural      Casual      Casual    patchwork               0  \n",
              "448       Casual      Casual         bow    patchwork               1  \n",
              "449  non-natural     chiffon        none        print               0  \n",
              "450       Casual     chiffon      sashes         none               1  \n",
              "451      natural      Casual      Casual        solid               0  \n",
              "452       Casual      Casual      sashes        solid               0  \n",
              "453  non-natural      jersey      sashes        solid               1  \n",
              "454      natural      Casual      Casual        solid               0  \n",
              "455       Casual     chiffon      Casual        solid               1  \n",
              "456       Casual      Casual      Casual       Casual               1  \n",
              "457      natural      Casual      Casual        print               0  \n",
              "458       Casual      Casual      Casual        solid               1  \n",
              "459       Casual      Casual      Casual        print               0  \n",
              "460      natural     chiffon      draped        solid               0  \n",
              "461      natural      Casual        lace        solid               0  \n",
              "462       Casual       dobby        lace       animal               1  \n",
              "463      natural     chiffon   hollowout        solid               1  \n",
              "464       Casual     chiffon      sashes       Casual               0  \n",
              "465      natural      Casual        lace       Casual               1  \n",
              "466       Casual      Casual      Casual       Casual               0  \n",
              "467      natural     chiffon      Casual        solid               0  \n",
              "468  non-natural      Casual      sashes        solid               0  \n",
              "469  non-natural  broadcloth        lace        solid               0  \n",
              "470       Casual      Casual      Casual       Casual               1  \n",
              "471       Casual      Casual      Casual       animal               0  \n",
              "472  non-natural       terry        lace        solid               1  \n",
              "473       Casual      Casual      Casual        solid               0  \n",
              "474  non-natural      Casual        lace        solid               0  \n",
              "475      natural      Casual      Casual        solid               0  \n",
              "476      natural      Casual    sequined        solid               0  \n",
              "477  non-natural     chiffon   hollowout        solid               0  \n",
              "478      natural      Casual      Casual        solid               0  \n",
              "479      natural     worsted        lace    patchwork               1  \n",
              "480      natural      Casual     pockets        solid               0  \n",
              "481  non-natural     chiffon    sequined        solid               0  \n",
              "482  non-natural     chiffon     beading        solid               1  \n",
              "483      natural     chiffon      sashes        solid               1  \n",
              "484      natural      Casual      Casual        solid               1  \n",
              "485       Casual     chiffon      Casual        print               1  \n",
              "486  non-natural     chiffon   cascading        solid               0  \n",
              "487      natural  broadcloth    sequined        solid               1  \n",
              "488  non-natural     chiffon         bow        solid               0  \n",
              "489      natural      Casual        lace        solid               1  \n",
              "490  non-natural     chiffon         bow        solid               0  \n",
              "491      natural      Casual      Casual       Casual               1  \n",
              "492  non-natural     chiffon      Casual       Casual               0  \n",
              "493      natural     chiffon        none        solid               1  \n",
              "494  non-natural     chiffon      Casual      striped               0  \n",
              "495  non-natural      Casual      Casual        solid               1  \n",
              "496      natural      Casual      Casual       Casual               0  \n",
              "497      natural      Casual        lace        solid               1  \n",
              "498      natural  broadcloth    applique        print               1  \n",
              "499      natural    Corduroy        lace        solid               0  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "p2Xk8qnL9tB-"
      },
      "source": [
        "### Data Exploration - Multivariate\n",
        "Let's now start combining some of these features together to obtain further insight into the interactions between them."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MHZ4f6Sc9tB-",
        "outputId": "7a70c3c9-7bbb-4fad-c860-495595fa99e1"
      },
      "source": [
        "def plot_bivariate_bar(dataset, hue, cols=5, width=20, height=20, hspace=0.2, wspace=0.5):\n",
        "    dataset = dataset.select_dtypes(include=[np.object])\n",
        "    plt.style.use('seaborn-whitegrid')\n",
        "    fig = plt.figure(figsize=(width,height))\n",
        "    fig.subplots_adjust(left=None, bottom=None, right=None, top=None, wspace=wspace, hspace=hspace)\n",
        "    rows = math.ceil(float(dataset.shape[1]) / cols)\n",
        "    for i, column in enumerate(dataset.columns):\n",
        "        ax = fig.add_subplot(rows, cols, i + 1)\n",
        "        ax.set_title(column)\n",
        "        if dataset.dtypes[column] == np.object:\n",
        "            g = sns.countplot(y=column, hue=hue, data=dataset)\n",
        "            substrings = [s.get_text()[:10] for s in g.get_yticklabels()]\n",
        "            g.set(yticklabels=substrings)\n",
        "            \n",
        "plot_bivariate_bar(df_nona, hue=df_nona['Recommendation'], cols=3)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x1440 with 11 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2bYz5egH9tB-",
        "outputId": "85bf5384-ac79-491a-8ebb-882018ccb461"
      },
      "source": [
        "# Historical Trends on the Price, Rating, Size, Material and Season impact on Recommendation.\n",
        "fig, ((ax1, ax2),(ax3, ax4)) = plt.subplots(nrows=2, ncols=2, figsize=(20, 10))\n",
        "sns.violinplot(x='Price', y='Rating', data=df_nona, hue='Recommendation', split=True, ax=ax1);\n",
        "sns.violinplot(x='Size', y='Rating', data=df_nona, hue='Recommendation', split=True, ax=ax2);\n",
        "sns.violinplot(x='Material', y='Rating', data=df_nona, hue='Recommendation', split=True, ax=ax3);\n",
        "sns.violinplot(x='Season', y='Rating', data=df_nona, hue='Recommendation', split=True, ax=ax4);"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 1440x720 with 4 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Zb5hQIi39tB-"
      },
      "source": [
        "### Feature Encoding\n",
        "For a machine learning model to be able to train on our data we need to convert our features into numerical values. This is called feature encoding.\n",
        "\n",
        "We can encode our features via : \n",
        "* OneHot Encoding\n",
        "* Label Encoding"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HMvh7VzF9tB-",
        "outputId": "d61fd7cd-8958-4d4f-9165-923163f60e05"
      },
      "source": [
        "# One Hot Encodes all labels before Machine Learning\n",
        "one_hot_cols = df_nona.columns.tolist()\n",
        "one_hot_cols.remove('Recommendation')\n",
        "df_one_hot = pd.get_dummies(df_nona, columns=one_hot_cols, drop_first=True)\n",
        "\n",
        "df_one_hot.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Recommendation</th>\n",
              "      <th>Style_Casual</th>\n",
              "      <th>Style_Flare</th>\n",
              "      <th>Style_Novelty</th>\n",
              "      <th>Style_OL</th>\n",
              "      <th>Style_Sexy</th>\n",
              "      <th>Style_bohemian</th>\n",
              "      <th>Style_cute</th>\n",
              "      <th>Style_fashion</th>\n",
              "      <th>Style_party</th>\n",
              "      <th>...</th>\n",
              "      <th>Pattern Type_geometric</th>\n",
              "      <th>Pattern Type_leapord</th>\n",
              "      <th>Pattern Type_leopard</th>\n",
              "      <th>Pattern Type_none</th>\n",
              "      <th>Pattern Type_patchwork</th>\n",
              "      <th>Pattern Type_plaid</th>\n",
              "      <th>Pattern Type_print</th>\n",
              "      <th>Pattern Type_solid</th>\n",
              "      <th>Pattern Type_splice</th>\n",
              "      <th>Pattern Type_striped</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 107 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "   Recommendation  Style_Casual  Style_Flare  Style_Novelty  Style_OL  \\\n",
              "0               1             0            0              0         0   \n",
              "1               0             1            0              0         0   \n",
              "2               0             0            0              0         0   \n",
              "3               1             0            0              0         0   \n",
              "4               0             0            0              0         0   \n",
              "\n",
              "   Style_Sexy  Style_bohemian  Style_cute  Style_fashion  Style_party  ...  \\\n",
              "0           1               0           0              0            0  ...   \n",
              "1           0               0           0              0            0  ...   \n",
              "2           0               0           0              0            0  ...   \n",
              "3           0               0           0              0            0  ...   \n",
              "4           0               0           1              0            0  ...   \n",
              "\n",
              "   Pattern Type_geometric  Pattern Type_leapord  Pattern Type_leopard  \\\n",
              "0                       0                     0                     0   \n",
              "1                       0                     0                     0   \n",
              "2                       0                     0                     0   \n",
              "3                       0                     0                     0   \n",
              "4                       0                     0                     0   \n",
              "\n",
              "   Pattern Type_none  Pattern Type_patchwork  Pattern Type_plaid  \\\n",
              "0                  0                       0                   0   \n",
              "1                  0                       0                   0   \n",
              "2                  0                       0                   0   \n",
              "3                  0                       0                   0   \n",
              "4                  0                       0                   0   \n",
              "\n",
              "   Pattern Type_print  Pattern Type_solid  Pattern Type_splice  \\\n",
              "0                   0                   0                    0   \n",
              "1                   0                   0                    0   \n",
              "2                   1                   0                    0   \n",
              "3                   1                   0                    0   \n",
              "4                   0                   0                    0   \n",
              "\n",
              "   Pattern Type_striped  \n",
              "0                     0  \n",
              "1                     0  \n",
              "2                     0  \n",
              "3                     0  \n",
              "4                     0  \n",
              "\n",
              "[5 rows x 107 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qA4oDTYA9tB_",
        "outputId": "7c22ca47-4887-4219-e6d1-a45851e85ce5"
      },
      "source": [
        "# Label Encode all labels\n",
        "df_label_encode = df_nona.apply(LabelEncoder().fit_transform)\n",
        "df_label_encode.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Style</th>\n",
              "      <th>Price</th>\n",
              "      <th>Rating</th>\n",
              "      <th>Size</th>\n",
              "      <th>Season</th>\n",
              "      <th>NeckLine</th>\n",
              "      <th>SleeveLength</th>\n",
              "      <th>waiseline</th>\n",
              "      <th>Material</th>\n",
              "      <th>FabricType</th>\n",
              "      <th>Decoration</th>\n",
              "      <th>Pattern Type</th>\n",
              "      <th>Recommendation</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>12</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>21</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>21</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>10</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>12</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>9</td>\n",
              "      <td>11</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>7</td>\n",
              "      <td>2</td>\n",
              "      <td>11</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Style  Price  Rating  Size  Season  NeckLine  SleeveLength  waiseline  \\\n",
              "0      5      2      12     1       3         3             4          2   \n",
              "1      1      2       0     0       3         3             1          3   \n",
              "2     10      1       0     0       1         3             2          3   \n",
              "3      0      3      12     0       2         3             2          3   \n",
              "4      7      2      11     1       3         3             1          3   \n",
              "\n",
              "   Material  FabricType  Decoration  Pattern Type  Recommendation  \n",
              "0         0           4          21             1               1  \n",
              "1         2           0          21             1               0  \n",
              "2         2           0           0            11               0  \n",
              "3         1           4           9            11               1  \n",
              "4         2           4           4             3               0  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "vyOY9m8L9tB_"
      },
      "source": [
        "### Feature Correlation"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XXeTf-sA9tB_",
        "outputId": "587e90eb-d74d-4abf-ae59-36aebda6c411"
      },
      "source": [
        "# Flot feature Corelation\n",
        "fig, (ax1, ax2) = plt.subplots(figsize=(25, 10), nrows=1, ncols=2)\n",
        "\n",
        "# One hot encoded dataframe\n",
        "mask = np.zeros_like(df_one_hot.corr(), dtype=np.bool)\n",
        "mask[np.triu_indices_from(mask)] = True\n",
        "sns.heatmap(df_one_hot.corr(), ax=ax1, linewidths=0.1, cmap='YlGnBu',vmax=1, vmin=-1, mask=mask);\n",
        "\n",
        "# Label Encoded Dataframe\n",
        "mask = np.zeros_like(df_label_encode.corr(), dtype=np.bool)\n",
        "mask[np.triu_indices_from(mask)] = True\n",
        "sns.heatmap(df_label_encode.corr(), ax=ax2, linewidths=0.1, cmap='YlGnBu', mask=mask);\n",
        "\n",
        "fig.suptitle('Feature Correlation', fontsize=(20), fontweight='bold');"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1800x720 with 4 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pHu_ENm09tB_"
      },
      "source": [
        "## Let's save our dataframes\n",
        "df_one_hot.to_feather('df_one_hot.feather')\n",
        "df_label_encode.to_feather('df_label_encode.feather')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "w0S0_qr89tB_"
      },
      "source": [
        "# 5. Modelling\n",
        "\n",
        "Now that we've cleaned our data and encoded all the features we are ready to select and train a model(s).\n",
        "\n",
        "For this project we will be traing our data on the following classifiers :\n",
        "* Stochastic Gradient Descent\n",
        "* LogisticRegression\n",
        "* KNN\n",
        "* LinearSVC\n",
        "* DecisionTree\n",
        "* RandomForestClassifier"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "FRDrbsJR9tB_"
      },
      "source": [
        "## Dataset Selection\n",
        "\n",
        "We now have two datasets that we can train on. \n",
        "* OneHot Encoded Dataset\n",
        "* LabelEncoded Dataset\n",
        "\n",
        "Let us first train our base models on both the datasets. After which we will select the appropriate one."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "NEWM9Vxc9tB_"
      },
      "source": [
        "### One Hot Encoded Data\n",
        "We will now train our classifiers on the one hot encoded dataset."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4H78aMdZ9tB_"
      },
      "source": [
        "#### Getting our training data\n",
        "> In this case $X$(independent variables) will be our OneHot Encoded DataSet and $Y$(dependent variable) will be our label, i.e, df_one_hot and df_raw['Recommendation'] respectively."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QTLh_i5Y9tB_"
      },
      "source": [
        "# Getting our independent and dependent variables\n",
        "X = df_one_hot.drop('Recommendation', axis=1)\n",
        "y = df_raw['Recommendation']"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4qxwm72T9tCA",
        "outputId": "8ec8584f-308c-4dcb-df19-e67420ad32a6"
      },
      "source": [
        "# Check the dimensions\n",
        "X.shape, y.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "((500, 106), (500,))"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 182
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "_7qfussK9tCA"
      },
      "source": [
        "Let's look at our data once more...."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7BZgiLxZ9tCA",
        "outputId": "54ed496a-75c7-4b42-9eb3-ea675dcb3c4d"
      },
      "source": [
        "X.head(10)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Style_Casual</th>\n",
              "      <th>Style_Flare</th>\n",
              "      <th>Style_Novelty</th>\n",
              "      <th>Style_OL</th>\n",
              "      <th>Style_Sexy</th>\n",
              "      <th>Style_bohemian</th>\n",
              "      <th>Style_cute</th>\n",
              "      <th>Style_fashion</th>\n",
              "      <th>Style_party</th>\n",
              "      <th>Style_vintage</th>\n",
              "      <th>...</th>\n",
              "      <th>Pattern Type_geometric</th>\n",
              "      <th>Pattern Type_leapord</th>\n",
              "      <th>Pattern Type_leopard</th>\n",
              "      <th>Pattern Type_none</th>\n",
              "      <th>Pattern Type_patchwork</th>\n",
              "      <th>Pattern Type_plaid</th>\n",
              "      <th>Pattern Type_print</th>\n",
              "      <th>Pattern Type_solid</th>\n",
              "      <th>Pattern Type_splice</th>\n",
              "      <th>Pattern Type_striped</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10 rows × 106 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "   Style_Casual  Style_Flare  Style_Novelty  Style_OL  Style_Sexy  \\\n",
              "0             0            0              0         0           1   \n",
              "1             1            0              0         0           0   \n",
              "2             0            0              0         0           0   \n",
              "3             0            0              0         0           0   \n",
              "4             0            0              0         0           0   \n",
              "5             0            0              0         0           0   \n",
              "6             1            0              0         0           0   \n",
              "7             0            0              1         0           0   \n",
              "8             0            1              0         0           0   \n",
              "9             0            0              0         0           0   \n",
              "\n",
              "   Style_bohemian  Style_cute  Style_fashion  Style_party  Style_vintage  ...  \\\n",
              "0               0           0              0            0              0  ...   \n",
              "1               0           0              0            0              0  ...   \n",
              "2               0           0              0            0              1  ...   \n",
              "3               0           0              0            0              0  ...   \n",
              "4               0           1              0            0              0  ...   \n",
              "5               1           0              0            0              0  ...   \n",
              "6               0           0              0            0              0  ...   \n",
              "7               0           0              0            0              0  ...   \n",
              "8               0           0              0            0              0  ...   \n",
              "9               1           0              0            0              0  ...   \n",
              "\n",
              "   Pattern Type_geometric  Pattern Type_leapord  Pattern Type_leopard  \\\n",
              "0                       0                     0                     0   \n",
              "1                       0                     0                     0   \n",
              "2                       0                     0                     0   \n",
              "3                       0                     0                     0   \n",
              "4                       0                     0                     0   \n",
              "5                       0                     0                     0   \n",
              "6                       0                     0                     0   \n",
              "7                       0                     0                     0   \n",
              "8                       0                     0                     0   \n",
              "9                       0                     0                     0   \n",
              "\n",
              "   Pattern Type_none  Pattern Type_patchwork  Pattern Type_plaid  \\\n",
              "0                  0                       0                   0   \n",
              "1                  0                       0                   0   \n",
              "2                  0                       0                   0   \n",
              "3                  0                       0                   0   \n",
              "4                  0                       0                   0   \n",
              "5                  0                       0                   0   \n",
              "6                  0                       0                   0   \n",
              "7                  0                       0                   0   \n",
              "8                  0                       0                   0   \n",
              "9                  0                       0                   0   \n",
              "\n",
              "   Pattern Type_print  Pattern Type_solid  Pattern Type_splice  \\\n",
              "0                   0                   0                    0   \n",
              "1                   0                   0                    0   \n",
              "2                   1                   0                    0   \n",
              "3                   1                   0                    0   \n",
              "4                   0                   0                    0   \n",
              "5                   1                   0                    0   \n",
              "6                   0                   1                    0   \n",
              "7                   0                   0                    0   \n",
              "8                   0                   1                    0   \n",
              "9                   0                   0                    0   \n",
              "\n",
              "   Pattern Type_striped  \n",
              "0                     0  \n",
              "1                     0  \n",
              "2                     0  \n",
              "3                     0  \n",
              "4                     0  \n",
              "5                     0  \n",
              "6                     0  \n",
              "7                     0  \n",
              "8                     0  \n",
              "9                     0  \n",
              "\n",
              "[10 rows x 106 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 183
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Ul3OsvL59tCA",
        "outputId": "be5a357b-b6e1-4216-82d7-66ffd7c82c98"
      },
      "source": [
        "y.head(10)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    1\n",
              "1    0\n",
              "2    0\n",
              "3    1\n",
              "4    0\n",
              "5    0\n",
              "6    0\n",
              "7    0\n",
              "8    1\n",
              "9    1\n",
              "Name: Recommendation, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 184
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "NasFB8Ua9tCA"
      },
      "source": [
        "#### Scaling our data\n",
        "Since we are using some linear classifiers it is important that before training we should scale our data."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yVwYS_0P9tCA"
      },
      "source": [
        "sc = StandardScaler()\n",
        "X = sc.fit_transform(X)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "JGf46pzp9tCA"
      },
      "source": [
        "#### Split data into train and test sets\n",
        "We will split our data into train and test sets. We will train our model on the train set and test it (i.e, check accuracy) on the test set."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hiso74Jc9tCA"
      },
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y, random_state=42, test_size=0.2)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tzdlSdAy9tCA",
        "outputId": "b1b090ed-4876-449f-e7d9-2ae6c0e46584"
      },
      "source": [
        "# Check the dimesions\n",
        "print(X_train.shape, y_train.shape)\n",
        "print(X_test.shape, y_test.shape)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "(400, 106) (400,)\n",
            "(100, 106) (100,)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "IjI7fQT39tCB"
      },
      "source": [
        "#### Building our Model\n",
        "Now we've got our data split into train and test sets. it's time to build our machine learning model."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kjztNg8n9tCB"
      },
      "source": [
        "# Put models in a dictionary\n",
        "models = {'Logistic Regression': LogisticRegression(),\n",
        "         'KNN': KNeighborsClassifier(),\n",
        "          'SGD': SGDClassifier(),\n",
        "          'LinearSVC':LinearSVC(),\n",
        "          'DecisionTree': DecisionTreeClassifier(),\n",
        "         'RandomForest': RandomForestClassifier()}\n",
        "\n",
        "# Create a function to fit and score models\n",
        "\n",
        "def fit_and_score(models, X_train, X_test, y_train, y_test):\n",
        "    \"\"\"\n",
        "    Fits and evaluates given machine learning models\n",
        "    models: dict of different Scikit-Learn machine learning models\n",
        "    X_train : training data (no labels)\n",
        "    y_train : test data (no labels)\n",
        "    y_train : training labels\n",
        "    y_test : test_labels\n",
        "    \"\"\"\n",
        "    # Set random seed\n",
        "    np.random.seed(42)\n",
        "    \n",
        "    # make a dictionary to keep model scores\n",
        "    model_scores = {}\n",
        "    # Loop through models\n",
        "    for name, models in models.items():\n",
        "        # fit the models to the data\n",
        "        models.fit(X_train, y_train)\n",
        "        # evaluate the models and append its scores tp model scores\n",
        "        model_scores[name] = models.score(X_test, y_test)\n",
        "    return model_scores"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wNC52hlV9tCB",
        "outputId": "32ac0feb-51bd-4043-dbad-63802b0eb8dd"
      },
      "source": [
        "model_scores = fit_and_score(models, X_train, X_test, y_train, y_test)\n",
        "model_scores"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'Logistic Regression': 0.6,\n",
              " 'KNN': 0.56,\n",
              " 'SGD': 0.56,\n",
              " 'LinearSVC': 0.62,\n",
              " 'DecisionTree': 0.57,\n",
              " 'RandomForest': 0.61}"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 189
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "szukrXI79tCB"
      },
      "source": [
        "**Compare our models**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "eNFQyLy99tCB",
        "outputId": "f376df37-5dbb-41da-ab47-f4df62a9784e"
      },
      "source": [
        "# Compare our models\n",
        "model_compare = pd.DataFrame(model_scores, index=['accuracy'])\n",
        "model_compare.T.plot.bar(rot=0, figsize=(20, 5));"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x360 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "25qta0u29tCB"
      },
      "source": [
        "Now we've got a baseline model.... and we know a model's first predictions aern't aways what we should base our next steps of. What shuould we do?\n",
        "\n",
        "Let's look at the following:\n",
        "\n",
        "* Hyperparameter tuning\n",
        "* Cross-validation\n",
        "* Precision\n",
        "* Recall\n",
        "* F1 score\n",
        "* Classification report\n",
        "* ROC Curve\n",
        "* Area under the curve (AUC)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "fS-msaLM9tCB"
      },
      "source": [
        "#### HyperParameter Tuning"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9mExyZ5m9tCB"
      },
      "source": [
        "# Lets tune KNN\n",
        "\n",
        "train_scores = []\n",
        "test_scores = []\n",
        "\n",
        "# Create a list different value for n_neighbors\n",
        "neighbors = range(1, 21)\n",
        "\n",
        "# Setup KNN instance\n",
        "knn = KNeighborsClassifier()\n",
        "\n",
        "#Loop thriogh different KNN neighbors\n",
        "for i in neighbors:\n",
        "    knn.set_params(n_neighbors=i)\n",
        "    \n",
        "    # Fit the algorithm\n",
        "    knn.fit(X_train, y_train)\n",
        "    \n",
        "    # Update the training scores list\n",
        "    train_scores.append(knn.score(X_train, y_train))\n",
        "    \n",
        "    # Update the test scores tist\n",
        "    test_scores.append(knn.score(X_test, y_test))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pXYNMd_Z9tCC",
        "outputId": "3dd9f631-2586-4489-b095-89fdba054d22"
      },
      "source": [
        "train_scores"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[0.9975,\n",
              " 0.7625,\n",
              " 0.7725,\n",
              " 0.6975,\n",
              " 0.6725,\n",
              " 0.6625,\n",
              " 0.6475,\n",
              " 0.6425,\n",
              " 0.64,\n",
              " 0.64,\n",
              " 0.635,\n",
              " 0.6275,\n",
              " 0.625,\n",
              " 0.6375,\n",
              " 0.6275,\n",
              " 0.63,\n",
              " 0.6175,\n",
              " 0.6225,\n",
              " 0.625,\n",
              " 0.6325]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 196
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1U1XaXTP9tCC",
        "outputId": "8a6254c9-0113-43ee-c222-62be4c8a4bb8"
      },
      "source": [
        "test_scores"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[0.52,\n",
              " 0.5,\n",
              " 0.53,\n",
              " 0.54,\n",
              " 0.56,\n",
              " 0.59,\n",
              " 0.53,\n",
              " 0.58,\n",
              " 0.52,\n",
              " 0.58,\n",
              " 0.57,\n",
              " 0.59,\n",
              " 0.57,\n",
              " 0.6,\n",
              " 0.57,\n",
              " 0.58,\n",
              " 0.54,\n",
              " 0.58,\n",
              " 0.57,\n",
              " 0.59]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 197
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ntzCE5u-9tCC",
        "outputId": "84f8cfa1-79d8-495c-f934-6ec70dc99bed"
      },
      "source": [
        "plt.plot(neighbors, train_scores, label='Train Score')\n",
        "plt.plot(neighbors, test_scores, label='Test Scores')\n",
        "plt.xticks(np.arange(1, 21, 1))\n",
        "plt.xlabel('Number of neighbors')\n",
        "plt.ylabel('Model Score')\n",
        "plt.legend();\n",
        "\n",
        "print(f'Maximum KN score on the test data: {max(test_scores)*100:.2f}%')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Maximum KN score on the test data: 60.00%\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WCm2Pt229tCC",
        "outputId": "1f19d153-1c38-4ca2-d079-6b3807c6f7ea"
      },
      "source": [
        "knn = KNeighborsClassifier(n_neighbors=14).fit(X_train, y_train)\n",
        "plot_roc_curve(knn, X_test, y_test);"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8ULEGMFp9tCC",
        "outputId": "d166b311-3917-44cb-d3df-c425ff8c160a"
      },
      "source": [
        "print(classification_report(y_test, knn.predict(X_test)))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.60      0.91      0.73        58\n",
            "           1       0.58      0.17      0.26        42\n",
            "\n",
            "    accuracy                           0.60       100\n",
            "   macro avg       0.59      0.54      0.49       100\n",
            "weighted avg       0.59      0.60      0.53       100\n",
            "\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8KTRLFUp9tCC",
        "outputId": "9395bb40-6060-4b22-91f3-271d59b8f194"
      },
      "source": [
        "# Linear SVC -Random Search for hyperparameters\n",
        "params = {\n",
        "    'C': [0.1, 1, 10, 100, 1000],   \n",
        "}\n",
        "\n",
        "svm = LinearSVC(random_state=42)\n",
        "svm_random = RandomizedSearchCV(svm, cv=5, param_distributions=params, n_iter=100, verbose=2)\n",
        "svm_random.fit(X_train, y_train)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Fitting 5 folds for each of 5 candidates, totalling 25 fits\n",
            "[CV] C=0.1 ...........................................................\n",
            "[CV] ............................................ C=0.1, total=   0.0s\n",
            "[CV] C=0.1 ...........................................................\n",
            "[CV] ............................................ C=0.1, total=   0.0s\n",
            "[CV] C=0.1 ...........................................................\n",
            "[CV] ............................................ C=0.1, total=   0.0s\n",
            "[CV] C=0.1 ...........................................................\n",
            "[CV] ............................................ C=0.1, total=   0.0s\n",
            "[CV] C=0.1 ...........................................................\n",
            "[CV] ............................................ C=0.1, total=   0.0s\n",
            "[CV] C=1 .............................................................\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n",
            "[Parallel(n_jobs=1)]: Done   1 out of   1 | elapsed:    0.0s remaining:    0.0s\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV] .............................................. C=1, total=   0.1s\n",
            "[CV] C=1 .............................................................\n",
            "[CV] .............................................. C=1, total=   0.1s\n",
            "[CV] C=1 .............................................................\n",
            "[CV] .............................................. C=1, total=   0.1s\n",
            "[CV] C=1 .............................................................\n",
            "[CV] .............................................. C=1, total=   0.1s\n",
            "[CV] C=1 .............................................................\n",
            "[CV] .............................................. C=1, total=   0.1s\n",
            "[CV] C=10 ............................................................\n",
            "[CV] ............................................. C=10, total=   0.1s\n",
            "[CV] C=10 ............................................................\n",
            "[CV] ............................................. C=10, total=   0.1s\n",
            "[CV] C=10 ............................................................\n",
            "[CV] ............................................. C=10, total=   0.1s\n",
            "[CV] C=10 ............................................................\n",
            "[CV] ............................................. C=10, total=   0.1s\n",
            "[CV] C=10 ............................................................\n",
            "[CV] ............................................. C=10, total=   0.1s\n",
            "[CV] C=100 ...........................................................\n",
            "[CV] ............................................ C=100, total=   0.1s\n",
            "[CV] C=100 ...........................................................\n",
            "[CV] ............................................ C=100, total=   0.1s\n",
            "[CV] C=100 ...........................................................\n",
            "[CV] ............................................ C=100, total=   0.1s\n",
            "[CV] C=100 ...........................................................\n",
            "[CV] ............................................ C=100, total=   0.1s\n",
            "[CV] C=100 ...........................................................\n",
            "[CV] ............................................ C=100, total=   0.1s\n",
            "[CV] C=1000 ..........................................................\n",
            "[CV] ........................................... C=1000, total=   0.1s\n",
            "[CV] C=1000 ..........................................................\n",
            "[CV] ........................................... C=1000, total=   0.1s\n",
            "[CV] C=1000 ..........................................................\n",
            "[CV] ........................................... C=1000, total=   0.1s\n",
            "[CV] C=1000 ..........................................................\n",
            "[CV] ........................................... C=1000, total=   0.1s\n",
            "[CV] C=1000 ..........................................................\n",
            "[CV] ........................................... C=1000, total=   0.1s\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[Parallel(n_jobs=1)]: Done  25 out of  25 | elapsed:    1.5s finished\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "RandomizedSearchCV(cv=5, estimator=LinearSVC(random_state=42), n_iter=100,\n",
              "                   param_distributions={'C': [0.1, 1, 10, 100, 1000]},\n",
              "                   verbose=2)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 288
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ovYj6zmy9tCC",
        "outputId": "a479ca6e-96dd-4646-e421-f8cc98e77f18"
      },
      "source": [
        "svm_random.best_params_"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'C': 0.1}"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 289
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hThHd9xR9tCD",
        "outputId": "6cd5ae83-37b9-447f-957e-5ebfe2c32087"
      },
      "source": [
        "svm_new_score = svm_random.score(X_test, y_test)\n",
        "svm_new_score"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.61"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 332
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5aCntEIC9tCD",
        "outputId": "8328ec97-4a44-4fab-fbfb-dd76719ffc91"
      },
      "source": [
        "plot_roc_curve(svm_random, X_test, y_test)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<sklearn.metrics._plot.roc_curve.RocCurveDisplay at 0x1303ba100>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 291
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5tCX7cEn9tCD",
        "outputId": "2ef89173-5b1d-422a-b588-934c142bcc4e"
      },
      "source": [
        "print(classification_report(y_test, svm_random.predict(X_test)))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.63      0.78      0.70        58\n",
            "           1       0.55      0.38      0.45        42\n",
            "\n",
            "    accuracy                           0.61       100\n",
            "   macro avg       0.59      0.58      0.57       100\n",
            "weighted avg       0.60      0.61      0.59       100\n",
            "\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vbjfXhro9tCD",
        "outputId": "2f41bef7-5597-41b7-f446-036b7ed1bd8b"
      },
      "source": [
        "# Logistic Regression -Random Search for hyperparameters\n",
        "param_dist = {'penalty': ['l2', 'l1'], \n",
        "              'class_weight': [None, 'balanced'],\n",
        "              'C': np.logspace(-20, 20, 10000), \n",
        "              'intercept_scaling': np.logspace(-20, 20, 10000)}\n",
        "lr = LogisticRegression(random_state=42)\n",
        "random_search_lr = RandomizedSearchCV(lr, n_jobs=2, param_distributions=param_dist, n_iter=100, cv=5)\n",
        "random_search_lr.fit(X_train, y_train)\n",
        "print(\"Accuracy on test set:\",random_search_lr.score(X_test, y_test))\n",
        "print('Best Parameters: \\n', random_search_lr.best_params_)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Accuracy on test set: 0.62\n",
            "Best Parameters: \n",
            " {'penalty': 'l2', 'intercept_scaling': 5.9659219556494824e+16, 'class_weight': 'balanced', 'C': 0.007617074070610477}\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Dm5pZ4oA9tCD"
      },
      "source": [
        "lr_new_score = random_search_lr.score(X_test, y_test)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OdYAVFbB9tCD",
        "outputId": "04db6a2b-7921-4ca7-99a8-70e500de961e"
      },
      "source": [
        "print(classification_report(y_test, random_search_lr.predict(X_test)))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.65      0.74      0.69        58\n",
            "           1       0.56      0.45      0.50        42\n",
            "\n",
            "    accuracy                           0.62       100\n",
            "   macro avg       0.61      0.60      0.60       100\n",
            "weighted avg       0.61      0.62      0.61       100\n",
            "\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "iCO5u9Xb9tCD",
        "outputId": "de0190bb-7c56-42f5-bfab-0b1c9bb9ac55"
      },
      "source": [
        "plot_roc_curve(random_search_lr, X_test, y_test);"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "scrolled": true,
        "id": "1jKGqnXJ9tCD",
        "outputId": "7f444e13-e768-4e0c-831c-26166b05885c"
      },
      "source": [
        "# Random Forest Classifier -Random Search for hyperparameters\n",
        "rf = RandomForestClassifier(random_state=42)\n",
        "param_grid = {\n",
        "              \"max_depth\": [None, 3, 5, 10, 15, 25],\n",
        "              \"max_features\": [0.5, 1, 'log2', 'sqrt'],\n",
        "              \"min_samples_split\": np.arange(2, 20, 1),\n",
        "              \"min_samples_leaf\": np.arange(1, 11, 1),\n",
        "              \"bootstrap\": [True, False],\n",
        "              \"n_estimators\": np.arange(100, 1000, 50)\n",
        "}\n",
        "\n",
        "random_rf = RandomizedSearchCV(rf, param_distributions=param_grid, cv=5, n_iter=300, verbose=2)\n",
        "%time\n",
        "random_rf.fit(X_train, y_train)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "CPU times: user 2 µs, sys: 0 ns, total: 2 µs\n",
            "Wall time: 6.2 µs\n",
            "Fitting 5 folds for each of 300 candidates, totalling 1500 fits\n",
            "[CV] n_estimators=700, min_samples_split=4, min_samples_leaf=10, max_features=0.5, max_depth=10, bootstrap=True \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=700, min_samples_split=4, min_samples_leaf=10, max_features=0.5, max_depth=10, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=700, min_samples_split=4, min_samples_leaf=10, max_features=0.5, max_depth=10, bootstrap=True \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[Parallel(n_jobs=1)]: Done   1 out of   1 | elapsed:    0.8s remaining:    0.0s\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=700, min_samples_split=4, min_samples_leaf=10, max_features=0.5, max_depth=10, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=700, min_samples_split=4, min_samples_leaf=10, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=700, min_samples_split=4, min_samples_leaf=10, max_features=0.5, max_depth=10, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=700, min_samples_split=4, min_samples_leaf=10, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=700, min_samples_split=4, min_samples_leaf=10, max_features=0.5, max_depth=10, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=700, min_samples_split=4, min_samples_leaf=10, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=700, min_samples_split=4, min_samples_leaf=10, max_features=0.5, max_depth=10, bootstrap=True, total=   1.1s\n",
            "[CV] n_estimators=500, min_samples_split=17, min_samples_leaf=10, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=17, min_samples_leaf=10, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=17, min_samples_leaf=10, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=17, min_samples_leaf=10, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=17, min_samples_leaf=10, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=17, min_samples_leaf=10, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=17, min_samples_leaf=10, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=17, min_samples_leaf=10, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=500, min_samples_split=17, min_samples_leaf=10, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=17, min_samples_leaf=10, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=950, min_samples_split=2, min_samples_leaf=9, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=2, min_samples_leaf=9, max_features=sqrt, max_depth=25, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=950, min_samples_split=2, min_samples_leaf=9, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=2, min_samples_leaf=9, max_features=sqrt, max_depth=25, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=950, min_samples_split=2, min_samples_leaf=9, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=2, min_samples_leaf=9, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=950, min_samples_split=2, min_samples_leaf=9, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=2, min_samples_leaf=9, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=950, min_samples_split=2, min_samples_leaf=9, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=2, min_samples_leaf=9, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=600, min_samples_split=12, min_samples_leaf=4, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=12, min_samples_leaf=4, max_features=0.5, max_depth=10, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=600, min_samples_split=12, min_samples_leaf=4, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=12, min_samples_leaf=4, max_features=0.5, max_depth=10, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=600, min_samples_split=12, min_samples_leaf=4, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=12, min_samples_leaf=4, max_features=0.5, max_depth=10, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=600, min_samples_split=12, min_samples_leaf=4, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=12, min_samples_leaf=4, max_features=0.5, max_depth=10, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=600, min_samples_split=12, min_samples_leaf=4, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=12, min_samples_leaf=4, max_features=0.5, max_depth=10, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=850, min_samples_split=7, min_samples_leaf=1, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=7, min_samples_leaf=1, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=850, min_samples_split=7, min_samples_leaf=1, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=7, min_samples_leaf=1, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=850, min_samples_split=7, min_samples_leaf=1, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=7, min_samples_leaf=1, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=850, min_samples_split=7, min_samples_leaf=1, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=7, min_samples_leaf=1, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=850, min_samples_split=7, min_samples_leaf=1, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=7, min_samples_leaf=1, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=450, min_samples_split=19, min_samples_leaf=1, max_features=0.5, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=19, min_samples_leaf=1, max_features=0.5, max_depth=10, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=19, min_samples_leaf=1, max_features=0.5, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=19, min_samples_leaf=1, max_features=0.5, max_depth=10, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=19, min_samples_leaf=1, max_features=0.5, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=19, min_samples_leaf=1, max_features=0.5, max_depth=10, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=19, min_samples_leaf=1, max_features=0.5, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=19, min_samples_leaf=1, max_features=0.5, max_depth=10, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=19, min_samples_leaf=1, max_features=0.5, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=19, min_samples_leaf=1, max_features=0.5, max_depth=10, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=650, min_samples_split=8, min_samples_leaf=9, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=8, min_samples_leaf=9, max_features=0.5, max_depth=25, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=650, min_samples_split=8, min_samples_leaf=9, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=8, min_samples_leaf=9, max_features=0.5, max_depth=25, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=650, min_samples_split=8, min_samples_leaf=9, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=8, min_samples_leaf=9, max_features=0.5, max_depth=25, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=650, min_samples_split=8, min_samples_leaf=9, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=8, min_samples_leaf=9, max_features=0.5, max_depth=25, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=650, min_samples_split=8, min_samples_leaf=9, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=8, min_samples_leaf=9, max_features=0.5, max_depth=25, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=250, min_samples_split=17, min_samples_leaf=6, max_features=0.5, max_depth=10, bootstrap=False \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=250, min_samples_split=17, min_samples_leaf=6, max_features=0.5, max_depth=10, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=17, min_samples_leaf=6, max_features=0.5, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=17, min_samples_leaf=6, max_features=0.5, max_depth=10, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=17, min_samples_leaf=6, max_features=0.5, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=17, min_samples_leaf=6, max_features=0.5, max_depth=10, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=17, min_samples_leaf=6, max_features=0.5, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=17, min_samples_leaf=6, max_features=0.5, max_depth=10, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=17, min_samples_leaf=6, max_features=0.5, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=17, min_samples_leaf=6, max_features=0.5, max_depth=10, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=950, min_samples_split=14, min_samples_leaf=8, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=14, min_samples_leaf=8, max_features=log2, max_depth=25, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=950, min_samples_split=14, min_samples_leaf=8, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=14, min_samples_leaf=8, max_features=log2, max_depth=25, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=950, min_samples_split=14, min_samples_leaf=8, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=14, min_samples_leaf=8, max_features=log2, max_depth=25, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=950, min_samples_split=14, min_samples_leaf=8, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=14, min_samples_leaf=8, max_features=log2, max_depth=25, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=950, min_samples_split=14, min_samples_leaf=8, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=14, min_samples_leaf=8, max_features=log2, max_depth=25, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=300, min_samples_split=11, min_samples_leaf=5, max_features=0.5, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=11, min_samples_leaf=5, max_features=0.5, max_depth=25, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=300, min_samples_split=11, min_samples_leaf=5, max_features=0.5, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=11, min_samples_leaf=5, max_features=0.5, max_depth=25, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=300, min_samples_split=11, min_samples_leaf=5, max_features=0.5, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=11, min_samples_leaf=5, max_features=0.5, max_depth=25, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=300, min_samples_split=11, min_samples_leaf=5, max_features=0.5, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=11, min_samples_leaf=5, max_features=0.5, max_depth=25, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=300, min_samples_split=11, min_samples_leaf=5, max_features=0.5, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=11, min_samples_leaf=5, max_features=0.5, max_depth=25, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=900, min_samples_split=16, min_samples_leaf=4, max_features=log2, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=16, min_samples_leaf=4, max_features=log2, max_depth=10, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=900, min_samples_split=16, min_samples_leaf=4, max_features=log2, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=16, min_samples_leaf=4, max_features=log2, max_depth=10, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=900, min_samples_split=16, min_samples_leaf=4, max_features=log2, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=16, min_samples_leaf=4, max_features=log2, max_depth=10, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=900, min_samples_split=16, min_samples_leaf=4, max_features=log2, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=16, min_samples_leaf=4, max_features=log2, max_depth=10, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=900, min_samples_split=16, min_samples_leaf=4, max_features=log2, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=16, min_samples_leaf=4, max_features=log2, max_depth=10, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=200, min_samples_split=8, min_samples_leaf=8, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=8, min_samples_leaf=8, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=8, min_samples_leaf=8, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=8, min_samples_leaf=8, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=8, min_samples_leaf=8, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=8, min_samples_leaf=8, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=8, min_samples_leaf=8, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=8, min_samples_leaf=8, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=8, min_samples_leaf=8, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=8, min_samples_leaf=8, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=350, min_samples_split=2, min_samples_leaf=2, max_features=log2, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=2, min_samples_leaf=2, max_features=log2, max_depth=25, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=2, min_samples_leaf=2, max_features=log2, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=2, min_samples_leaf=2, max_features=log2, max_depth=25, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=2, min_samples_leaf=2, max_features=log2, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=2, min_samples_leaf=2, max_features=log2, max_depth=25, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=2, min_samples_leaf=2, max_features=log2, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=2, min_samples_leaf=2, max_features=log2, max_depth=25, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=2, min_samples_leaf=2, max_features=log2, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=2, min_samples_leaf=2, max_features=log2, max_depth=25, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=600, min_samples_split=19, min_samples_leaf=4, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=19, min_samples_leaf=4, max_features=1, max_depth=5, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=19, min_samples_leaf=4, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=19, min_samples_leaf=4, max_features=1, max_depth=5, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=19, min_samples_leaf=4, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=19, min_samples_leaf=4, max_features=1, max_depth=5, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=19, min_samples_leaf=4, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=19, min_samples_leaf=4, max_features=1, max_depth=5, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=19, min_samples_leaf=4, max_features=1, max_depth=5, bootstrap=True \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=600, min_samples_split=19, min_samples_leaf=4, max_features=1, max_depth=5, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=100, min_samples_split=16, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=16, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=16, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=16, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=16, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=16, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=16, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=16, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=16, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=16, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=450, min_samples_split=13, min_samples_leaf=4, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=13, min_samples_leaf=4, max_features=log2, max_depth=None, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=450, min_samples_split=13, min_samples_leaf=4, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=13, min_samples_leaf=4, max_features=log2, max_depth=None, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=450, min_samples_split=13, min_samples_leaf=4, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=13, min_samples_leaf=4, max_features=log2, max_depth=None, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=450, min_samples_split=13, min_samples_leaf=4, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=13, min_samples_leaf=4, max_features=log2, max_depth=None, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=450, min_samples_split=13, min_samples_leaf=4, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=13, min_samples_leaf=4, max_features=log2, max_depth=None, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=750, min_samples_split=7, min_samples_leaf=9, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=750, min_samples_split=7, min_samples_leaf=9, max_features=log2, max_depth=5, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=750, min_samples_split=7, min_samples_leaf=9, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=750, min_samples_split=7, min_samples_leaf=9, max_features=log2, max_depth=5, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=750, min_samples_split=7, min_samples_leaf=9, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=750, min_samples_split=7, min_samples_leaf=9, max_features=log2, max_depth=5, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=750, min_samples_split=7, min_samples_leaf=9, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=750, min_samples_split=7, min_samples_leaf=9, max_features=log2, max_depth=5, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=750, min_samples_split=7, min_samples_leaf=9, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=750, min_samples_split=7, min_samples_leaf=9, max_features=log2, max_depth=5, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=300, min_samples_split=9, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=9, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=9, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=9, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=9, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=9, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=9, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=9, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=9, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=9, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=850, min_samples_split=11, min_samples_leaf=10, max_features=log2, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=11, min_samples_leaf=10, max_features=log2, max_depth=15, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=850, min_samples_split=11, min_samples_leaf=10, max_features=log2, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=11, min_samples_leaf=10, max_features=log2, max_depth=15, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=850, min_samples_split=11, min_samples_leaf=10, max_features=log2, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=11, min_samples_leaf=10, max_features=log2, max_depth=15, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=850, min_samples_split=11, min_samples_leaf=10, max_features=log2, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=11, min_samples_leaf=10, max_features=log2, max_depth=15, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=850, min_samples_split=11, min_samples_leaf=10, max_features=log2, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=11, min_samples_leaf=10, max_features=log2, max_depth=15, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=600, min_samples_split=15, min_samples_leaf=7, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=15, min_samples_leaf=7, max_features=0.5, max_depth=15, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=600, min_samples_split=15, min_samples_leaf=7, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=15, min_samples_leaf=7, max_features=0.5, max_depth=15, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=600, min_samples_split=15, min_samples_leaf=7, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=15, min_samples_leaf=7, max_features=0.5, max_depth=15, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=600, min_samples_split=15, min_samples_leaf=7, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=15, min_samples_leaf=7, max_features=0.5, max_depth=15, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=600, min_samples_split=15, min_samples_leaf=7, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=15, min_samples_leaf=7, max_features=0.5, max_depth=15, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=850, min_samples_split=10, min_samples_leaf=3, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=10, min_samples_leaf=3, max_features=log2, max_depth=None, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=850, min_samples_split=10, min_samples_leaf=3, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=10, min_samples_leaf=3, max_features=log2, max_depth=None, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=850, min_samples_split=10, min_samples_leaf=3, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=10, min_samples_leaf=3, max_features=log2, max_depth=None, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=850, min_samples_split=10, min_samples_leaf=3, max_features=log2, max_depth=None, bootstrap=True \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=850, min_samples_split=10, min_samples_leaf=3, max_features=log2, max_depth=None, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=850, min_samples_split=10, min_samples_leaf=3, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=10, min_samples_leaf=3, max_features=log2, max_depth=None, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=100, min_samples_split=18, min_samples_leaf=4, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=18, min_samples_leaf=4, max_features=log2, max_depth=5, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=18, min_samples_leaf=4, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=18, min_samples_leaf=4, max_features=log2, max_depth=5, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=18, min_samples_leaf=4, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=18, min_samples_leaf=4, max_features=log2, max_depth=5, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=18, min_samples_leaf=4, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=18, min_samples_leaf=4, max_features=log2, max_depth=5, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=18, min_samples_leaf=4, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=18, min_samples_leaf=4, max_features=log2, max_depth=5, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=400, min_samples_split=15, min_samples_leaf=7, max_features=log2, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=15, min_samples_leaf=7, max_features=log2, max_depth=15, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=15, min_samples_leaf=7, max_features=log2, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=15, min_samples_leaf=7, max_features=log2, max_depth=15, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=15, min_samples_leaf=7, max_features=log2, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=15, min_samples_leaf=7, max_features=log2, max_depth=15, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=15, min_samples_leaf=7, max_features=log2, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=15, min_samples_leaf=7, max_features=log2, max_depth=15, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=15, min_samples_leaf=7, max_features=log2, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=15, min_samples_leaf=7, max_features=log2, max_depth=15, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=150, min_samples_split=17, min_samples_leaf=8, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=150, min_samples_split=17, min_samples_leaf=8, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=150, min_samples_split=17, min_samples_leaf=8, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=150, min_samples_split=17, min_samples_leaf=8, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=150, min_samples_split=17, min_samples_leaf=8, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=150, min_samples_split=17, min_samples_leaf=8, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=150, min_samples_split=17, min_samples_leaf=8, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=150, min_samples_split=17, min_samples_leaf=8, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=150, min_samples_split=17, min_samples_leaf=8, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=150, min_samples_split=17, min_samples_leaf=8, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=850, min_samples_split=3, min_samples_leaf=8, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=3, min_samples_leaf=8, max_features=log2, max_depth=5, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=850, min_samples_split=3, min_samples_leaf=8, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=3, min_samples_leaf=8, max_features=log2, max_depth=5, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=850, min_samples_split=3, min_samples_leaf=8, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=3, min_samples_leaf=8, max_features=log2, max_depth=5, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=850, min_samples_split=3, min_samples_leaf=8, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=3, min_samples_leaf=8, max_features=log2, max_depth=5, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=850, min_samples_split=3, min_samples_leaf=8, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=3, min_samples_leaf=8, max_features=log2, max_depth=5, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=800, min_samples_split=3, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=3, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=800, min_samples_split=3, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=3, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=800, min_samples_split=3, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=3, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=800, min_samples_split=3, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=3, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=800, min_samples_split=3, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=3, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=700, min_samples_split=3, min_samples_leaf=10, max_features=1, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=3, min_samples_leaf=10, max_features=1, max_depth=25, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=700, min_samples_split=3, min_samples_leaf=10, max_features=1, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=3, min_samples_leaf=10, max_features=1, max_depth=25, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=700, min_samples_split=3, min_samples_leaf=10, max_features=1, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=3, min_samples_leaf=10, max_features=1, max_depth=25, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=700, min_samples_split=3, min_samples_leaf=10, max_features=1, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=3, min_samples_leaf=10, max_features=1, max_depth=25, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=700, min_samples_split=3, min_samples_leaf=10, max_features=1, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=3, min_samples_leaf=10, max_features=1, max_depth=25, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=300, min_samples_split=18, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=18, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=18, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=18, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=18, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=False \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=300, min_samples_split=18, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=18, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=18, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=18, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=18, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=6, min_samples_leaf=9, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=6, min_samples_leaf=9, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=6, min_samples_leaf=9, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=6, min_samples_leaf=9, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=6, min_samples_leaf=9, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=6, min_samples_leaf=9, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=6, min_samples_leaf=9, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=6, min_samples_leaf=9, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=6, min_samples_leaf=9, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=6, min_samples_leaf=9, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=600, min_samples_split=14, min_samples_leaf=5, max_features=1, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=14, min_samples_leaf=5, max_features=1, max_depth=10, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=14, min_samples_leaf=5, max_features=1, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=14, min_samples_leaf=5, max_features=1, max_depth=10, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=14, min_samples_leaf=5, max_features=1, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=14, min_samples_leaf=5, max_features=1, max_depth=10, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=14, min_samples_leaf=5, max_features=1, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=14, min_samples_leaf=5, max_features=1, max_depth=10, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=14, min_samples_leaf=5, max_features=1, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=14, min_samples_leaf=5, max_features=1, max_depth=10, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=100, min_samples_split=4, min_samples_leaf=2, max_features=0.5, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=4, min_samples_leaf=2, max_features=0.5, max_depth=25, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=4, min_samples_leaf=2, max_features=0.5, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=4, min_samples_leaf=2, max_features=0.5, max_depth=25, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=4, min_samples_leaf=2, max_features=0.5, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=4, min_samples_leaf=2, max_features=0.5, max_depth=25, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=4, min_samples_leaf=2, max_features=0.5, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=4, min_samples_leaf=2, max_features=0.5, max_depth=25, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=4, min_samples_leaf=2, max_features=0.5, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=4, min_samples_leaf=2, max_features=0.5, max_depth=25, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=900, min_samples_split=7, min_samples_leaf=5, max_features=1, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=7, min_samples_leaf=5, max_features=1, max_depth=3, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=900, min_samples_split=7, min_samples_leaf=5, max_features=1, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=7, min_samples_leaf=5, max_features=1, max_depth=3, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=900, min_samples_split=7, min_samples_leaf=5, max_features=1, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=7, min_samples_leaf=5, max_features=1, max_depth=3, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=900, min_samples_split=7, min_samples_leaf=5, max_features=1, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=7, min_samples_leaf=5, max_features=1, max_depth=3, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=900, min_samples_split=7, min_samples_leaf=5, max_features=1, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=7, min_samples_leaf=5, max_features=1, max_depth=3, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=100, min_samples_split=18, min_samples_leaf=9, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=18, min_samples_leaf=9, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=18, min_samples_leaf=9, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=18, min_samples_leaf=9, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=18, min_samples_leaf=9, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=18, min_samples_leaf=9, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=18, min_samples_leaf=9, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=18, min_samples_leaf=9, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=18, min_samples_leaf=9, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=18, min_samples_leaf=9, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=450, min_samples_split=3, min_samples_leaf=5, max_features=sqrt, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=3, min_samples_leaf=5, max_features=sqrt, max_depth=None, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=450, min_samples_split=3, min_samples_leaf=5, max_features=sqrt, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=3, min_samples_leaf=5, max_features=sqrt, max_depth=None, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=450, min_samples_split=3, min_samples_leaf=5, max_features=sqrt, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=3, min_samples_leaf=5, max_features=sqrt, max_depth=None, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=450, min_samples_split=3, min_samples_leaf=5, max_features=sqrt, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=3, min_samples_leaf=5, max_features=sqrt, max_depth=None, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=450, min_samples_split=3, min_samples_leaf=5, max_features=sqrt, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=3, min_samples_leaf=5, max_features=sqrt, max_depth=None, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=650, min_samples_split=2, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=2, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=650, min_samples_split=2, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=2, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=650, min_samples_split=2, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=650, min_samples_split=2, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=650, min_samples_split=2, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=2, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=650, min_samples_split=2, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=2, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=250, min_samples_split=7, min_samples_leaf=2, max_features=1, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=7, min_samples_leaf=2, max_features=1, max_depth=3, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=7, min_samples_leaf=2, max_features=1, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=7, min_samples_leaf=2, max_features=1, max_depth=3, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=7, min_samples_leaf=2, max_features=1, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=7, min_samples_leaf=2, max_features=1, max_depth=3, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=7, min_samples_leaf=2, max_features=1, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=7, min_samples_leaf=2, max_features=1, max_depth=3, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=7, min_samples_leaf=2, max_features=1, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=7, min_samples_leaf=2, max_features=1, max_depth=3, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=800, min_samples_split=3, min_samples_leaf=1, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=800, min_samples_split=3, min_samples_leaf=1, max_features=1, max_depth=5, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=800, min_samples_split=3, min_samples_leaf=1, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=800, min_samples_split=3, min_samples_leaf=1, max_features=1, max_depth=5, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=800, min_samples_split=3, min_samples_leaf=1, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=800, min_samples_split=3, min_samples_leaf=1, max_features=1, max_depth=5, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=800, min_samples_split=3, min_samples_leaf=1, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=800, min_samples_split=3, min_samples_leaf=1, max_features=1, max_depth=5, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=800, min_samples_split=3, min_samples_leaf=1, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=800, min_samples_split=3, min_samples_leaf=1, max_features=1, max_depth=5, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=700, min_samples_split=13, min_samples_leaf=4, max_features=log2, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=700, min_samples_split=13, min_samples_leaf=4, max_features=log2, max_depth=10, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=700, min_samples_split=13, min_samples_leaf=4, max_features=log2, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=700, min_samples_split=13, min_samples_leaf=4, max_features=log2, max_depth=10, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=700, min_samples_split=13, min_samples_leaf=4, max_features=log2, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=700, min_samples_split=13, min_samples_leaf=4, max_features=log2, max_depth=10, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=700, min_samples_split=13, min_samples_leaf=4, max_features=log2, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=700, min_samples_split=13, min_samples_leaf=4, max_features=log2, max_depth=10, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=700, min_samples_split=13, min_samples_leaf=4, max_features=log2, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=700, min_samples_split=13, min_samples_leaf=4, max_features=log2, max_depth=10, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=450, min_samples_split=2, min_samples_leaf=3, max_features=sqrt, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=2, min_samples_leaf=3, max_features=sqrt, max_depth=10, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=450, min_samples_split=2, min_samples_leaf=3, max_features=sqrt, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=2, min_samples_leaf=3, max_features=sqrt, max_depth=10, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=450, min_samples_split=2, min_samples_leaf=3, max_features=sqrt, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=2, min_samples_leaf=3, max_features=sqrt, max_depth=10, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=450, min_samples_split=2, min_samples_leaf=3, max_features=sqrt, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=2, min_samples_leaf=3, max_features=sqrt, max_depth=10, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=450, min_samples_split=2, min_samples_leaf=3, max_features=sqrt, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=2, min_samples_leaf=3, max_features=sqrt, max_depth=10, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=300, min_samples_split=6, min_samples_leaf=2, max_features=1, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=6, min_samples_leaf=2, max_features=1, max_depth=10, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=6, min_samples_leaf=2, max_features=1, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=6, min_samples_leaf=2, max_features=1, max_depth=10, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=6, min_samples_leaf=2, max_features=1, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=6, min_samples_leaf=2, max_features=1, max_depth=10, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=6, min_samples_leaf=2, max_features=1, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=6, min_samples_leaf=2, max_features=1, max_depth=10, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=6, min_samples_leaf=2, max_features=1, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=6, min_samples_leaf=2, max_features=1, max_depth=10, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=500, min_samples_split=18, min_samples_leaf=10, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=18, min_samples_leaf=10, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=500, min_samples_split=18, min_samples_leaf=10, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=18, min_samples_leaf=10, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=18, min_samples_leaf=10, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=18, min_samples_leaf=10, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=500, min_samples_split=18, min_samples_leaf=10, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=18, min_samples_leaf=10, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=500, min_samples_split=18, min_samples_leaf=10, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=18, min_samples_leaf=10, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=700, min_samples_split=13, min_samples_leaf=5, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=700, min_samples_split=13, min_samples_leaf=5, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=700, min_samples_split=13, min_samples_leaf=5, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=700, min_samples_split=13, min_samples_leaf=5, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=700, min_samples_split=13, min_samples_leaf=5, max_features=sqrt, max_depth=10, bootstrap=True \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=700, min_samples_split=13, min_samples_leaf=5, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=700, min_samples_split=13, min_samples_leaf=5, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=700, min_samples_split=13, min_samples_leaf=5, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=700, min_samples_split=13, min_samples_leaf=5, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=700, min_samples_split=13, min_samples_leaf=5, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=750, min_samples_split=8, min_samples_leaf=1, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=750, min_samples_split=8, min_samples_leaf=1, max_features=1, max_depth=None, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=750, min_samples_split=8, min_samples_leaf=1, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=750, min_samples_split=8, min_samples_leaf=1, max_features=1, max_depth=None, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=750, min_samples_split=8, min_samples_leaf=1, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=750, min_samples_split=8, min_samples_leaf=1, max_features=1, max_depth=None, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=750, min_samples_split=8, min_samples_leaf=1, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=750, min_samples_split=8, min_samples_leaf=1, max_features=1, max_depth=None, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=750, min_samples_split=8, min_samples_leaf=1, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=750, min_samples_split=8, min_samples_leaf=1, max_features=1, max_depth=None, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=950, min_samples_split=17, min_samples_leaf=9, max_features=sqrt, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=17, min_samples_leaf=9, max_features=sqrt, max_depth=3, bootstrap=True, total=   1.1s\n",
            "[CV] n_estimators=950, min_samples_split=17, min_samples_leaf=9, max_features=sqrt, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=17, min_samples_leaf=9, max_features=sqrt, max_depth=3, bootstrap=True, total=   1.1s\n",
            "[CV] n_estimators=950, min_samples_split=17, min_samples_leaf=9, max_features=sqrt, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=17, min_samples_leaf=9, max_features=sqrt, max_depth=3, bootstrap=True, total=   1.1s\n",
            "[CV] n_estimators=950, min_samples_split=17, min_samples_leaf=9, max_features=sqrt, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=17, min_samples_leaf=9, max_features=sqrt, max_depth=3, bootstrap=True, total=   1.1s\n",
            "[CV] n_estimators=950, min_samples_split=17, min_samples_leaf=9, max_features=sqrt, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=17, min_samples_leaf=9, max_features=sqrt, max_depth=3, bootstrap=True, total=   1.1s\n",
            "[CV] n_estimators=450, min_samples_split=18, min_samples_leaf=6, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=18, min_samples_leaf=6, max_features=0.5, max_depth=5, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=18, min_samples_leaf=6, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=18, min_samples_leaf=6, max_features=0.5, max_depth=5, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=18, min_samples_leaf=6, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=18, min_samples_leaf=6, max_features=0.5, max_depth=5, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=18, min_samples_leaf=6, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=18, min_samples_leaf=6, max_features=0.5, max_depth=5, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=18, min_samples_leaf=6, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=18, min_samples_leaf=6, max_features=0.5, max_depth=5, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=600, min_samples_split=4, min_samples_leaf=5, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=4, min_samples_leaf=5, max_features=log2, max_depth=5, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=4, min_samples_leaf=5, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=4, min_samples_leaf=5, max_features=log2, max_depth=5, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=600, min_samples_split=4, min_samples_leaf=5, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=4, min_samples_leaf=5, max_features=log2, max_depth=5, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=4, min_samples_leaf=5, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=4, min_samples_leaf=5, max_features=log2, max_depth=5, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=600, min_samples_split=4, min_samples_leaf=5, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=4, min_samples_leaf=5, max_features=log2, max_depth=5, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=550, min_samples_split=2, min_samples_leaf=6, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=2, min_samples_leaf=6, max_features=1, max_depth=25, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=550, min_samples_split=2, min_samples_leaf=6, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=2, min_samples_leaf=6, max_features=1, max_depth=25, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=550, min_samples_split=2, min_samples_leaf=6, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=2, min_samples_leaf=6, max_features=1, max_depth=25, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=550, min_samples_split=2, min_samples_leaf=6, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=2, min_samples_leaf=6, max_features=1, max_depth=25, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=550, min_samples_split=2, min_samples_leaf=6, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=2, min_samples_leaf=6, max_features=1, max_depth=25, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=400, min_samples_split=14, min_samples_leaf=2, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=400, min_samples_split=14, min_samples_leaf=2, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=14, min_samples_leaf=2, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=400, min_samples_split=14, min_samples_leaf=2, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=14, min_samples_leaf=2, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=400, min_samples_split=14, min_samples_leaf=2, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=14, min_samples_leaf=2, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=400, min_samples_split=14, min_samples_leaf=2, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=14, min_samples_leaf=2, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=400, min_samples_split=14, min_samples_leaf=2, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=500, min_samples_split=16, min_samples_leaf=7, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=16, min_samples_leaf=7, max_features=1, max_depth=15, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=500, min_samples_split=16, min_samples_leaf=7, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=16, min_samples_leaf=7, max_features=1, max_depth=15, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=500, min_samples_split=16, min_samples_leaf=7, max_features=1, max_depth=15, bootstrap=False \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=500, min_samples_split=16, min_samples_leaf=7, max_features=1, max_depth=15, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=500, min_samples_split=16, min_samples_leaf=7, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=16, min_samples_leaf=7, max_features=1, max_depth=15, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=500, min_samples_split=16, min_samples_leaf=7, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=16, min_samples_leaf=7, max_features=1, max_depth=15, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=150, min_samples_split=13, min_samples_leaf=9, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=13, min_samples_leaf=9, max_features=1, max_depth=25, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=150, min_samples_split=13, min_samples_leaf=9, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=13, min_samples_leaf=9, max_features=1, max_depth=25, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=150, min_samples_split=13, min_samples_leaf=9, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=13, min_samples_leaf=9, max_features=1, max_depth=25, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=150, min_samples_split=13, min_samples_leaf=9, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=13, min_samples_leaf=9, max_features=1, max_depth=25, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=150, min_samples_split=13, min_samples_leaf=9, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=13, min_samples_leaf=9, max_features=1, max_depth=25, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=350, min_samples_split=8, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=8, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=8, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=8, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=8, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=8, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=8, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=8, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=8, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=8, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=6, min_samples_leaf=10, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=350, min_samples_split=6, min_samples_leaf=10, max_features=0.5, max_depth=10, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=350, min_samples_split=6, min_samples_leaf=10, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=350, min_samples_split=6, min_samples_leaf=10, max_features=0.5, max_depth=10, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=350, min_samples_split=6, min_samples_leaf=10, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=350, min_samples_split=6, min_samples_leaf=10, max_features=0.5, max_depth=10, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=350, min_samples_split=6, min_samples_leaf=10, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=350, min_samples_split=6, min_samples_leaf=10, max_features=0.5, max_depth=10, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=350, min_samples_split=6, min_samples_leaf=10, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=350, min_samples_split=6, min_samples_leaf=10, max_features=0.5, max_depth=10, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=500, min_samples_split=16, min_samples_leaf=9, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=16, min_samples_leaf=9, max_features=0.5, max_depth=5, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=16, min_samples_leaf=9, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=16, min_samples_leaf=9, max_features=0.5, max_depth=5, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=16, min_samples_leaf=9, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=16, min_samples_leaf=9, max_features=0.5, max_depth=5, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=16, min_samples_leaf=9, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=16, min_samples_leaf=9, max_features=0.5, max_depth=5, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=16, min_samples_leaf=9, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=16, min_samples_leaf=9, max_features=0.5, max_depth=5, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=850, min_samples_split=14, min_samples_leaf=10, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=850, min_samples_split=14, min_samples_leaf=10, max_features=log2, max_depth=10, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=850, min_samples_split=14, min_samples_leaf=10, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=850, min_samples_split=14, min_samples_leaf=10, max_features=log2, max_depth=10, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=850, min_samples_split=14, min_samples_leaf=10, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=850, min_samples_split=14, min_samples_leaf=10, max_features=log2, max_depth=10, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=850, min_samples_split=14, min_samples_leaf=10, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=850, min_samples_split=14, min_samples_leaf=10, max_features=log2, max_depth=10, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=850, min_samples_split=14, min_samples_leaf=10, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=850, min_samples_split=14, min_samples_leaf=10, max_features=log2, max_depth=10, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=950, min_samples_split=3, min_samples_leaf=6, max_features=sqrt, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=3, min_samples_leaf=6, max_features=sqrt, max_depth=15, bootstrap=False, total=   0.9s\n",
            "[CV] n_estimators=950, min_samples_split=3, min_samples_leaf=6, max_features=sqrt, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=3, min_samples_leaf=6, max_features=sqrt, max_depth=15, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=950, min_samples_split=3, min_samples_leaf=6, max_features=sqrt, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=3, min_samples_leaf=6, max_features=sqrt, max_depth=15, bootstrap=False, total=   0.9s\n",
            "[CV] n_estimators=950, min_samples_split=3, min_samples_leaf=6, max_features=sqrt, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=3, min_samples_leaf=6, max_features=sqrt, max_depth=15, bootstrap=False, total=   0.9s\n",
            "[CV] n_estimators=950, min_samples_split=3, min_samples_leaf=6, max_features=sqrt, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=3, min_samples_leaf=6, max_features=sqrt, max_depth=15, bootstrap=False, total=   0.9s\n",
            "[CV] n_estimators=600, min_samples_split=17, min_samples_leaf=4, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=17, min_samples_leaf=4, max_features=1, max_depth=15, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=600, min_samples_split=17, min_samples_leaf=4, max_features=1, max_depth=15, bootstrap=False \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=600, min_samples_split=17, min_samples_leaf=4, max_features=1, max_depth=15, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=600, min_samples_split=17, min_samples_leaf=4, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=17, min_samples_leaf=4, max_features=1, max_depth=15, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=600, min_samples_split=17, min_samples_leaf=4, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=17, min_samples_leaf=4, max_features=1, max_depth=15, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=600, min_samples_split=17, min_samples_leaf=4, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=17, min_samples_leaf=4, max_features=1, max_depth=15, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=750, min_samples_split=17, min_samples_leaf=9, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=17, min_samples_leaf=9, max_features=0.5, max_depth=10, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=750, min_samples_split=17, min_samples_leaf=9, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=17, min_samples_leaf=9, max_features=0.5, max_depth=10, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=750, min_samples_split=17, min_samples_leaf=9, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=17, min_samples_leaf=9, max_features=0.5, max_depth=10, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=750, min_samples_split=17, min_samples_leaf=9, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=17, min_samples_leaf=9, max_features=0.5, max_depth=10, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=750, min_samples_split=17, min_samples_leaf=9, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=17, min_samples_leaf=9, max_features=0.5, max_depth=10, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=400, min_samples_split=7, min_samples_leaf=6, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=400, min_samples_split=7, min_samples_leaf=6, max_features=log2, max_depth=None, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=400, min_samples_split=7, min_samples_leaf=6, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=400, min_samples_split=7, min_samples_leaf=6, max_features=log2, max_depth=None, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=400, min_samples_split=7, min_samples_leaf=6, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=400, min_samples_split=7, min_samples_leaf=6, max_features=log2, max_depth=None, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=400, min_samples_split=7, min_samples_leaf=6, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=400, min_samples_split=7, min_samples_leaf=6, max_features=log2, max_depth=None, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=400, min_samples_split=7, min_samples_leaf=6, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=400, min_samples_split=7, min_samples_leaf=6, max_features=log2, max_depth=None, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=700, min_samples_split=10, min_samples_leaf=9, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=10, min_samples_leaf=9, max_features=log2, max_depth=None, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=700, min_samples_split=10, min_samples_leaf=9, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=10, min_samples_leaf=9, max_features=log2, max_depth=None, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=700, min_samples_split=10, min_samples_leaf=9, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=10, min_samples_leaf=9, max_features=log2, max_depth=None, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=700, min_samples_split=10, min_samples_leaf=9, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=10, min_samples_leaf=9, max_features=log2, max_depth=None, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=700, min_samples_split=10, min_samples_leaf=9, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=10, min_samples_leaf=9, max_features=log2, max_depth=None, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=100, min_samples_split=18, min_samples_leaf=1, max_features=log2, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=18, min_samples_leaf=1, max_features=log2, max_depth=10, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=18, min_samples_leaf=1, max_features=log2, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=18, min_samples_leaf=1, max_features=log2, max_depth=10, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=18, min_samples_leaf=1, max_features=log2, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=18, min_samples_leaf=1, max_features=log2, max_depth=10, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=18, min_samples_leaf=1, max_features=log2, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=18, min_samples_leaf=1, max_features=log2, max_depth=10, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=18, min_samples_leaf=1, max_features=log2, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=18, min_samples_leaf=1, max_features=log2, max_depth=10, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=550, min_samples_split=17, min_samples_leaf=9, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=17, min_samples_leaf=9, max_features=log2, max_depth=10, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=550, min_samples_split=17, min_samples_leaf=9, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=17, min_samples_leaf=9, max_features=log2, max_depth=10, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=550, min_samples_split=17, min_samples_leaf=9, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=17, min_samples_leaf=9, max_features=log2, max_depth=10, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=550, min_samples_split=17, min_samples_leaf=9, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=17, min_samples_leaf=9, max_features=log2, max_depth=10, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=550, min_samples_split=17, min_samples_leaf=9, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=17, min_samples_leaf=9, max_features=log2, max_depth=10, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=500, min_samples_split=18, min_samples_leaf=4, max_features=sqrt, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=18, min_samples_leaf=4, max_features=sqrt, max_depth=15, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=500, min_samples_split=18, min_samples_leaf=4, max_features=sqrt, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=18, min_samples_leaf=4, max_features=sqrt, max_depth=15, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=18, min_samples_leaf=4, max_features=sqrt, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=18, min_samples_leaf=4, max_features=sqrt, max_depth=15, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=500, min_samples_split=18, min_samples_leaf=4, max_features=sqrt, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=18, min_samples_leaf=4, max_features=sqrt, max_depth=15, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=18, min_samples_leaf=4, max_features=sqrt, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=18, min_samples_leaf=4, max_features=sqrt, max_depth=15, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=250, min_samples_split=19, min_samples_leaf=5, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=19, min_samples_leaf=5, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=19, min_samples_leaf=5, max_features=sqrt, max_depth=5, bootstrap=False \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=250, min_samples_split=19, min_samples_leaf=5, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=19, min_samples_leaf=5, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=19, min_samples_leaf=5, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=19, min_samples_leaf=5, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=19, min_samples_leaf=5, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=19, min_samples_leaf=5, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=19, min_samples_leaf=5, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=9, min_samples_leaf=8, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=9, min_samples_leaf=8, max_features=0.5, max_depth=None, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=9, min_samples_leaf=8, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=9, min_samples_leaf=8, max_features=0.5, max_depth=None, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=9, min_samples_leaf=8, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=9, min_samples_leaf=8, max_features=0.5, max_depth=None, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=200, min_samples_split=9, min_samples_leaf=8, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=9, min_samples_leaf=8, max_features=0.5, max_depth=None, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=200, min_samples_split=9, min_samples_leaf=8, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=9, min_samples_leaf=8, max_features=0.5, max_depth=None, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=11, min_samples_leaf=10, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=11, min_samples_leaf=10, max_features=1, max_depth=None, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=11, min_samples_leaf=10, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=11, min_samples_leaf=10, max_features=1, max_depth=None, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=11, min_samples_leaf=10, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=11, min_samples_leaf=10, max_features=1, max_depth=None, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=11, min_samples_leaf=10, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=11, min_samples_leaf=10, max_features=1, max_depth=None, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=11, min_samples_leaf=10, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=11, min_samples_leaf=10, max_features=1, max_depth=None, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=550, min_samples_split=12, min_samples_leaf=4, max_features=log2, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=12, min_samples_leaf=4, max_features=log2, max_depth=25, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=550, min_samples_split=12, min_samples_leaf=4, max_features=log2, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=12, min_samples_leaf=4, max_features=log2, max_depth=25, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=550, min_samples_split=12, min_samples_leaf=4, max_features=log2, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=12, min_samples_leaf=4, max_features=log2, max_depth=25, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=550, min_samples_split=12, min_samples_leaf=4, max_features=log2, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=12, min_samples_leaf=4, max_features=log2, max_depth=25, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=550, min_samples_split=12, min_samples_leaf=4, max_features=log2, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=12, min_samples_leaf=4, max_features=log2, max_depth=25, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=100, min_samples_split=3, min_samples_leaf=7, max_features=sqrt, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=3, min_samples_leaf=7, max_features=sqrt, max_depth=10, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=3, min_samples_leaf=7, max_features=sqrt, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=3, min_samples_leaf=7, max_features=sqrt, max_depth=10, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=3, min_samples_leaf=7, max_features=sqrt, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=3, min_samples_leaf=7, max_features=sqrt, max_depth=10, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=3, min_samples_leaf=7, max_features=sqrt, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=3, min_samples_leaf=7, max_features=sqrt, max_depth=10, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=3, min_samples_leaf=7, max_features=sqrt, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=3, min_samples_leaf=7, max_features=sqrt, max_depth=10, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=250, min_samples_split=10, min_samples_leaf=10, max_features=0.5, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=10, min_samples_leaf=10, max_features=0.5, max_depth=15, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=10, min_samples_leaf=10, max_features=0.5, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=10, min_samples_leaf=10, max_features=0.5, max_depth=15, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=10, min_samples_leaf=10, max_features=0.5, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=10, min_samples_leaf=10, max_features=0.5, max_depth=15, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=10, min_samples_leaf=10, max_features=0.5, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=10, min_samples_leaf=10, max_features=0.5, max_depth=15, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=10, min_samples_leaf=10, max_features=0.5, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=10, min_samples_leaf=10, max_features=0.5, max_depth=15, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=950, min_samples_split=17, min_samples_leaf=5, max_features=sqrt, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=17, min_samples_leaf=5, max_features=sqrt, max_depth=None, bootstrap=True, total=   1.1s\n",
            "[CV] n_estimators=950, min_samples_split=17, min_samples_leaf=5, max_features=sqrt, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=17, min_samples_leaf=5, max_features=sqrt, max_depth=None, bootstrap=True, total=   1.1s\n",
            "[CV] n_estimators=950, min_samples_split=17, min_samples_leaf=5, max_features=sqrt, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=17, min_samples_leaf=5, max_features=sqrt, max_depth=None, bootstrap=True, total=   1.1s\n",
            "[CV] n_estimators=950, min_samples_split=17, min_samples_leaf=5, max_features=sqrt, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=17, min_samples_leaf=5, max_features=sqrt, max_depth=None, bootstrap=True, total=   1.1s\n",
            "[CV] n_estimators=950, min_samples_split=17, min_samples_leaf=5, max_features=sqrt, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=17, min_samples_leaf=5, max_features=sqrt, max_depth=None, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=450, min_samples_split=8, min_samples_leaf=2, max_features=log2, max_depth=25, bootstrap=True \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=450, min_samples_split=8, min_samples_leaf=2, max_features=log2, max_depth=25, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=8, min_samples_leaf=2, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=8, min_samples_leaf=2, max_features=log2, max_depth=25, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=8, min_samples_leaf=2, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=8, min_samples_leaf=2, max_features=log2, max_depth=25, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=8, min_samples_leaf=2, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=8, min_samples_leaf=2, max_features=log2, max_depth=25, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=8, min_samples_leaf=2, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=8, min_samples_leaf=2, max_features=log2, max_depth=25, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=300, min_samples_split=10, min_samples_leaf=8, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=10, min_samples_leaf=8, max_features=log2, max_depth=3, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=10, min_samples_leaf=8, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=10, min_samples_leaf=8, max_features=log2, max_depth=3, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=10, min_samples_leaf=8, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=10, min_samples_leaf=8, max_features=log2, max_depth=3, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=10, min_samples_leaf=8, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=10, min_samples_leaf=8, max_features=log2, max_depth=3, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=10, min_samples_leaf=8, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=10, min_samples_leaf=8, max_features=log2, max_depth=3, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=150, min_samples_split=6, min_samples_leaf=4, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=150, min_samples_split=6, min_samples_leaf=4, max_features=log2, max_depth=10, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=150, min_samples_split=6, min_samples_leaf=4, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=150, min_samples_split=6, min_samples_leaf=4, max_features=log2, max_depth=10, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=150, min_samples_split=6, min_samples_leaf=4, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=150, min_samples_split=6, min_samples_leaf=4, max_features=log2, max_depth=10, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=150, min_samples_split=6, min_samples_leaf=4, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=150, min_samples_split=6, min_samples_leaf=4, max_features=log2, max_depth=10, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=150, min_samples_split=6, min_samples_leaf=4, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=150, min_samples_split=6, min_samples_leaf=4, max_features=log2, max_depth=10, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=650, min_samples_split=4, min_samples_leaf=7, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=4, min_samples_leaf=7, max_features=log2, max_depth=None, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=650, min_samples_split=4, min_samples_leaf=7, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=4, min_samples_leaf=7, max_features=log2, max_depth=None, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=650, min_samples_split=4, min_samples_leaf=7, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=4, min_samples_leaf=7, max_features=log2, max_depth=None, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=650, min_samples_split=4, min_samples_leaf=7, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=4, min_samples_leaf=7, max_features=log2, max_depth=None, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=650, min_samples_split=4, min_samples_leaf=7, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=4, min_samples_leaf=7, max_features=log2, max_depth=None, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=400, min_samples_split=12, min_samples_leaf=3, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=12, min_samples_leaf=3, max_features=log2, max_depth=None, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=12, min_samples_leaf=3, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=12, min_samples_leaf=3, max_features=log2, max_depth=None, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=12, min_samples_leaf=3, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=12, min_samples_leaf=3, max_features=log2, max_depth=None, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=400, min_samples_split=12, min_samples_leaf=3, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=12, min_samples_leaf=3, max_features=log2, max_depth=None, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=12, min_samples_leaf=3, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=12, min_samples_leaf=3, max_features=log2, max_depth=None, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=250, min_samples_split=12, min_samples_leaf=1, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=12, min_samples_leaf=1, max_features=log2, max_depth=3, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=12, min_samples_leaf=1, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=12, min_samples_leaf=1, max_features=log2, max_depth=3, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=12, min_samples_leaf=1, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=12, min_samples_leaf=1, max_features=log2, max_depth=3, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=12, min_samples_leaf=1, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=12, min_samples_leaf=1, max_features=log2, max_depth=3, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=12, min_samples_leaf=1, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=12, min_samples_leaf=1, max_features=log2, max_depth=3, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=100, min_samples_split=16, min_samples_leaf=5, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=16, min_samples_leaf=5, max_features=0.5, max_depth=5, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=16, min_samples_leaf=5, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=16, min_samples_leaf=5, max_features=0.5, max_depth=5, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=16, min_samples_leaf=5, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=16, min_samples_leaf=5, max_features=0.5, max_depth=5, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=16, min_samples_leaf=5, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=16, min_samples_leaf=5, max_features=0.5, max_depth=5, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=16, min_samples_leaf=5, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=16, min_samples_leaf=5, max_features=0.5, max_depth=5, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=600, min_samples_split=7, min_samples_leaf=2, max_features=log2, max_depth=3, bootstrap=False \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=600, min_samples_split=7, min_samples_leaf=2, max_features=log2, max_depth=3, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=600, min_samples_split=7, min_samples_leaf=2, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=7, min_samples_leaf=2, max_features=log2, max_depth=3, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=600, min_samples_split=7, min_samples_leaf=2, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=7, min_samples_leaf=2, max_features=log2, max_depth=3, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=600, min_samples_split=7, min_samples_leaf=2, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=7, min_samples_leaf=2, max_features=log2, max_depth=3, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=600, min_samples_split=7, min_samples_leaf=2, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=7, min_samples_leaf=2, max_features=log2, max_depth=3, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=350, min_samples_split=2, min_samples_leaf=6, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=2, min_samples_leaf=6, max_features=log2, max_depth=5, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=2, min_samples_leaf=6, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=2, min_samples_leaf=6, max_features=log2, max_depth=5, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=2, min_samples_leaf=6, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=2, min_samples_leaf=6, max_features=log2, max_depth=5, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=2, min_samples_leaf=6, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=2, min_samples_leaf=6, max_features=log2, max_depth=5, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=2, min_samples_leaf=6, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=2, min_samples_leaf=6, max_features=log2, max_depth=5, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=3, min_samples_leaf=7, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=3, min_samples_leaf=7, max_features=log2, max_depth=None, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=3, min_samples_leaf=7, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=3, min_samples_leaf=7, max_features=log2, max_depth=None, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=3, min_samples_leaf=7, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=3, min_samples_leaf=7, max_features=log2, max_depth=None, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=3, min_samples_leaf=7, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=3, min_samples_leaf=7, max_features=log2, max_depth=None, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=3, min_samples_leaf=7, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=3, min_samples_leaf=7, max_features=log2, max_depth=None, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=600, min_samples_split=16, min_samples_leaf=4, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=16, min_samples_leaf=4, max_features=1, max_depth=25, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=16, min_samples_leaf=4, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=16, min_samples_leaf=4, max_features=1, max_depth=25, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=16, min_samples_leaf=4, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=16, min_samples_leaf=4, max_features=1, max_depth=25, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=16, min_samples_leaf=4, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=16, min_samples_leaf=4, max_features=1, max_depth=25, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=16, min_samples_leaf=4, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=16, min_samples_leaf=4, max_features=1, max_depth=25, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=950, min_samples_split=4, min_samples_leaf=3, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=4, min_samples_leaf=3, max_features=1, max_depth=15, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=950, min_samples_split=4, min_samples_leaf=3, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=4, min_samples_leaf=3, max_features=1, max_depth=15, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=950, min_samples_split=4, min_samples_leaf=3, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=4, min_samples_leaf=3, max_features=1, max_depth=15, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=950, min_samples_split=4, min_samples_leaf=3, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=4, min_samples_leaf=3, max_features=1, max_depth=15, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=950, min_samples_split=4, min_samples_leaf=3, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=4, min_samples_leaf=3, max_features=1, max_depth=15, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=150, min_samples_split=11, min_samples_leaf=7, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=11, min_samples_leaf=7, max_features=0.5, max_depth=15, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=150, min_samples_split=11, min_samples_leaf=7, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=11, min_samples_leaf=7, max_features=0.5, max_depth=15, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=150, min_samples_split=11, min_samples_leaf=7, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=11, min_samples_leaf=7, max_features=0.5, max_depth=15, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=150, min_samples_split=11, min_samples_leaf=7, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=11, min_samples_leaf=7, max_features=0.5, max_depth=15, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=150, min_samples_split=11, min_samples_leaf=7, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=11, min_samples_leaf=7, max_features=0.5, max_depth=15, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=700, min_samples_split=3, min_samples_leaf=5, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=3, min_samples_leaf=5, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=700, min_samples_split=3, min_samples_leaf=5, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=3, min_samples_leaf=5, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=700, min_samples_split=3, min_samples_leaf=5, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=3, min_samples_leaf=5, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=700, min_samples_split=3, min_samples_leaf=5, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=3, min_samples_leaf=5, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=700, min_samples_split=3, min_samples_leaf=5, max_features=sqrt, max_depth=25, bootstrap=False \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=700, min_samples_split=3, min_samples_leaf=5, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=300, min_samples_split=17, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=17, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=17, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=17, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=17, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=17, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=17, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=17, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=17, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=17, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=600, min_samples_split=9, min_samples_leaf=4, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=9, min_samples_leaf=4, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=600, min_samples_split=9, min_samples_leaf=4, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=9, min_samples_leaf=4, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=600, min_samples_split=9, min_samples_leaf=4, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=9, min_samples_leaf=4, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=600, min_samples_split=9, min_samples_leaf=4, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=9, min_samples_leaf=4, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=600, min_samples_split=9, min_samples_leaf=4, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=9, min_samples_leaf=4, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=850, min_samples_split=3, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=3, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=850, min_samples_split=3, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=3, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=850, min_samples_split=3, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=3, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=850, min_samples_split=3, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=3, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=850, min_samples_split=3, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=3, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=900, min_samples_split=18, min_samples_leaf=1, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=18, min_samples_leaf=1, max_features=1, max_depth=25, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=900, min_samples_split=18, min_samples_leaf=1, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=18, min_samples_leaf=1, max_features=1, max_depth=25, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=900, min_samples_split=18, min_samples_leaf=1, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=18, min_samples_leaf=1, max_features=1, max_depth=25, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=900, min_samples_split=18, min_samples_leaf=1, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=18, min_samples_leaf=1, max_features=1, max_depth=25, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=900, min_samples_split=18, min_samples_leaf=1, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=18, min_samples_leaf=1, max_features=1, max_depth=25, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=900, min_samples_split=13, min_samples_leaf=2, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=13, min_samples_leaf=2, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=900, min_samples_split=13, min_samples_leaf=2, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=13, min_samples_leaf=2, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=900, min_samples_split=13, min_samples_leaf=2, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=13, min_samples_leaf=2, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=900, min_samples_split=13, min_samples_leaf=2, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=13, min_samples_leaf=2, max_features=sqrt, max_depth=10, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=900, min_samples_split=13, min_samples_leaf=2, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=13, min_samples_leaf=2, max_features=sqrt, max_depth=10, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=600, min_samples_split=2, min_samples_leaf=8, max_features=log2, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=2, min_samples_leaf=8, max_features=log2, max_depth=10, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=2, min_samples_leaf=8, max_features=log2, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=2, min_samples_leaf=8, max_features=log2, max_depth=10, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=2, min_samples_leaf=8, max_features=log2, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=2, min_samples_leaf=8, max_features=log2, max_depth=10, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=2, min_samples_leaf=8, max_features=log2, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=2, min_samples_leaf=8, max_features=log2, max_depth=10, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=2, min_samples_leaf=8, max_features=log2, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=2, min_samples_leaf=8, max_features=log2, max_depth=10, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=250, min_samples_split=11, min_samples_leaf=2, max_features=0.5, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=11, min_samples_leaf=2, max_features=0.5, max_depth=None, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=11, min_samples_leaf=2, max_features=0.5, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=11, min_samples_leaf=2, max_features=0.5, max_depth=None, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=11, min_samples_leaf=2, max_features=0.5, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=11, min_samples_leaf=2, max_features=0.5, max_depth=None, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=250, min_samples_split=11, min_samples_leaf=2, max_features=0.5, max_depth=None, bootstrap=False \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=250, min_samples_split=11, min_samples_leaf=2, max_features=0.5, max_depth=None, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=11, min_samples_leaf=2, max_features=0.5, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=11, min_samples_leaf=2, max_features=0.5, max_depth=None, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=450, min_samples_split=15, min_samples_leaf=7, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=15, min_samples_leaf=7, max_features=0.5, max_depth=5, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=15, min_samples_leaf=7, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=15, min_samples_leaf=7, max_features=0.5, max_depth=5, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=15, min_samples_leaf=7, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=15, min_samples_leaf=7, max_features=0.5, max_depth=5, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=15, min_samples_leaf=7, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=15, min_samples_leaf=7, max_features=0.5, max_depth=5, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=15, min_samples_leaf=7, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=15, min_samples_leaf=7, max_features=0.5, max_depth=5, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=150, min_samples_split=9, min_samples_leaf=9, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=9, min_samples_leaf=9, max_features=0.5, max_depth=None, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=150, min_samples_split=9, min_samples_leaf=9, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=9, min_samples_leaf=9, max_features=0.5, max_depth=None, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=150, min_samples_split=9, min_samples_leaf=9, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=9, min_samples_leaf=9, max_features=0.5, max_depth=None, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=150, min_samples_split=9, min_samples_leaf=9, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=9, min_samples_leaf=9, max_features=0.5, max_depth=None, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=150, min_samples_split=9, min_samples_leaf=9, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=9, min_samples_leaf=9, max_features=0.5, max_depth=None, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=500, min_samples_split=5, min_samples_leaf=6, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=5, min_samples_leaf=6, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=500, min_samples_split=5, min_samples_leaf=6, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=5, min_samples_leaf=6, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=5, min_samples_leaf=6, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=5, min_samples_leaf=6, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=5, min_samples_leaf=6, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=5, min_samples_leaf=6, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=500, min_samples_split=5, min_samples_leaf=6, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=5, min_samples_leaf=6, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=100, min_samples_split=7, min_samples_leaf=2, max_features=1, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=7, min_samples_leaf=2, max_features=1, max_depth=10, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=7, min_samples_leaf=2, max_features=1, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=7, min_samples_leaf=2, max_features=1, max_depth=10, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=7, min_samples_leaf=2, max_features=1, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=7, min_samples_leaf=2, max_features=1, max_depth=10, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=7, min_samples_leaf=2, max_features=1, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=7, min_samples_leaf=2, max_features=1, max_depth=10, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=7, min_samples_leaf=2, max_features=1, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=7, min_samples_leaf=2, max_features=1, max_depth=10, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=550, min_samples_split=14, min_samples_leaf=5, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=14, min_samples_leaf=5, max_features=0.5, max_depth=3, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=550, min_samples_split=14, min_samples_leaf=5, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=14, min_samples_leaf=5, max_features=0.5, max_depth=3, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=550, min_samples_split=14, min_samples_leaf=5, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=14, min_samples_leaf=5, max_features=0.5, max_depth=3, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=550, min_samples_split=14, min_samples_leaf=5, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=14, min_samples_leaf=5, max_features=0.5, max_depth=3, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=550, min_samples_split=14, min_samples_leaf=5, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=14, min_samples_leaf=5, max_features=0.5, max_depth=3, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=550, min_samples_split=11, min_samples_leaf=3, max_features=log2, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=11, min_samples_leaf=3, max_features=log2, max_depth=25, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=550, min_samples_split=11, min_samples_leaf=3, max_features=log2, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=11, min_samples_leaf=3, max_features=log2, max_depth=25, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=550, min_samples_split=11, min_samples_leaf=3, max_features=log2, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=11, min_samples_leaf=3, max_features=log2, max_depth=25, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=550, min_samples_split=11, min_samples_leaf=3, max_features=log2, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=11, min_samples_leaf=3, max_features=log2, max_depth=25, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=550, min_samples_split=11, min_samples_leaf=3, max_features=log2, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=11, min_samples_leaf=3, max_features=log2, max_depth=25, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=650, min_samples_split=11, min_samples_leaf=10, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=11, min_samples_leaf=10, max_features=log2, max_depth=10, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=650, min_samples_split=11, min_samples_leaf=10, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=11, min_samples_leaf=10, max_features=log2, max_depth=10, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=650, min_samples_split=11, min_samples_leaf=10, max_features=log2, max_depth=10, bootstrap=False \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=650, min_samples_split=11, min_samples_leaf=10, max_features=log2, max_depth=10, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=650, min_samples_split=11, min_samples_leaf=10, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=11, min_samples_leaf=10, max_features=log2, max_depth=10, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=650, min_samples_split=11, min_samples_leaf=10, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=11, min_samples_leaf=10, max_features=log2, max_depth=10, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=100, min_samples_split=8, min_samples_leaf=5, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=8, min_samples_leaf=5, max_features=0.5, max_depth=3, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=8, min_samples_leaf=5, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=8, min_samples_leaf=5, max_features=0.5, max_depth=3, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=8, min_samples_leaf=5, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=8, min_samples_leaf=5, max_features=0.5, max_depth=3, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=8, min_samples_leaf=5, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=8, min_samples_leaf=5, max_features=0.5, max_depth=3, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=8, min_samples_leaf=5, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=8, min_samples_leaf=5, max_features=0.5, max_depth=3, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=250, min_samples_split=18, min_samples_leaf=3, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=18, min_samples_leaf=3, max_features=0.5, max_depth=3, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=18, min_samples_leaf=3, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=18, min_samples_leaf=3, max_features=0.5, max_depth=3, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=18, min_samples_leaf=3, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=18, min_samples_leaf=3, max_features=0.5, max_depth=3, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=18, min_samples_leaf=3, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=18, min_samples_leaf=3, max_features=0.5, max_depth=3, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=18, min_samples_leaf=3, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=18, min_samples_leaf=3, max_features=0.5, max_depth=3, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=350, min_samples_split=14, min_samples_leaf=4, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=350, min_samples_split=14, min_samples_leaf=4, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=350, min_samples_split=14, min_samples_leaf=4, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=350, min_samples_split=14, min_samples_leaf=4, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=350, min_samples_split=14, min_samples_leaf=4, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=350, min_samples_split=14, min_samples_leaf=4, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=350, min_samples_split=14, min_samples_leaf=4, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=350, min_samples_split=14, min_samples_leaf=4, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=350, min_samples_split=14, min_samples_leaf=4, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=350, min_samples_split=14, min_samples_leaf=4, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=900, min_samples_split=15, min_samples_leaf=3, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=15, min_samples_leaf=3, max_features=sqrt, max_depth=25, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=900, min_samples_split=15, min_samples_leaf=3, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=15, min_samples_leaf=3, max_features=sqrt, max_depth=25, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=900, min_samples_split=15, min_samples_leaf=3, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=15, min_samples_leaf=3, max_features=sqrt, max_depth=25, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=900, min_samples_split=15, min_samples_leaf=3, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=15, min_samples_leaf=3, max_features=sqrt, max_depth=25, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=900, min_samples_split=15, min_samples_leaf=3, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=15, min_samples_leaf=3, max_features=sqrt, max_depth=25, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=100, min_samples_split=16, min_samples_leaf=6, max_features=sqrt, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=16, min_samples_leaf=6, max_features=sqrt, max_depth=10, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=16, min_samples_leaf=6, max_features=sqrt, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=16, min_samples_leaf=6, max_features=sqrt, max_depth=10, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=16, min_samples_leaf=6, max_features=sqrt, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=16, min_samples_leaf=6, max_features=sqrt, max_depth=10, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=16, min_samples_leaf=6, max_features=sqrt, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=16, min_samples_leaf=6, max_features=sqrt, max_depth=10, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=16, min_samples_leaf=6, max_features=sqrt, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=16, min_samples_leaf=6, max_features=sqrt, max_depth=10, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=350, min_samples_split=13, min_samples_leaf=5, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=13, min_samples_leaf=5, max_features=0.5, max_depth=25, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=350, min_samples_split=13, min_samples_leaf=5, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=13, min_samples_leaf=5, max_features=0.5, max_depth=25, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=350, min_samples_split=13, min_samples_leaf=5, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=13, min_samples_leaf=5, max_features=0.5, max_depth=25, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=350, min_samples_split=13, min_samples_leaf=5, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=13, min_samples_leaf=5, max_features=0.5, max_depth=25, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=350, min_samples_split=13, min_samples_leaf=5, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=13, min_samples_leaf=5, max_features=0.5, max_depth=25, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=250, min_samples_split=10, min_samples_leaf=8, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=10, min_samples_leaf=8, max_features=1, max_depth=5, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=10, min_samples_leaf=8, max_features=1, max_depth=5, bootstrap=True \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=250, min_samples_split=10, min_samples_leaf=8, max_features=1, max_depth=5, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=10, min_samples_leaf=8, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=10, min_samples_leaf=8, max_features=1, max_depth=5, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=10, min_samples_leaf=8, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=10, min_samples_leaf=8, max_features=1, max_depth=5, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=10, min_samples_leaf=8, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=10, min_samples_leaf=8, max_features=1, max_depth=5, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=400, min_samples_split=3, min_samples_leaf=8, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=3, min_samples_leaf=8, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=3, min_samples_leaf=8, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=3, min_samples_leaf=8, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=3, min_samples_leaf=8, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=3, min_samples_leaf=8, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=3, min_samples_leaf=8, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=3, min_samples_leaf=8, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=3, min_samples_leaf=8, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=3, min_samples_leaf=8, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=750, min_samples_split=13, min_samples_leaf=8, max_features=0.5, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=750, min_samples_split=13, min_samples_leaf=8, max_features=0.5, max_depth=15, bootstrap=False, total=   0.9s\n",
            "[CV] n_estimators=750, min_samples_split=13, min_samples_leaf=8, max_features=0.5, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=750, min_samples_split=13, min_samples_leaf=8, max_features=0.5, max_depth=15, bootstrap=False, total=   0.9s\n",
            "[CV] n_estimators=750, min_samples_split=13, min_samples_leaf=8, max_features=0.5, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=750, min_samples_split=13, min_samples_leaf=8, max_features=0.5, max_depth=15, bootstrap=False, total=   0.9s\n",
            "[CV] n_estimators=750, min_samples_split=13, min_samples_leaf=8, max_features=0.5, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=750, min_samples_split=13, min_samples_leaf=8, max_features=0.5, max_depth=15, bootstrap=False, total=   0.9s\n",
            "[CV] n_estimators=750, min_samples_split=13, min_samples_leaf=8, max_features=0.5, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=750, min_samples_split=13, min_samples_leaf=8, max_features=0.5, max_depth=15, bootstrap=False, total=   0.9s\n",
            "[CV] n_estimators=700, min_samples_split=7, min_samples_leaf=6, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=700, min_samples_split=7, min_samples_leaf=6, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=700, min_samples_split=7, min_samples_leaf=6, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=700, min_samples_split=7, min_samples_leaf=6, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=700, min_samples_split=7, min_samples_leaf=6, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=700, min_samples_split=7, min_samples_leaf=6, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=700, min_samples_split=7, min_samples_leaf=6, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=700, min_samples_split=7, min_samples_leaf=6, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=700, min_samples_split=7, min_samples_leaf=6, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=700, min_samples_split=7, min_samples_leaf=6, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=450, min_samples_split=7, min_samples_leaf=1, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=7, min_samples_leaf=1, max_features=1, max_depth=5, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=450, min_samples_split=7, min_samples_leaf=1, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=7, min_samples_leaf=1, max_features=1, max_depth=5, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=450, min_samples_split=7, min_samples_leaf=1, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=7, min_samples_leaf=1, max_features=1, max_depth=5, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=7, min_samples_leaf=1, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=7, min_samples_leaf=1, max_features=1, max_depth=5, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=7, min_samples_leaf=1, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=7, min_samples_leaf=1, max_features=1, max_depth=5, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=650, min_samples_split=11, min_samples_leaf=6, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=11, min_samples_leaf=6, max_features=0.5, max_depth=25, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=650, min_samples_split=11, min_samples_leaf=6, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=11, min_samples_leaf=6, max_features=0.5, max_depth=25, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=650, min_samples_split=11, min_samples_leaf=6, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=11, min_samples_leaf=6, max_features=0.5, max_depth=25, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=650, min_samples_split=11, min_samples_leaf=6, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=11, min_samples_leaf=6, max_features=0.5, max_depth=25, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=650, min_samples_split=11, min_samples_leaf=6, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=11, min_samples_leaf=6, max_features=0.5, max_depth=25, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=600, min_samples_split=2, min_samples_leaf=10, max_features=log2, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=2, min_samples_leaf=10, max_features=log2, max_depth=15, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=2, min_samples_leaf=10, max_features=log2, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=2, min_samples_leaf=10, max_features=log2, max_depth=15, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=2, min_samples_leaf=10, max_features=log2, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=2, min_samples_leaf=10, max_features=log2, max_depth=15, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=2, min_samples_leaf=10, max_features=log2, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=2, min_samples_leaf=10, max_features=log2, max_depth=15, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=2, min_samples_leaf=10, max_features=log2, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=2, min_samples_leaf=10, max_features=log2, max_depth=15, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=750, min_samples_split=9, min_samples_leaf=5, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=9, min_samples_leaf=5, max_features=0.5, max_depth=None, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=750, min_samples_split=9, min_samples_leaf=5, max_features=0.5, max_depth=None, bootstrap=True \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=750, min_samples_split=9, min_samples_leaf=5, max_features=0.5, max_depth=None, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=750, min_samples_split=9, min_samples_leaf=5, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=9, min_samples_leaf=5, max_features=0.5, max_depth=None, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=750, min_samples_split=9, min_samples_leaf=5, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=9, min_samples_leaf=5, max_features=0.5, max_depth=None, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=750, min_samples_split=9, min_samples_leaf=5, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=9, min_samples_leaf=5, max_features=0.5, max_depth=None, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=450, min_samples_split=19, min_samples_leaf=2, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=19, min_samples_leaf=2, max_features=0.5, max_depth=3, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=450, min_samples_split=19, min_samples_leaf=2, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=19, min_samples_leaf=2, max_features=0.5, max_depth=3, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=450, min_samples_split=19, min_samples_leaf=2, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=19, min_samples_leaf=2, max_features=0.5, max_depth=3, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=450, min_samples_split=19, min_samples_leaf=2, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=19, min_samples_leaf=2, max_features=0.5, max_depth=3, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=450, min_samples_split=19, min_samples_leaf=2, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=19, min_samples_leaf=2, max_features=0.5, max_depth=3, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=300, min_samples_split=6, min_samples_leaf=1, max_features=log2, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=6, min_samples_leaf=1, max_features=log2, max_depth=15, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=6, min_samples_leaf=1, max_features=log2, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=6, min_samples_leaf=1, max_features=log2, max_depth=15, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=6, min_samples_leaf=1, max_features=log2, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=6, min_samples_leaf=1, max_features=log2, max_depth=15, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=6, min_samples_leaf=1, max_features=log2, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=6, min_samples_leaf=1, max_features=log2, max_depth=15, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=6, min_samples_leaf=1, max_features=log2, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=6, min_samples_leaf=1, max_features=log2, max_depth=15, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=6, min_samples_leaf=7, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=6, min_samples_leaf=7, max_features=0.5, max_depth=25, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=6, min_samples_leaf=7, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=6, min_samples_leaf=7, max_features=0.5, max_depth=25, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=6, min_samples_leaf=7, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=6, min_samples_leaf=7, max_features=0.5, max_depth=25, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=6, min_samples_leaf=7, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=6, min_samples_leaf=7, max_features=0.5, max_depth=25, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=6, min_samples_leaf=7, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=6, min_samples_leaf=7, max_features=0.5, max_depth=25, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=950, min_samples_split=13, min_samples_leaf=9, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=13, min_samples_leaf=9, max_features=1, max_depth=None, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=950, min_samples_split=13, min_samples_leaf=9, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=13, min_samples_leaf=9, max_features=1, max_depth=None, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=950, min_samples_split=13, min_samples_leaf=9, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=13, min_samples_leaf=9, max_features=1, max_depth=None, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=950, min_samples_split=13, min_samples_leaf=9, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=13, min_samples_leaf=9, max_features=1, max_depth=None, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=950, min_samples_split=13, min_samples_leaf=9, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=13, min_samples_leaf=9, max_features=1, max_depth=None, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=850, min_samples_split=17, min_samples_leaf=8, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=850, min_samples_split=17, min_samples_leaf=8, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=850, min_samples_split=17, min_samples_leaf=8, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=850, min_samples_split=17, min_samples_leaf=8, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=850, min_samples_split=17, min_samples_leaf=8, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=850, min_samples_split=17, min_samples_leaf=8, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=850, min_samples_split=17, min_samples_leaf=8, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=850, min_samples_split=17, min_samples_leaf=8, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=850, min_samples_split=17, min_samples_leaf=8, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=850, min_samples_split=17, min_samples_leaf=8, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=950, min_samples_split=13, min_samples_leaf=8, max_features=log2, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=13, min_samples_leaf=8, max_features=log2, max_depth=15, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=950, min_samples_split=13, min_samples_leaf=8, max_features=log2, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=13, min_samples_leaf=8, max_features=log2, max_depth=15, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=950, min_samples_split=13, min_samples_leaf=8, max_features=log2, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=13, min_samples_leaf=8, max_features=log2, max_depth=15, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=950, min_samples_split=13, min_samples_leaf=8, max_features=log2, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=13, min_samples_leaf=8, max_features=log2, max_depth=15, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=950, min_samples_split=13, min_samples_leaf=8, max_features=log2, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=13, min_samples_leaf=8, max_features=log2, max_depth=15, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=650, min_samples_split=3, min_samples_leaf=3, max_features=log2, max_depth=10, bootstrap=False \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=650, min_samples_split=3, min_samples_leaf=3, max_features=log2, max_depth=10, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=650, min_samples_split=3, min_samples_leaf=3, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=3, min_samples_leaf=3, max_features=log2, max_depth=10, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=650, min_samples_split=3, min_samples_leaf=3, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=3, min_samples_leaf=3, max_features=log2, max_depth=10, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=650, min_samples_split=3, min_samples_leaf=3, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=3, min_samples_leaf=3, max_features=log2, max_depth=10, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=650, min_samples_split=3, min_samples_leaf=3, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=3, min_samples_leaf=3, max_features=log2, max_depth=10, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=400, min_samples_split=5, min_samples_leaf=8, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=5, min_samples_leaf=8, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=400, min_samples_split=5, min_samples_leaf=8, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=5, min_samples_leaf=8, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=5, min_samples_leaf=8, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=5, min_samples_leaf=8, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=5, min_samples_leaf=8, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=5, min_samples_leaf=8, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=5, min_samples_leaf=8, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=5, min_samples_leaf=8, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=450, min_samples_split=5, min_samples_leaf=8, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=5, min_samples_leaf=8, max_features=log2, max_depth=25, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=450, min_samples_split=5, min_samples_leaf=8, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=5, min_samples_leaf=8, max_features=log2, max_depth=25, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=5, min_samples_leaf=8, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=5, min_samples_leaf=8, max_features=log2, max_depth=25, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=450, min_samples_split=5, min_samples_leaf=8, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=5, min_samples_leaf=8, max_features=log2, max_depth=25, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=450, min_samples_split=5, min_samples_leaf=8, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=5, min_samples_leaf=8, max_features=log2, max_depth=25, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=350, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=350, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=None, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=350, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=350, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=None, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=350, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=350, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=None, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=350, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=350, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=None, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=350, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=None, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=150, min_samples_split=14, min_samples_leaf=5, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=14, min_samples_leaf=5, max_features=log2, max_depth=3, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=150, min_samples_split=14, min_samples_leaf=5, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=14, min_samples_leaf=5, max_features=log2, max_depth=3, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=150, min_samples_split=14, min_samples_leaf=5, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=14, min_samples_leaf=5, max_features=log2, max_depth=3, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=150, min_samples_split=14, min_samples_leaf=5, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=14, min_samples_leaf=5, max_features=log2, max_depth=3, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=150, min_samples_split=14, min_samples_leaf=5, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=14, min_samples_leaf=5, max_features=log2, max_depth=3, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=19, min_samples_leaf=4, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=19, min_samples_leaf=4, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=19, min_samples_leaf=4, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=19, min_samples_leaf=4, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=19, min_samples_leaf=4, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=19, min_samples_leaf=4, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=19, min_samples_leaf=4, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=19, min_samples_leaf=4, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=19, min_samples_leaf=4, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=19, min_samples_leaf=4, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=650, min_samples_split=11, min_samples_leaf=10, max_features=0.5, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=11, min_samples_leaf=10, max_features=0.5, max_depth=25, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=650, min_samples_split=11, min_samples_leaf=10, max_features=0.5, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=11, min_samples_leaf=10, max_features=0.5, max_depth=25, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=650, min_samples_split=11, min_samples_leaf=10, max_features=0.5, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=11, min_samples_leaf=10, max_features=0.5, max_depth=25, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=650, min_samples_split=11, min_samples_leaf=10, max_features=0.5, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=11, min_samples_leaf=10, max_features=0.5, max_depth=25, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=650, min_samples_split=11, min_samples_leaf=10, max_features=0.5, max_depth=25, bootstrap=True \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=650, min_samples_split=11, min_samples_leaf=10, max_features=0.5, max_depth=25, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=250, min_samples_split=3, min_samples_leaf=9, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=3, min_samples_leaf=9, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=3, min_samples_leaf=9, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=3, min_samples_leaf=9, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=3, min_samples_leaf=9, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=3, min_samples_leaf=9, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=3, min_samples_leaf=9, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=3, min_samples_leaf=9, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=3, min_samples_leaf=9, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=3, min_samples_leaf=9, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=700, min_samples_split=3, min_samples_leaf=7, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=3, min_samples_leaf=7, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=700, min_samples_split=3, min_samples_leaf=7, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=3, min_samples_leaf=7, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=700, min_samples_split=3, min_samples_leaf=7, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=3, min_samples_leaf=7, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=700, min_samples_split=3, min_samples_leaf=7, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=3, min_samples_leaf=7, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=700, min_samples_split=3, min_samples_leaf=7, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=3, min_samples_leaf=7, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=200, min_samples_split=15, min_samples_leaf=7, max_features=sqrt, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=15, min_samples_leaf=7, max_features=sqrt, max_depth=3, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=15, min_samples_leaf=7, max_features=sqrt, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=15, min_samples_leaf=7, max_features=sqrt, max_depth=3, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=15, min_samples_leaf=7, max_features=sqrt, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=15, min_samples_leaf=7, max_features=sqrt, max_depth=3, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=15, min_samples_leaf=7, max_features=sqrt, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=15, min_samples_leaf=7, max_features=sqrt, max_depth=3, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=15, min_samples_leaf=7, max_features=sqrt, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=15, min_samples_leaf=7, max_features=sqrt, max_depth=3, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=350, min_samples_split=19, min_samples_leaf=10, max_features=log2, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=19, min_samples_leaf=10, max_features=log2, max_depth=25, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=19, min_samples_leaf=10, max_features=log2, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=19, min_samples_leaf=10, max_features=log2, max_depth=25, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=19, min_samples_leaf=10, max_features=log2, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=19, min_samples_leaf=10, max_features=log2, max_depth=25, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=19, min_samples_leaf=10, max_features=log2, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=19, min_samples_leaf=10, max_features=log2, max_depth=25, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=19, min_samples_leaf=10, max_features=log2, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=19, min_samples_leaf=10, max_features=log2, max_depth=25, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=4, min_samples_leaf=10, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=4, min_samples_leaf=10, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=4, min_samples_leaf=10, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=4, min_samples_leaf=10, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=4, min_samples_leaf=10, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=4, min_samples_leaf=10, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=4, min_samples_leaf=10, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=4, min_samples_leaf=10, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=4, min_samples_leaf=10, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=4, min_samples_leaf=10, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=200, min_samples_split=8, min_samples_leaf=10, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=8, min_samples_leaf=10, max_features=log2, max_depth=None, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=8, min_samples_leaf=10, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=8, min_samples_leaf=10, max_features=log2, max_depth=None, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=8, min_samples_leaf=10, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=8, min_samples_leaf=10, max_features=log2, max_depth=None, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=8, min_samples_leaf=10, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=8, min_samples_leaf=10, max_features=log2, max_depth=None, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=8, min_samples_leaf=10, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=8, min_samples_leaf=10, max_features=log2, max_depth=None, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=14, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=14, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=14, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=14, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=14, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=14, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=14, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=False \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=250, min_samples_split=14, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=14, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=14, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=18, min_samples_leaf=1, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=18, min_samples_leaf=1, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=18, min_samples_leaf=1, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=18, min_samples_leaf=1, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=18, min_samples_leaf=1, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=18, min_samples_leaf=1, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=18, min_samples_leaf=1, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=18, min_samples_leaf=1, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=18, min_samples_leaf=1, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=18, min_samples_leaf=1, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=650, min_samples_split=12, min_samples_leaf=4, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=12, min_samples_leaf=4, max_features=0.5, max_depth=5, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=650, min_samples_split=12, min_samples_leaf=4, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=12, min_samples_leaf=4, max_features=0.5, max_depth=5, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=650, min_samples_split=12, min_samples_leaf=4, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=12, min_samples_leaf=4, max_features=0.5, max_depth=5, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=650, min_samples_split=12, min_samples_leaf=4, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=12, min_samples_leaf=4, max_features=0.5, max_depth=5, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=650, min_samples_split=12, min_samples_leaf=4, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=12, min_samples_leaf=4, max_features=0.5, max_depth=5, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=400, min_samples_split=3, min_samples_leaf=8, max_features=1, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=3, min_samples_leaf=8, max_features=1, max_depth=15, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=3, min_samples_leaf=8, max_features=1, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=3, min_samples_leaf=8, max_features=1, max_depth=15, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=3, min_samples_leaf=8, max_features=1, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=3, min_samples_leaf=8, max_features=1, max_depth=15, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=3, min_samples_leaf=8, max_features=1, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=3, min_samples_leaf=8, max_features=1, max_depth=15, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=3, min_samples_leaf=8, max_features=1, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=3, min_samples_leaf=8, max_features=1, max_depth=15, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=100, min_samples_split=3, min_samples_leaf=3, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=3, min_samples_leaf=3, max_features=log2, max_depth=10, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=3, min_samples_leaf=3, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=3, min_samples_leaf=3, max_features=log2, max_depth=10, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=3, min_samples_leaf=3, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=3, min_samples_leaf=3, max_features=log2, max_depth=10, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=3, min_samples_leaf=3, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=3, min_samples_leaf=3, max_features=log2, max_depth=10, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=3, min_samples_leaf=3, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=3, min_samples_leaf=3, max_features=log2, max_depth=10, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=150, min_samples_split=4, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=4, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=150, min_samples_split=4, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=4, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=150, min_samples_split=4, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=4, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=150, min_samples_split=4, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=4, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=150, min_samples_split=4, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=4, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=500, min_samples_split=11, min_samples_leaf=8, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=11, min_samples_leaf=8, max_features=1, max_depth=5, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=11, min_samples_leaf=8, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=11, min_samples_leaf=8, max_features=1, max_depth=5, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=11, min_samples_leaf=8, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=11, min_samples_leaf=8, max_features=1, max_depth=5, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=11, min_samples_leaf=8, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=11, min_samples_leaf=8, max_features=1, max_depth=5, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=11, min_samples_leaf=8, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=11, min_samples_leaf=8, max_features=1, max_depth=5, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=600, min_samples_split=8, min_samples_leaf=8, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=8, min_samples_leaf=8, max_features=0.5, max_depth=3, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=8, min_samples_leaf=8, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=8, min_samples_leaf=8, max_features=0.5, max_depth=3, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=8, min_samples_leaf=8, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=8, min_samples_leaf=8, max_features=0.5, max_depth=3, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=8, min_samples_leaf=8, max_features=0.5, max_depth=3, bootstrap=False \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=600, min_samples_split=8, min_samples_leaf=8, max_features=0.5, max_depth=3, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=8, min_samples_leaf=8, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=8, min_samples_leaf=8, max_features=0.5, max_depth=3, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=12, min_samples_leaf=4, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=12, min_samples_leaf=4, max_features=0.5, max_depth=5, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=600, min_samples_split=12, min_samples_leaf=4, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=12, min_samples_leaf=4, max_features=0.5, max_depth=5, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=600, min_samples_split=12, min_samples_leaf=4, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=12, min_samples_leaf=4, max_features=0.5, max_depth=5, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=600, min_samples_split=12, min_samples_leaf=4, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=12, min_samples_leaf=4, max_features=0.5, max_depth=5, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=600, min_samples_split=12, min_samples_leaf=4, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=12, min_samples_leaf=4, max_features=0.5, max_depth=5, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=550, min_samples_split=6, min_samples_leaf=1, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=6, min_samples_leaf=1, max_features=1, max_depth=5, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=550, min_samples_split=6, min_samples_leaf=1, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=6, min_samples_leaf=1, max_features=1, max_depth=5, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=550, min_samples_split=6, min_samples_leaf=1, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=6, min_samples_leaf=1, max_features=1, max_depth=5, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=550, min_samples_split=6, min_samples_leaf=1, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=6, min_samples_leaf=1, max_features=1, max_depth=5, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=550, min_samples_split=6, min_samples_leaf=1, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=6, min_samples_leaf=1, max_features=1, max_depth=5, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=550, min_samples_split=6, min_samples_leaf=7, max_features=sqrt, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=6, min_samples_leaf=7, max_features=sqrt, max_depth=None, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=550, min_samples_split=6, min_samples_leaf=7, max_features=sqrt, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=6, min_samples_leaf=7, max_features=sqrt, max_depth=None, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=550, min_samples_split=6, min_samples_leaf=7, max_features=sqrt, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=6, min_samples_leaf=7, max_features=sqrt, max_depth=None, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=550, min_samples_split=6, min_samples_leaf=7, max_features=sqrt, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=6, min_samples_leaf=7, max_features=sqrt, max_depth=None, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=550, min_samples_split=6, min_samples_leaf=7, max_features=sqrt, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=6, min_samples_leaf=7, max_features=sqrt, max_depth=None, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=150, min_samples_split=8, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=8, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=150, min_samples_split=8, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=8, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=150, min_samples_split=8, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=8, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=150, min_samples_split=8, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=8, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=150, min_samples_split=8, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=8, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=450, min_samples_split=15, min_samples_leaf=5, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=15, min_samples_leaf=5, max_features=0.5, max_depth=25, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=15, min_samples_leaf=5, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=15, min_samples_leaf=5, max_features=0.5, max_depth=25, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=15, min_samples_leaf=5, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=15, min_samples_leaf=5, max_features=0.5, max_depth=25, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=450, min_samples_split=15, min_samples_leaf=5, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=15, min_samples_leaf=5, max_features=0.5, max_depth=25, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=15, min_samples_leaf=5, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=15, min_samples_leaf=5, max_features=0.5, max_depth=25, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=350, min_samples_split=17, min_samples_leaf=1, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=17, min_samples_leaf=1, max_features=log2, max_depth=10, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=17, min_samples_leaf=1, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=17, min_samples_leaf=1, max_features=log2, max_depth=10, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=17, min_samples_leaf=1, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=17, min_samples_leaf=1, max_features=log2, max_depth=10, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=17, min_samples_leaf=1, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=17, min_samples_leaf=1, max_features=log2, max_depth=10, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=17, min_samples_leaf=1, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=17, min_samples_leaf=1, max_features=log2, max_depth=10, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=600, min_samples_split=13, min_samples_leaf=9, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=13, min_samples_leaf=9, max_features=0.5, max_depth=25, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=600, min_samples_split=13, min_samples_leaf=9, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=13, min_samples_leaf=9, max_features=0.5, max_depth=25, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=600, min_samples_split=13, min_samples_leaf=9, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=13, min_samples_leaf=9, max_features=0.5, max_depth=25, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=600, min_samples_split=13, min_samples_leaf=9, max_features=0.5, max_depth=25, bootstrap=False \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=600, min_samples_split=13, min_samples_leaf=9, max_features=0.5, max_depth=25, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=600, min_samples_split=13, min_samples_leaf=9, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=13, min_samples_leaf=9, max_features=0.5, max_depth=25, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=800, min_samples_split=6, min_samples_leaf=6, max_features=sqrt, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=6, min_samples_leaf=6, max_features=sqrt, max_depth=None, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=800, min_samples_split=6, min_samples_leaf=6, max_features=sqrt, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=6, min_samples_leaf=6, max_features=sqrt, max_depth=None, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=800, min_samples_split=6, min_samples_leaf=6, max_features=sqrt, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=6, min_samples_leaf=6, max_features=sqrt, max_depth=None, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=800, min_samples_split=6, min_samples_leaf=6, max_features=sqrt, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=6, min_samples_leaf=6, max_features=sqrt, max_depth=None, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=800, min_samples_split=6, min_samples_leaf=6, max_features=sqrt, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=6, min_samples_leaf=6, max_features=sqrt, max_depth=None, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=200, min_samples_split=15, min_samples_leaf=5, max_features=log2, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=15, min_samples_leaf=5, max_features=log2, max_depth=15, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=15, min_samples_leaf=5, max_features=log2, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=15, min_samples_leaf=5, max_features=log2, max_depth=15, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=15, min_samples_leaf=5, max_features=log2, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=15, min_samples_leaf=5, max_features=log2, max_depth=15, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=15, min_samples_leaf=5, max_features=log2, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=15, min_samples_leaf=5, max_features=log2, max_depth=15, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=15, min_samples_leaf=5, max_features=log2, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=15, min_samples_leaf=5, max_features=log2, max_depth=15, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=600, min_samples_split=15, min_samples_leaf=2, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=15, min_samples_leaf=2, max_features=log2, max_depth=3, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=600, min_samples_split=15, min_samples_leaf=2, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=15, min_samples_leaf=2, max_features=log2, max_depth=3, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=600, min_samples_split=15, min_samples_leaf=2, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=15, min_samples_leaf=2, max_features=log2, max_depth=3, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=600, min_samples_split=15, min_samples_leaf=2, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=15, min_samples_leaf=2, max_features=log2, max_depth=3, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=600, min_samples_split=15, min_samples_leaf=2, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=15, min_samples_leaf=2, max_features=log2, max_depth=3, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=800, min_samples_split=4, min_samples_leaf=10, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=800, min_samples_split=4, min_samples_leaf=10, max_features=0.5, max_depth=10, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=800, min_samples_split=4, min_samples_leaf=10, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=800, min_samples_split=4, min_samples_leaf=10, max_features=0.5, max_depth=10, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=800, min_samples_split=4, min_samples_leaf=10, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=800, min_samples_split=4, min_samples_leaf=10, max_features=0.5, max_depth=10, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=800, min_samples_split=4, min_samples_leaf=10, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=800, min_samples_split=4, min_samples_leaf=10, max_features=0.5, max_depth=10, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=800, min_samples_split=4, min_samples_leaf=10, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=800, min_samples_split=4, min_samples_leaf=10, max_features=0.5, max_depth=10, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=500, min_samples_split=8, min_samples_leaf=5, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=8, min_samples_leaf=5, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=500, min_samples_split=8, min_samples_leaf=5, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=8, min_samples_leaf=5, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=8, min_samples_leaf=5, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=8, min_samples_leaf=5, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=500, min_samples_split=8, min_samples_leaf=5, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=8, min_samples_leaf=5, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=500, min_samples_split=8, min_samples_leaf=5, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=8, min_samples_leaf=5, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=100, min_samples_split=11, min_samples_leaf=9, max_features=1, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=11, min_samples_leaf=9, max_features=1, max_depth=25, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=11, min_samples_leaf=9, max_features=1, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=11, min_samples_leaf=9, max_features=1, max_depth=25, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=11, min_samples_leaf=9, max_features=1, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=11, min_samples_leaf=9, max_features=1, max_depth=25, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=11, min_samples_leaf=9, max_features=1, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=11, min_samples_leaf=9, max_features=1, max_depth=25, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=11, min_samples_leaf=9, max_features=1, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=100, min_samples_split=11, min_samples_leaf=9, max_features=1, max_depth=25, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=650, min_samples_split=6, min_samples_leaf=3, max_features=sqrt, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=6, min_samples_leaf=3, max_features=sqrt, max_depth=3, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=650, min_samples_split=6, min_samples_leaf=3, max_features=sqrt, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=6, min_samples_leaf=3, max_features=sqrt, max_depth=3, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=650, min_samples_split=6, min_samples_leaf=3, max_features=sqrt, max_depth=3, bootstrap=True \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=650, min_samples_split=6, min_samples_leaf=3, max_features=sqrt, max_depth=3, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=650, min_samples_split=6, min_samples_leaf=3, max_features=sqrt, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=6, min_samples_leaf=3, max_features=sqrt, max_depth=3, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=650, min_samples_split=6, min_samples_leaf=3, max_features=sqrt, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=6, min_samples_leaf=3, max_features=sqrt, max_depth=3, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=650, min_samples_split=5, min_samples_leaf=4, max_features=0.5, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=5, min_samples_leaf=4, max_features=0.5, max_depth=None, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=650, min_samples_split=5, min_samples_leaf=4, max_features=0.5, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=5, min_samples_leaf=4, max_features=0.5, max_depth=None, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=650, min_samples_split=5, min_samples_leaf=4, max_features=0.5, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=5, min_samples_leaf=4, max_features=0.5, max_depth=None, bootstrap=False, total=   1.2s\n",
            "[CV] n_estimators=650, min_samples_split=5, min_samples_leaf=4, max_features=0.5, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=5, min_samples_leaf=4, max_features=0.5, max_depth=None, bootstrap=False, total=   0.9s\n",
            "[CV] n_estimators=650, min_samples_split=5, min_samples_leaf=4, max_features=0.5, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=5, min_samples_leaf=4, max_features=0.5, max_depth=None, bootstrap=False, total=   0.9s\n",
            "[CV] n_estimators=950, min_samples_split=9, min_samples_leaf=2, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=9, min_samples_leaf=2, max_features=0.5, max_depth=15, bootstrap=True, total=   1.3s\n",
            "[CV] n_estimators=950, min_samples_split=9, min_samples_leaf=2, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=9, min_samples_leaf=2, max_features=0.5, max_depth=15, bootstrap=True, total=   1.3s\n",
            "[CV] n_estimators=950, min_samples_split=9, min_samples_leaf=2, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=9, min_samples_leaf=2, max_features=0.5, max_depth=15, bootstrap=True, total=   1.3s\n",
            "[CV] n_estimators=950, min_samples_split=9, min_samples_leaf=2, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=9, min_samples_leaf=2, max_features=0.5, max_depth=15, bootstrap=True, total=   1.2s\n",
            "[CV] n_estimators=950, min_samples_split=9, min_samples_leaf=2, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=9, min_samples_leaf=2, max_features=0.5, max_depth=15, bootstrap=True, total=   1.2s\n",
            "[CV] n_estimators=650, min_samples_split=3, min_samples_leaf=5, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=3, min_samples_leaf=5, max_features=1, max_depth=15, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=650, min_samples_split=3, min_samples_leaf=5, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=3, min_samples_leaf=5, max_features=1, max_depth=15, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=650, min_samples_split=3, min_samples_leaf=5, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=3, min_samples_leaf=5, max_features=1, max_depth=15, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=650, min_samples_split=3, min_samples_leaf=5, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=3, min_samples_leaf=5, max_features=1, max_depth=15, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=650, min_samples_split=3, min_samples_leaf=5, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=3, min_samples_leaf=5, max_features=1, max_depth=15, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=600, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=3, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=3, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=3, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=3, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=3, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=8, min_samples_leaf=4, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=8, min_samples_leaf=4, max_features=0.5, max_depth=15, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=600, min_samples_split=8, min_samples_leaf=4, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=8, min_samples_leaf=4, max_features=0.5, max_depth=15, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=600, min_samples_split=8, min_samples_leaf=4, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=8, min_samples_leaf=4, max_features=0.5, max_depth=15, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=600, min_samples_split=8, min_samples_leaf=4, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=8, min_samples_leaf=4, max_features=0.5, max_depth=15, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=600, min_samples_split=8, min_samples_leaf=4, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=8, min_samples_leaf=4, max_features=0.5, max_depth=15, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=950, min_samples_split=3, min_samples_leaf=3, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=3, min_samples_leaf=3, max_features=log2, max_depth=3, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=950, min_samples_split=3, min_samples_leaf=3, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=3, min_samples_leaf=3, max_features=log2, max_depth=3, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=950, min_samples_split=3, min_samples_leaf=3, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=3, min_samples_leaf=3, max_features=log2, max_depth=3, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=950, min_samples_split=3, min_samples_leaf=3, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=3, min_samples_leaf=3, max_features=log2, max_depth=3, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=950, min_samples_split=3, min_samples_leaf=3, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=3, min_samples_leaf=3, max_features=log2, max_depth=3, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=400, min_samples_split=5, min_samples_leaf=5, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=5, min_samples_leaf=5, max_features=log2, max_depth=5, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=5, min_samples_leaf=5, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=5, min_samples_leaf=5, max_features=log2, max_depth=5, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=5, min_samples_leaf=5, max_features=log2, max_depth=5, bootstrap=True \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=400, min_samples_split=5, min_samples_leaf=5, max_features=log2, max_depth=5, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=5, min_samples_leaf=5, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=5, min_samples_leaf=5, max_features=log2, max_depth=5, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=5, min_samples_leaf=5, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=5, min_samples_leaf=5, max_features=log2, max_depth=5, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=9, min_samples_leaf=5, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=9, min_samples_leaf=5, max_features=0.5, max_depth=15, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=400, min_samples_split=9, min_samples_leaf=5, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=9, min_samples_leaf=5, max_features=0.5, max_depth=15, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=400, min_samples_split=9, min_samples_leaf=5, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=9, min_samples_leaf=5, max_features=0.5, max_depth=15, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=400, min_samples_split=9, min_samples_leaf=5, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=9, min_samples_leaf=5, max_features=0.5, max_depth=15, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=400, min_samples_split=9, min_samples_leaf=5, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=9, min_samples_leaf=5, max_features=0.5, max_depth=15, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=750, min_samples_split=18, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=18, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=750, min_samples_split=18, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=18, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=750, min_samples_split=18, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=18, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=750, min_samples_split=18, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=18, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=750, min_samples_split=18, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=18, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=800, min_samples_split=12, min_samples_leaf=9, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=12, min_samples_leaf=9, max_features=log2, max_depth=3, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=800, min_samples_split=12, min_samples_leaf=9, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=12, min_samples_leaf=9, max_features=log2, max_depth=3, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=800, min_samples_split=12, min_samples_leaf=9, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=12, min_samples_leaf=9, max_features=log2, max_depth=3, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=800, min_samples_split=12, min_samples_leaf=9, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=12, min_samples_leaf=9, max_features=log2, max_depth=3, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=800, min_samples_split=12, min_samples_leaf=9, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=12, min_samples_leaf=9, max_features=log2, max_depth=3, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=6, min_samples_leaf=7, max_features=sqrt, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=6, min_samples_leaf=7, max_features=sqrt, max_depth=10, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=600, min_samples_split=6, min_samples_leaf=7, max_features=sqrt, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=6, min_samples_leaf=7, max_features=sqrt, max_depth=10, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=600, min_samples_split=6, min_samples_leaf=7, max_features=sqrt, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=6, min_samples_leaf=7, max_features=sqrt, max_depth=10, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=600, min_samples_split=6, min_samples_leaf=7, max_features=sqrt, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=6, min_samples_leaf=7, max_features=sqrt, max_depth=10, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=600, min_samples_split=6, min_samples_leaf=7, max_features=sqrt, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=6, min_samples_leaf=7, max_features=sqrt, max_depth=10, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=600, min_samples_split=8, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=8, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=600, min_samples_split=8, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=8, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=8, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=8, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=8, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=8, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=8, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=8, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=300, min_samples_split=10, min_samples_leaf=8, max_features=log2, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=10, min_samples_leaf=8, max_features=log2, max_depth=15, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=10, min_samples_leaf=8, max_features=log2, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=10, min_samples_leaf=8, max_features=log2, max_depth=15, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=10, min_samples_leaf=8, max_features=log2, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=10, min_samples_leaf=8, max_features=log2, max_depth=15, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=10, min_samples_leaf=8, max_features=log2, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=10, min_samples_leaf=8, max_features=log2, max_depth=15, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=10, min_samples_leaf=8, max_features=log2, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=10, min_samples_leaf=8, max_features=log2, max_depth=15, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=350, min_samples_split=14, min_samples_leaf=10, max_features=sqrt, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=350, min_samples_split=14, min_samples_leaf=10, max_features=sqrt, max_depth=None, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=350, min_samples_split=14, min_samples_leaf=10, max_features=sqrt, max_depth=None, bootstrap=True \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=350, min_samples_split=14, min_samples_leaf=10, max_features=sqrt, max_depth=None, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=14, min_samples_leaf=10, max_features=sqrt, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=350, min_samples_split=14, min_samples_leaf=10, max_features=sqrt, max_depth=None, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=14, min_samples_leaf=10, max_features=sqrt, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=350, min_samples_split=14, min_samples_leaf=10, max_features=sqrt, max_depth=None, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=14, min_samples_leaf=10, max_features=sqrt, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=350, min_samples_split=14, min_samples_leaf=10, max_features=sqrt, max_depth=None, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=900, min_samples_split=5, min_samples_leaf=7, max_features=log2, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=900, min_samples_split=5, min_samples_leaf=7, max_features=log2, max_depth=25, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=900, min_samples_split=5, min_samples_leaf=7, max_features=log2, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=900, min_samples_split=5, min_samples_leaf=7, max_features=log2, max_depth=25, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=900, min_samples_split=5, min_samples_leaf=7, max_features=log2, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=900, min_samples_split=5, min_samples_leaf=7, max_features=log2, max_depth=25, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=900, min_samples_split=5, min_samples_leaf=7, max_features=log2, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=900, min_samples_split=5, min_samples_leaf=7, max_features=log2, max_depth=25, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=900, min_samples_split=5, min_samples_leaf=7, max_features=log2, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=900, min_samples_split=5, min_samples_leaf=7, max_features=log2, max_depth=25, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=800, min_samples_split=13, min_samples_leaf=1, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=13, min_samples_leaf=1, max_features=1, max_depth=15, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=800, min_samples_split=13, min_samples_leaf=1, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=13, min_samples_leaf=1, max_features=1, max_depth=15, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=800, min_samples_split=13, min_samples_leaf=1, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=13, min_samples_leaf=1, max_features=1, max_depth=15, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=800, min_samples_split=13, min_samples_leaf=1, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=13, min_samples_leaf=1, max_features=1, max_depth=15, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=800, min_samples_split=13, min_samples_leaf=1, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=13, min_samples_leaf=1, max_features=1, max_depth=15, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=450, min_samples_split=12, min_samples_leaf=2, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=12, min_samples_leaf=2, max_features=0.5, max_depth=5, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=12, min_samples_leaf=2, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=12, min_samples_leaf=2, max_features=0.5, max_depth=5, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=12, min_samples_leaf=2, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=12, min_samples_leaf=2, max_features=0.5, max_depth=5, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=12, min_samples_leaf=2, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=12, min_samples_leaf=2, max_features=0.5, max_depth=5, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=12, min_samples_leaf=2, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=12, min_samples_leaf=2, max_features=0.5, max_depth=5, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=900, min_samples_split=6, min_samples_leaf=3, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=900, min_samples_split=6, min_samples_leaf=3, max_features=log2, max_depth=None, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=900, min_samples_split=6, min_samples_leaf=3, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=900, min_samples_split=6, min_samples_leaf=3, max_features=log2, max_depth=None, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=900, min_samples_split=6, min_samples_leaf=3, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=900, min_samples_split=6, min_samples_leaf=3, max_features=log2, max_depth=None, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=900, min_samples_split=6, min_samples_leaf=3, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=900, min_samples_split=6, min_samples_leaf=3, max_features=log2, max_depth=None, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=900, min_samples_split=6, min_samples_leaf=3, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=900, min_samples_split=6, min_samples_leaf=3, max_features=log2, max_depth=None, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=150, min_samples_split=7, min_samples_leaf=6, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=150, min_samples_split=7, min_samples_leaf=6, max_features=1, max_depth=None, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=150, min_samples_split=7, min_samples_leaf=6, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=150, min_samples_split=7, min_samples_leaf=6, max_features=1, max_depth=None, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=150, min_samples_split=7, min_samples_leaf=6, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=150, min_samples_split=7, min_samples_leaf=6, max_features=1, max_depth=None, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=150, min_samples_split=7, min_samples_leaf=6, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=150, min_samples_split=7, min_samples_leaf=6, max_features=1, max_depth=None, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=150, min_samples_split=7, min_samples_leaf=6, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=150, min_samples_split=7, min_samples_leaf=6, max_features=1, max_depth=None, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=850, min_samples_split=9, min_samples_leaf=2, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=9, min_samples_leaf=2, max_features=0.5, max_depth=5, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=850, min_samples_split=9, min_samples_leaf=2, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=9, min_samples_leaf=2, max_features=0.5, max_depth=5, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=850, min_samples_split=9, min_samples_leaf=2, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=9, min_samples_leaf=2, max_features=0.5, max_depth=5, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=850, min_samples_split=9, min_samples_leaf=2, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=9, min_samples_leaf=2, max_features=0.5, max_depth=5, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=850, min_samples_split=9, min_samples_leaf=2, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=9, min_samples_leaf=2, max_features=0.5, max_depth=5, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=650, min_samples_split=12, min_samples_leaf=6, max_features=sqrt, max_depth=25, bootstrap=False \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=650, min_samples_split=12, min_samples_leaf=6, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=650, min_samples_split=12, min_samples_leaf=6, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=12, min_samples_leaf=6, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=650, min_samples_split=12, min_samples_leaf=6, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=12, min_samples_leaf=6, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=650, min_samples_split=12, min_samples_leaf=6, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=12, min_samples_leaf=6, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=650, min_samples_split=12, min_samples_leaf=6, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=12, min_samples_leaf=6, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=550, min_samples_split=11, min_samples_leaf=8, max_features=1, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=11, min_samples_leaf=8, max_features=1, max_depth=3, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=550, min_samples_split=11, min_samples_leaf=8, max_features=1, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=11, min_samples_leaf=8, max_features=1, max_depth=3, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=550, min_samples_split=11, min_samples_leaf=8, max_features=1, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=11, min_samples_leaf=8, max_features=1, max_depth=3, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=550, min_samples_split=11, min_samples_leaf=8, max_features=1, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=11, min_samples_leaf=8, max_features=1, max_depth=3, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=550, min_samples_split=11, min_samples_leaf=8, max_features=1, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=11, min_samples_leaf=8, max_features=1, max_depth=3, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=700, min_samples_split=19, min_samples_leaf=4, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=19, min_samples_leaf=4, max_features=log2, max_depth=None, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=700, min_samples_split=19, min_samples_leaf=4, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=19, min_samples_leaf=4, max_features=log2, max_depth=None, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=700, min_samples_split=19, min_samples_leaf=4, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=19, min_samples_leaf=4, max_features=log2, max_depth=None, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=700, min_samples_split=19, min_samples_leaf=4, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=19, min_samples_leaf=4, max_features=log2, max_depth=None, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=700, min_samples_split=19, min_samples_leaf=4, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=19, min_samples_leaf=4, max_features=log2, max_depth=None, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=950, min_samples_split=11, min_samples_leaf=7, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=11, min_samples_leaf=7, max_features=log2, max_depth=3, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=950, min_samples_split=11, min_samples_leaf=7, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=11, min_samples_leaf=7, max_features=log2, max_depth=3, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=950, min_samples_split=11, min_samples_leaf=7, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=11, min_samples_leaf=7, max_features=log2, max_depth=3, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=950, min_samples_split=11, min_samples_leaf=7, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=11, min_samples_leaf=7, max_features=log2, max_depth=3, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=950, min_samples_split=11, min_samples_leaf=7, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=11, min_samples_leaf=7, max_features=log2, max_depth=3, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=300, min_samples_split=2, min_samples_leaf=8, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=2, min_samples_leaf=8, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=2, min_samples_leaf=8, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=2, min_samples_leaf=8, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=2, min_samples_leaf=8, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=2, min_samples_leaf=8, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=2, min_samples_leaf=8, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=2, min_samples_leaf=8, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=2, min_samples_leaf=8, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=2, min_samples_leaf=8, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=700, min_samples_split=8, min_samples_leaf=3, max_features=log2, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=8, min_samples_leaf=3, max_features=log2, max_depth=15, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=700, min_samples_split=8, min_samples_leaf=3, max_features=log2, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=8, min_samples_leaf=3, max_features=log2, max_depth=15, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=700, min_samples_split=8, min_samples_leaf=3, max_features=log2, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=8, min_samples_leaf=3, max_features=log2, max_depth=15, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=700, min_samples_split=8, min_samples_leaf=3, max_features=log2, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=8, min_samples_leaf=3, max_features=log2, max_depth=15, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=700, min_samples_split=8, min_samples_leaf=3, max_features=log2, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=8, min_samples_leaf=3, max_features=log2, max_depth=15, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=750, min_samples_split=9, min_samples_leaf=2, max_features=sqrt, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=750, min_samples_split=9, min_samples_leaf=2, max_features=sqrt, max_depth=15, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=750, min_samples_split=9, min_samples_leaf=2, max_features=sqrt, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=750, min_samples_split=9, min_samples_leaf=2, max_features=sqrt, max_depth=15, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=750, min_samples_split=9, min_samples_leaf=2, max_features=sqrt, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=750, min_samples_split=9, min_samples_leaf=2, max_features=sqrt, max_depth=15, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=750, min_samples_split=9, min_samples_leaf=2, max_features=sqrt, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=750, min_samples_split=9, min_samples_leaf=2, max_features=sqrt, max_depth=15, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=750, min_samples_split=9, min_samples_leaf=2, max_features=sqrt, max_depth=15, bootstrap=False \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=750, min_samples_split=9, min_samples_leaf=2, max_features=sqrt, max_depth=15, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=500, min_samples_split=3, min_samples_leaf=7, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=3, min_samples_leaf=7, max_features=1, max_depth=None, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=500, min_samples_split=3, min_samples_leaf=7, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=3, min_samples_leaf=7, max_features=1, max_depth=None, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=500, min_samples_split=3, min_samples_leaf=7, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=3, min_samples_leaf=7, max_features=1, max_depth=None, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=500, min_samples_split=3, min_samples_leaf=7, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=3, min_samples_leaf=7, max_features=1, max_depth=None, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=500, min_samples_split=3, min_samples_leaf=7, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=3, min_samples_leaf=7, max_features=1, max_depth=None, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=950, min_samples_split=2, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=2, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=950, min_samples_split=2, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=2, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=950, min_samples_split=2, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=2, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=950, min_samples_split=2, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=2, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=950, min_samples_split=2, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=2, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=450, min_samples_split=16, min_samples_leaf=6, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=16, min_samples_leaf=6, max_features=1, max_depth=None, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=450, min_samples_split=16, min_samples_leaf=6, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=16, min_samples_leaf=6, max_features=1, max_depth=None, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=450, min_samples_split=16, min_samples_leaf=6, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=16, min_samples_leaf=6, max_features=1, max_depth=None, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=450, min_samples_split=16, min_samples_leaf=6, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=16, min_samples_leaf=6, max_features=1, max_depth=None, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=450, min_samples_split=16, min_samples_leaf=6, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=16, min_samples_leaf=6, max_features=1, max_depth=None, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=950, min_samples_split=19, min_samples_leaf=2, max_features=log2, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=19, min_samples_leaf=2, max_features=log2, max_depth=15, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=950, min_samples_split=19, min_samples_leaf=2, max_features=log2, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=19, min_samples_leaf=2, max_features=log2, max_depth=15, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=950, min_samples_split=19, min_samples_leaf=2, max_features=log2, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=19, min_samples_leaf=2, max_features=log2, max_depth=15, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=950, min_samples_split=19, min_samples_leaf=2, max_features=log2, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=19, min_samples_leaf=2, max_features=log2, max_depth=15, bootstrap=False, total=   1.1s\n",
            "[CV] n_estimators=950, min_samples_split=19, min_samples_leaf=2, max_features=log2, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=19, min_samples_leaf=2, max_features=log2, max_depth=15, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=250, min_samples_split=10, min_samples_leaf=9, max_features=1, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=10, min_samples_leaf=9, max_features=1, max_depth=10, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=10, min_samples_leaf=9, max_features=1, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=10, min_samples_leaf=9, max_features=1, max_depth=10, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=10, min_samples_leaf=9, max_features=1, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=10, min_samples_leaf=9, max_features=1, max_depth=10, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=10, min_samples_leaf=9, max_features=1, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=10, min_samples_leaf=9, max_features=1, max_depth=10, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=10, min_samples_leaf=9, max_features=1, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=10, min_samples_leaf=9, max_features=1, max_depth=10, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=400, min_samples_split=16, min_samples_leaf=1, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=16, min_samples_leaf=1, max_features=0.5, max_depth=15, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=400, min_samples_split=16, min_samples_leaf=1, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=16, min_samples_leaf=1, max_features=0.5, max_depth=15, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=400, min_samples_split=16, min_samples_leaf=1, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=16, min_samples_leaf=1, max_features=0.5, max_depth=15, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=400, min_samples_split=16, min_samples_leaf=1, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=16, min_samples_leaf=1, max_features=0.5, max_depth=15, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=400, min_samples_split=16, min_samples_leaf=1, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=16, min_samples_leaf=1, max_features=0.5, max_depth=15, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=150, min_samples_split=13, min_samples_leaf=2, max_features=1, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=150, min_samples_split=13, min_samples_leaf=2, max_features=1, max_depth=25, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=150, min_samples_split=13, min_samples_leaf=2, max_features=1, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=150, min_samples_split=13, min_samples_leaf=2, max_features=1, max_depth=25, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=150, min_samples_split=13, min_samples_leaf=2, max_features=1, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=150, min_samples_split=13, min_samples_leaf=2, max_features=1, max_depth=25, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=150, min_samples_split=13, min_samples_leaf=2, max_features=1, max_depth=25, bootstrap=False \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=150, min_samples_split=13, min_samples_leaf=2, max_features=1, max_depth=25, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=150, min_samples_split=13, min_samples_leaf=2, max_features=1, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=150, min_samples_split=13, min_samples_leaf=2, max_features=1, max_depth=25, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=750, min_samples_split=16, min_samples_leaf=8, max_features=1, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=750, min_samples_split=16, min_samples_leaf=8, max_features=1, max_depth=10, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=750, min_samples_split=16, min_samples_leaf=8, max_features=1, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=750, min_samples_split=16, min_samples_leaf=8, max_features=1, max_depth=10, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=750, min_samples_split=16, min_samples_leaf=8, max_features=1, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=750, min_samples_split=16, min_samples_leaf=8, max_features=1, max_depth=10, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=750, min_samples_split=16, min_samples_leaf=8, max_features=1, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=750, min_samples_split=16, min_samples_leaf=8, max_features=1, max_depth=10, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=750, min_samples_split=16, min_samples_leaf=8, max_features=1, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=750, min_samples_split=16, min_samples_leaf=8, max_features=1, max_depth=10, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=300, min_samples_split=13, min_samples_leaf=2, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=13, min_samples_leaf=2, max_features=0.5, max_depth=None, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=300, min_samples_split=13, min_samples_leaf=2, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=13, min_samples_leaf=2, max_features=0.5, max_depth=None, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=300, min_samples_split=13, min_samples_leaf=2, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=13, min_samples_leaf=2, max_features=0.5, max_depth=None, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=300, min_samples_split=13, min_samples_leaf=2, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=13, min_samples_leaf=2, max_features=0.5, max_depth=None, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=300, min_samples_split=13, min_samples_leaf=2, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=13, min_samples_leaf=2, max_features=0.5, max_depth=None, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=100, min_samples_split=6, min_samples_leaf=3, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=6, min_samples_leaf=3, max_features=1, max_depth=25, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=6, min_samples_leaf=3, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=6, min_samples_leaf=3, max_features=1, max_depth=25, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=6, min_samples_leaf=3, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=6, min_samples_leaf=3, max_features=1, max_depth=25, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=6, min_samples_leaf=3, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=6, min_samples_leaf=3, max_features=1, max_depth=25, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=6, min_samples_leaf=3, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=6, min_samples_leaf=3, max_features=1, max_depth=25, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=650, min_samples_split=13, min_samples_leaf=8, max_features=log2, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=13, min_samples_leaf=8, max_features=log2, max_depth=10, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=650, min_samples_split=13, min_samples_leaf=8, max_features=log2, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=13, min_samples_leaf=8, max_features=log2, max_depth=10, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=650, min_samples_split=13, min_samples_leaf=8, max_features=log2, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=13, min_samples_leaf=8, max_features=log2, max_depth=10, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=650, min_samples_split=13, min_samples_leaf=8, max_features=log2, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=13, min_samples_leaf=8, max_features=log2, max_depth=10, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=650, min_samples_split=13, min_samples_leaf=8, max_features=log2, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=13, min_samples_leaf=8, max_features=log2, max_depth=10, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=900, min_samples_split=12, min_samples_leaf=6, max_features=sqrt, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=12, min_samples_leaf=6, max_features=sqrt, max_depth=None, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=900, min_samples_split=12, min_samples_leaf=6, max_features=sqrt, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=12, min_samples_leaf=6, max_features=sqrt, max_depth=None, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=900, min_samples_split=12, min_samples_leaf=6, max_features=sqrt, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=12, min_samples_leaf=6, max_features=sqrt, max_depth=None, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=900, min_samples_split=12, min_samples_leaf=6, max_features=sqrt, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=12, min_samples_leaf=6, max_features=sqrt, max_depth=None, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=900, min_samples_split=12, min_samples_leaf=6, max_features=sqrt, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=12, min_samples_leaf=6, max_features=sqrt, max_depth=None, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=650, min_samples_split=3, min_samples_leaf=9, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=3, min_samples_leaf=9, max_features=0.5, max_depth=5, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=650, min_samples_split=3, min_samples_leaf=9, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=3, min_samples_leaf=9, max_features=0.5, max_depth=5, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=650, min_samples_split=3, min_samples_leaf=9, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=3, min_samples_leaf=9, max_features=0.5, max_depth=5, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=650, min_samples_split=3, min_samples_leaf=9, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=3, min_samples_leaf=9, max_features=0.5, max_depth=5, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=650, min_samples_split=3, min_samples_leaf=9, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=3, min_samples_leaf=9, max_features=0.5, max_depth=5, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=550, min_samples_split=3, min_samples_leaf=5, max_features=0.5, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=3, min_samples_leaf=5, max_features=0.5, max_depth=None, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=550, min_samples_split=3, min_samples_leaf=5, max_features=0.5, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=3, min_samples_leaf=5, max_features=0.5, max_depth=None, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=550, min_samples_split=3, min_samples_leaf=5, max_features=0.5, max_depth=None, bootstrap=False \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=550, min_samples_split=3, min_samples_leaf=5, max_features=0.5, max_depth=None, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=550, min_samples_split=3, min_samples_leaf=5, max_features=0.5, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=3, min_samples_leaf=5, max_features=0.5, max_depth=None, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=550, min_samples_split=3, min_samples_leaf=5, max_features=0.5, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=3, min_samples_leaf=5, max_features=0.5, max_depth=None, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=450, min_samples_split=12, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=12, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=12, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=12, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=12, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=12, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=450, min_samples_split=12, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=12, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=12, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=12, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=100, min_samples_split=18, min_samples_leaf=7, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=18, min_samples_leaf=7, max_features=log2, max_depth=None, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=18, min_samples_leaf=7, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=18, min_samples_leaf=7, max_features=log2, max_depth=None, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=18, min_samples_leaf=7, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=18, min_samples_leaf=7, max_features=log2, max_depth=None, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=18, min_samples_leaf=7, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=18, min_samples_leaf=7, max_features=log2, max_depth=None, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=18, min_samples_leaf=7, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=18, min_samples_leaf=7, max_features=log2, max_depth=None, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=450, min_samples_split=7, min_samples_leaf=2, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=7, min_samples_leaf=2, max_features=0.5, max_depth=5, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=7, min_samples_leaf=2, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=7, min_samples_leaf=2, max_features=0.5, max_depth=5, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=7, min_samples_leaf=2, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=7, min_samples_leaf=2, max_features=0.5, max_depth=5, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=7, min_samples_leaf=2, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=7, min_samples_leaf=2, max_features=0.5, max_depth=5, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=7, min_samples_leaf=2, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=7, min_samples_leaf=2, max_features=0.5, max_depth=5, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=2, min_samples_leaf=3, max_features=0.5, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=2, min_samples_leaf=3, max_features=0.5, max_depth=25, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=450, min_samples_split=2, min_samples_leaf=3, max_features=0.5, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=2, min_samples_leaf=3, max_features=0.5, max_depth=25, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=450, min_samples_split=2, min_samples_leaf=3, max_features=0.5, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=2, min_samples_leaf=3, max_features=0.5, max_depth=25, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=450, min_samples_split=2, min_samples_leaf=3, max_features=0.5, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=2, min_samples_leaf=3, max_features=0.5, max_depth=25, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=450, min_samples_split=2, min_samples_leaf=3, max_features=0.5, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=2, min_samples_leaf=3, max_features=0.5, max_depth=25, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=500, min_samples_split=14, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=14, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=14, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=14, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=14, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=14, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=14, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=14, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=14, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=14, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=350, min_samples_split=10, min_samples_leaf=1, max_features=0.5, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=10, min_samples_leaf=1, max_features=0.5, max_depth=15, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=350, min_samples_split=10, min_samples_leaf=1, max_features=0.5, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=10, min_samples_leaf=1, max_features=0.5, max_depth=15, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=350, min_samples_split=10, min_samples_leaf=1, max_features=0.5, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=10, min_samples_leaf=1, max_features=0.5, max_depth=15, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=350, min_samples_split=10, min_samples_leaf=1, max_features=0.5, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=10, min_samples_leaf=1, max_features=0.5, max_depth=15, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=350, min_samples_split=10, min_samples_leaf=1, max_features=0.5, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=10, min_samples_leaf=1, max_features=0.5, max_depth=15, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=850, min_samples_split=15, min_samples_leaf=6, max_features=1, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=15, min_samples_leaf=6, max_features=1, max_depth=None, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=850, min_samples_split=15, min_samples_leaf=6, max_features=1, max_depth=None, bootstrap=True \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=850, min_samples_split=15, min_samples_leaf=6, max_features=1, max_depth=None, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=850, min_samples_split=15, min_samples_leaf=6, max_features=1, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=15, min_samples_leaf=6, max_features=1, max_depth=None, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=850, min_samples_split=15, min_samples_leaf=6, max_features=1, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=15, min_samples_leaf=6, max_features=1, max_depth=None, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=850, min_samples_split=15, min_samples_leaf=6, max_features=1, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=15, min_samples_leaf=6, max_features=1, max_depth=None, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=200, min_samples_split=3, min_samples_leaf=3, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=3, min_samples_leaf=3, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=3, min_samples_leaf=3, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=3, min_samples_leaf=3, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=3, min_samples_leaf=3, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=3, min_samples_leaf=3, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=3, min_samples_leaf=3, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=3, min_samples_leaf=3, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=3, min_samples_leaf=3, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=3, min_samples_leaf=3, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=12, min_samples_leaf=9, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=12, min_samples_leaf=9, max_features=0.5, max_depth=15, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=12, min_samples_leaf=9, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=12, min_samples_leaf=9, max_features=0.5, max_depth=15, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=12, min_samples_leaf=9, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=12, min_samples_leaf=9, max_features=0.5, max_depth=15, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=12, min_samples_leaf=9, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=12, min_samples_leaf=9, max_features=0.5, max_depth=15, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=12, min_samples_leaf=9, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=12, min_samples_leaf=9, max_features=0.5, max_depth=15, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=550, min_samples_split=13, min_samples_leaf=5, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=13, min_samples_leaf=5, max_features=1, max_depth=None, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=550, min_samples_split=13, min_samples_leaf=5, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=13, min_samples_leaf=5, max_features=1, max_depth=None, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=550, min_samples_split=13, min_samples_leaf=5, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=13, min_samples_leaf=5, max_features=1, max_depth=None, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=550, min_samples_split=13, min_samples_leaf=5, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=13, min_samples_leaf=5, max_features=1, max_depth=None, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=550, min_samples_split=13, min_samples_leaf=5, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=13, min_samples_leaf=5, max_features=1, max_depth=None, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=600, min_samples_split=11, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=11, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=600, min_samples_split=11, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=11, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=600, min_samples_split=11, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=11, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=600, min_samples_split=11, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=11, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=600, min_samples_split=11, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=11, min_samples_leaf=5, max_features=log2, max_depth=None, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=850, min_samples_split=6, min_samples_leaf=7, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=850, min_samples_split=6, min_samples_leaf=7, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=850, min_samples_split=6, min_samples_leaf=7, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=850, min_samples_split=6, min_samples_leaf=7, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=850, min_samples_split=6, min_samples_leaf=7, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=850, min_samples_split=6, min_samples_leaf=7, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=850, min_samples_split=6, min_samples_leaf=7, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=850, min_samples_split=6, min_samples_leaf=7, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=850, min_samples_split=6, min_samples_leaf=7, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=850, min_samples_split=6, min_samples_leaf=7, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=350, min_samples_split=4, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=4, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=4, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=4, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=4, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=4, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=4, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=4, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=4, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=4, min_samples_leaf=8, max_features=1, max_depth=None, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=800, min_samples_split=6, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=False \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=800, min_samples_split=6, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=800, min_samples_split=6, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=6, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=800, min_samples_split=6, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=6, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=800, min_samples_split=6, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=6, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=800, min_samples_split=6, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=6, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=650, min_samples_split=5, min_samples_leaf=10, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=5, min_samples_leaf=10, max_features=0.5, max_depth=5, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=650, min_samples_split=5, min_samples_leaf=10, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=5, min_samples_leaf=10, max_features=0.5, max_depth=5, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=650, min_samples_split=5, min_samples_leaf=10, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=5, min_samples_leaf=10, max_features=0.5, max_depth=5, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=650, min_samples_split=5, min_samples_leaf=10, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=5, min_samples_leaf=10, max_features=0.5, max_depth=5, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=650, min_samples_split=5, min_samples_leaf=10, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=5, min_samples_leaf=10, max_features=0.5, max_depth=5, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=900, min_samples_split=19, min_samples_leaf=9, max_features=1, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=19, min_samples_leaf=9, max_features=1, max_depth=None, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=900, min_samples_split=19, min_samples_leaf=9, max_features=1, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=19, min_samples_leaf=9, max_features=1, max_depth=None, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=900, min_samples_split=19, min_samples_leaf=9, max_features=1, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=19, min_samples_leaf=9, max_features=1, max_depth=None, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=900, min_samples_split=19, min_samples_leaf=9, max_features=1, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=19, min_samples_leaf=9, max_features=1, max_depth=None, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=900, min_samples_split=19, min_samples_leaf=9, max_features=1, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=19, min_samples_leaf=9, max_features=1, max_depth=None, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=200, min_samples_split=17, min_samples_leaf=2, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=17, min_samples_leaf=2, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=17, min_samples_leaf=2, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=17, min_samples_leaf=2, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=17, min_samples_leaf=2, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=17, min_samples_leaf=2, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=17, min_samples_leaf=2, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=17, min_samples_leaf=2, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=17, min_samples_leaf=2, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=17, min_samples_leaf=2, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=600, min_samples_split=9, min_samples_leaf=9, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=9, min_samples_leaf=9, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=600, min_samples_split=9, min_samples_leaf=9, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=9, min_samples_leaf=9, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=9, min_samples_leaf=9, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=9, min_samples_leaf=9, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=9, min_samples_leaf=9, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=9, min_samples_leaf=9, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=9, min_samples_leaf=9, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=9, min_samples_leaf=9, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=250, min_samples_split=2, min_samples_leaf=9, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=2, min_samples_leaf=9, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=2, min_samples_leaf=9, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=2, min_samples_leaf=9, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=2, min_samples_leaf=9, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=2, min_samples_leaf=9, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=2, min_samples_leaf=9, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=2, min_samples_leaf=9, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=2, min_samples_leaf=9, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=2, min_samples_leaf=9, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=450, min_samples_split=11, min_samples_leaf=4, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=11, min_samples_leaf=4, max_features=log2, max_depth=3, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=11, min_samples_leaf=4, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=11, min_samples_leaf=4, max_features=log2, max_depth=3, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=450, min_samples_split=11, min_samples_leaf=4, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=11, min_samples_leaf=4, max_features=log2, max_depth=3, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=11, min_samples_leaf=4, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=11, min_samples_leaf=4, max_features=log2, max_depth=3, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=450, min_samples_split=11, min_samples_leaf=4, max_features=log2, max_depth=3, bootstrap=True \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=450, min_samples_split=11, min_samples_leaf=4, max_features=log2, max_depth=3, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=550, min_samples_split=17, min_samples_leaf=3, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=17, min_samples_leaf=3, max_features=1, max_depth=5, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=550, min_samples_split=17, min_samples_leaf=3, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=17, min_samples_leaf=3, max_features=1, max_depth=5, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=550, min_samples_split=17, min_samples_leaf=3, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=17, min_samples_leaf=3, max_features=1, max_depth=5, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=550, min_samples_split=17, min_samples_leaf=3, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=17, min_samples_leaf=3, max_features=1, max_depth=5, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=550, min_samples_split=17, min_samples_leaf=3, max_features=1, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=17, min_samples_leaf=3, max_features=1, max_depth=5, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=900, min_samples_split=17, min_samples_leaf=4, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=17, min_samples_leaf=4, max_features=1, max_depth=25, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=900, min_samples_split=17, min_samples_leaf=4, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=17, min_samples_leaf=4, max_features=1, max_depth=25, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=900, min_samples_split=17, min_samples_leaf=4, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=17, min_samples_leaf=4, max_features=1, max_depth=25, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=900, min_samples_split=17, min_samples_leaf=4, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=17, min_samples_leaf=4, max_features=1, max_depth=25, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=900, min_samples_split=17, min_samples_leaf=4, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=17, min_samples_leaf=4, max_features=1, max_depth=25, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=850, min_samples_split=10, min_samples_leaf=3, max_features=log2, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=10, min_samples_leaf=3, max_features=log2, max_depth=10, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=850, min_samples_split=10, min_samples_leaf=3, max_features=log2, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=10, min_samples_leaf=3, max_features=log2, max_depth=10, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=850, min_samples_split=10, min_samples_leaf=3, max_features=log2, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=10, min_samples_leaf=3, max_features=log2, max_depth=10, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=850, min_samples_split=10, min_samples_leaf=3, max_features=log2, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=10, min_samples_leaf=3, max_features=log2, max_depth=10, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=850, min_samples_split=10, min_samples_leaf=3, max_features=log2, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=10, min_samples_leaf=3, max_features=log2, max_depth=10, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=450, min_samples_split=18, min_samples_leaf=2, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=18, min_samples_leaf=2, max_features=0.5, max_depth=10, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=450, min_samples_split=18, min_samples_leaf=2, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=18, min_samples_leaf=2, max_features=0.5, max_depth=10, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=450, min_samples_split=18, min_samples_leaf=2, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=18, min_samples_leaf=2, max_features=0.5, max_depth=10, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=450, min_samples_split=18, min_samples_leaf=2, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=18, min_samples_leaf=2, max_features=0.5, max_depth=10, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=450, min_samples_split=18, min_samples_leaf=2, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=18, min_samples_leaf=2, max_features=0.5, max_depth=10, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=800, min_samples_split=7, min_samples_leaf=9, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=7, min_samples_leaf=9, max_features=log2, max_depth=10, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=800, min_samples_split=7, min_samples_leaf=9, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=7, min_samples_leaf=9, max_features=log2, max_depth=10, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=800, min_samples_split=7, min_samples_leaf=9, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=7, min_samples_leaf=9, max_features=log2, max_depth=10, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=800, min_samples_split=7, min_samples_leaf=9, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=7, min_samples_leaf=9, max_features=log2, max_depth=10, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=800, min_samples_split=7, min_samples_leaf=9, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=7, min_samples_leaf=9, max_features=log2, max_depth=10, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=650, min_samples_split=8, min_samples_leaf=8, max_features=1, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=8, min_samples_leaf=8, max_features=1, max_depth=3, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=650, min_samples_split=8, min_samples_leaf=8, max_features=1, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=8, min_samples_leaf=8, max_features=1, max_depth=3, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=650, min_samples_split=8, min_samples_leaf=8, max_features=1, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=8, min_samples_leaf=8, max_features=1, max_depth=3, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=650, min_samples_split=8, min_samples_leaf=8, max_features=1, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=8, min_samples_leaf=8, max_features=1, max_depth=3, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=650, min_samples_split=8, min_samples_leaf=8, max_features=1, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=8, min_samples_leaf=8, max_features=1, max_depth=3, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=12, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=12, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=12, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=12, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=12, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=12, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=12, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=12, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=12, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=True \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=450, min_samples_split=12, min_samples_leaf=1, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=600, min_samples_split=11, min_samples_leaf=10, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=11, min_samples_leaf=10, max_features=log2, max_depth=5, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=11, min_samples_leaf=10, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=11, min_samples_leaf=10, max_features=log2, max_depth=5, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=11, min_samples_leaf=10, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=11, min_samples_leaf=10, max_features=log2, max_depth=5, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=11, min_samples_leaf=10, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=11, min_samples_leaf=10, max_features=log2, max_depth=5, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=11, min_samples_leaf=10, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=600, min_samples_split=11, min_samples_leaf=10, max_features=log2, max_depth=5, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=650, min_samples_split=15, min_samples_leaf=10, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=15, min_samples_leaf=10, max_features=log2, max_depth=25, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=650, min_samples_split=15, min_samples_leaf=10, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=15, min_samples_leaf=10, max_features=log2, max_depth=25, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=650, min_samples_split=15, min_samples_leaf=10, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=15, min_samples_leaf=10, max_features=log2, max_depth=25, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=650, min_samples_split=15, min_samples_leaf=10, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=15, min_samples_leaf=10, max_features=log2, max_depth=25, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=650, min_samples_split=15, min_samples_leaf=10, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=15, min_samples_leaf=10, max_features=log2, max_depth=25, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=250, min_samples_split=6, min_samples_leaf=10, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=6, min_samples_leaf=10, max_features=log2, max_depth=3, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=6, min_samples_leaf=10, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=6, min_samples_leaf=10, max_features=log2, max_depth=3, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=6, min_samples_leaf=10, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=6, min_samples_leaf=10, max_features=log2, max_depth=3, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=6, min_samples_leaf=10, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=6, min_samples_leaf=10, max_features=log2, max_depth=3, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=6, min_samples_leaf=10, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=6, min_samples_leaf=10, max_features=log2, max_depth=3, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=750, min_samples_split=8, min_samples_leaf=1, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=8, min_samples_leaf=1, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=750, min_samples_split=8, min_samples_leaf=1, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=8, min_samples_leaf=1, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=750, min_samples_split=8, min_samples_leaf=1, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=8, min_samples_leaf=1, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=750, min_samples_split=8, min_samples_leaf=1, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=8, min_samples_leaf=1, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=750, min_samples_split=8, min_samples_leaf=1, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=8, min_samples_leaf=1, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=800, min_samples_split=15, min_samples_leaf=9, max_features=1, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=15, min_samples_leaf=9, max_features=1, max_depth=10, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=800, min_samples_split=15, min_samples_leaf=9, max_features=1, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=15, min_samples_leaf=9, max_features=1, max_depth=10, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=800, min_samples_split=15, min_samples_leaf=9, max_features=1, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=15, min_samples_leaf=9, max_features=1, max_depth=10, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=800, min_samples_split=15, min_samples_leaf=9, max_features=1, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=15, min_samples_leaf=9, max_features=1, max_depth=10, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=800, min_samples_split=15, min_samples_leaf=9, max_features=1, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=15, min_samples_leaf=9, max_features=1, max_depth=10, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=750, min_samples_split=14, min_samples_leaf=2, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=14, min_samples_leaf=2, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=750, min_samples_split=14, min_samples_leaf=2, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=14, min_samples_leaf=2, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=750, min_samples_split=14, min_samples_leaf=2, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=14, min_samples_leaf=2, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=750, min_samples_split=14, min_samples_leaf=2, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=14, min_samples_leaf=2, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=750, min_samples_split=14, min_samples_leaf=2, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=14, min_samples_leaf=2, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=800, min_samples_split=13, min_samples_leaf=10, max_features=1, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=800, min_samples_split=13, min_samples_leaf=10, max_features=1, max_depth=None, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=800, min_samples_split=13, min_samples_leaf=10, max_features=1, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=800, min_samples_split=13, min_samples_leaf=10, max_features=1, max_depth=None, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=800, min_samples_split=13, min_samples_leaf=10, max_features=1, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=800, min_samples_split=13, min_samples_leaf=10, max_features=1, max_depth=None, bootstrap=True, total=   1.1s\n",
            "[CV] n_estimators=800, min_samples_split=13, min_samples_leaf=10, max_features=1, max_depth=None, bootstrap=True \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=800, min_samples_split=13, min_samples_leaf=10, max_features=1, max_depth=None, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=800, min_samples_split=13, min_samples_leaf=10, max_features=1, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=800, min_samples_split=13, min_samples_leaf=10, max_features=1, max_depth=None, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=300, min_samples_split=16, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=16, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=16, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=16, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=16, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=16, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=16, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=16, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=300, min_samples_split=16, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=16, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=850, min_samples_split=17, min_samples_leaf=6, max_features=1, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=17, min_samples_leaf=6, max_features=1, max_depth=15, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=850, min_samples_split=17, min_samples_leaf=6, max_features=1, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=17, min_samples_leaf=6, max_features=1, max_depth=15, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=850, min_samples_split=17, min_samples_leaf=6, max_features=1, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=17, min_samples_leaf=6, max_features=1, max_depth=15, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=850, min_samples_split=17, min_samples_leaf=6, max_features=1, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=17, min_samples_leaf=6, max_features=1, max_depth=15, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=850, min_samples_split=17, min_samples_leaf=6, max_features=1, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=17, min_samples_leaf=6, max_features=1, max_depth=15, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=650, min_samples_split=11, min_samples_leaf=5, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=11, min_samples_leaf=5, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=650, min_samples_split=11, min_samples_leaf=5, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=11, min_samples_leaf=5, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=650, min_samples_split=11, min_samples_leaf=5, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=11, min_samples_leaf=5, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=650, min_samples_split=11, min_samples_leaf=5, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=11, min_samples_leaf=5, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=650, min_samples_split=11, min_samples_leaf=5, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=11, min_samples_leaf=5, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=100, min_samples_split=11, min_samples_leaf=2, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=11, min_samples_leaf=2, max_features=0.5, max_depth=15, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=11, min_samples_leaf=2, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=11, min_samples_leaf=2, max_features=0.5, max_depth=15, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=11, min_samples_leaf=2, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=11, min_samples_leaf=2, max_features=0.5, max_depth=15, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=11, min_samples_leaf=2, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=11, min_samples_leaf=2, max_features=0.5, max_depth=15, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=11, min_samples_leaf=2, max_features=0.5, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=11, min_samples_leaf=2, max_features=0.5, max_depth=15, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=950, min_samples_split=12, min_samples_leaf=6, max_features=1, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=12, min_samples_leaf=6, max_features=1, max_depth=5, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=950, min_samples_split=12, min_samples_leaf=6, max_features=1, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=12, min_samples_leaf=6, max_features=1, max_depth=5, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=950, min_samples_split=12, min_samples_leaf=6, max_features=1, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=12, min_samples_leaf=6, max_features=1, max_depth=5, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=950, min_samples_split=12, min_samples_leaf=6, max_features=1, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=12, min_samples_leaf=6, max_features=1, max_depth=5, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=950, min_samples_split=12, min_samples_leaf=6, max_features=1, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=12, min_samples_leaf=6, max_features=1, max_depth=5, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=700, min_samples_split=15, min_samples_leaf=7, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=15, min_samples_leaf=7, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=700, min_samples_split=15, min_samples_leaf=7, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=15, min_samples_leaf=7, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=700, min_samples_split=15, min_samples_leaf=7, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=15, min_samples_leaf=7, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=700, min_samples_split=15, min_samples_leaf=7, max_features=sqrt, max_depth=25, bootstrap=False \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=700, min_samples_split=15, min_samples_leaf=7, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=700, min_samples_split=15, min_samples_leaf=7, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=700, min_samples_split=15, min_samples_leaf=7, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=650, min_samples_split=19, min_samples_leaf=7, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=19, min_samples_leaf=7, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=650, min_samples_split=19, min_samples_leaf=7, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=19, min_samples_leaf=7, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=650, min_samples_split=19, min_samples_leaf=7, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=19, min_samples_leaf=7, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=650, min_samples_split=19, min_samples_leaf=7, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=19, min_samples_leaf=7, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=650, min_samples_split=19, min_samples_leaf=7, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=19, min_samples_leaf=7, max_features=sqrt, max_depth=10, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=550, min_samples_split=6, min_samples_leaf=5, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=6, min_samples_leaf=5, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=550, min_samples_split=6, min_samples_leaf=5, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=6, min_samples_leaf=5, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=550, min_samples_split=6, min_samples_leaf=5, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=6, min_samples_leaf=5, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=550, min_samples_split=6, min_samples_leaf=5, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=6, min_samples_leaf=5, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=550, min_samples_split=6, min_samples_leaf=5, max_features=sqrt, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=6, min_samples_leaf=5, max_features=sqrt, max_depth=25, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=200, min_samples_split=8, min_samples_leaf=3, max_features=sqrt, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=8, min_samples_leaf=3, max_features=sqrt, max_depth=10, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=8, min_samples_leaf=3, max_features=sqrt, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=8, min_samples_leaf=3, max_features=sqrt, max_depth=10, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=8, min_samples_leaf=3, max_features=sqrt, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=8, min_samples_leaf=3, max_features=sqrt, max_depth=10, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=8, min_samples_leaf=3, max_features=sqrt, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=8, min_samples_leaf=3, max_features=sqrt, max_depth=10, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=8, min_samples_leaf=3, max_features=sqrt, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=8, min_samples_leaf=3, max_features=sqrt, max_depth=10, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=850, min_samples_split=13, min_samples_leaf=2, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=13, min_samples_leaf=2, max_features=1, max_depth=25, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=850, min_samples_split=13, min_samples_leaf=2, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=13, min_samples_leaf=2, max_features=1, max_depth=25, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=850, min_samples_split=13, min_samples_leaf=2, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=13, min_samples_leaf=2, max_features=1, max_depth=25, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=850, min_samples_split=13, min_samples_leaf=2, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=13, min_samples_leaf=2, max_features=1, max_depth=25, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=850, min_samples_split=13, min_samples_leaf=2, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=13, min_samples_leaf=2, max_features=1, max_depth=25, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=400, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=None, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=None, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=None, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=None, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=2, min_samples_leaf=9, max_features=log2, max_depth=None, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=200, min_samples_split=15, min_samples_leaf=4, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=15, min_samples_leaf=4, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=15, min_samples_leaf=4, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=15, min_samples_leaf=4, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=15, min_samples_leaf=4, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=15, min_samples_leaf=4, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=15, min_samples_leaf=4, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=15, min_samples_leaf=4, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=15, min_samples_leaf=4, max_features=sqrt, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=15, min_samples_leaf=4, max_features=sqrt, max_depth=15, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=950, min_samples_split=11, min_samples_leaf=8, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=11, min_samples_leaf=8, max_features=sqrt, max_depth=10, bootstrap=True, total=   1.1s\n",
            "[CV] n_estimators=950, min_samples_split=11, min_samples_leaf=8, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=11, min_samples_leaf=8, max_features=sqrt, max_depth=10, bootstrap=True, total=   1.1s\n",
            "[CV] n_estimators=950, min_samples_split=11, min_samples_leaf=8, max_features=sqrt, max_depth=10, bootstrap=True \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=950, min_samples_split=11, min_samples_leaf=8, max_features=sqrt, max_depth=10, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=950, min_samples_split=11, min_samples_leaf=8, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=11, min_samples_leaf=8, max_features=sqrt, max_depth=10, bootstrap=True, total=   1.1s\n",
            "[CV] n_estimators=950, min_samples_split=11, min_samples_leaf=8, max_features=sqrt, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=950, min_samples_split=11, min_samples_leaf=8, max_features=sqrt, max_depth=10, bootstrap=True, total=   1.1s\n",
            "[CV] n_estimators=300, min_samples_split=3, min_samples_leaf=2, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=3, min_samples_leaf=2, max_features=log2, max_depth=25, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=300, min_samples_split=3, min_samples_leaf=2, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=3, min_samples_leaf=2, max_features=log2, max_depth=25, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=3, min_samples_leaf=2, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=3, min_samples_leaf=2, max_features=log2, max_depth=25, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=3, min_samples_leaf=2, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=3, min_samples_leaf=2, max_features=log2, max_depth=25, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=3, min_samples_leaf=2, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=3, min_samples_leaf=2, max_features=log2, max_depth=25, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=400, min_samples_split=19, min_samples_leaf=8, max_features=1, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=19, min_samples_leaf=8, max_features=1, max_depth=15, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=19, min_samples_leaf=8, max_features=1, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=19, min_samples_leaf=8, max_features=1, max_depth=15, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=19, min_samples_leaf=8, max_features=1, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=19, min_samples_leaf=8, max_features=1, max_depth=15, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=19, min_samples_leaf=8, max_features=1, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=19, min_samples_leaf=8, max_features=1, max_depth=15, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=19, min_samples_leaf=8, max_features=1, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=19, min_samples_leaf=8, max_features=1, max_depth=15, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=750, min_samples_split=10, min_samples_leaf=1, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=750, min_samples_split=10, min_samples_leaf=1, max_features=1, max_depth=15, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=750, min_samples_split=10, min_samples_leaf=1, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=750, min_samples_split=10, min_samples_leaf=1, max_features=1, max_depth=15, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=750, min_samples_split=10, min_samples_leaf=1, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=750, min_samples_split=10, min_samples_leaf=1, max_features=1, max_depth=15, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=750, min_samples_split=10, min_samples_leaf=1, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=750, min_samples_split=10, min_samples_leaf=1, max_features=1, max_depth=15, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=750, min_samples_split=10, min_samples_leaf=1, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=750, min_samples_split=10, min_samples_leaf=1, max_features=1, max_depth=15, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=300, min_samples_split=14, min_samples_leaf=4, max_features=0.5, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=14, min_samples_leaf=4, max_features=0.5, max_depth=10, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=300, min_samples_split=14, min_samples_leaf=4, max_features=0.5, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=14, min_samples_leaf=4, max_features=0.5, max_depth=10, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=300, min_samples_split=14, min_samples_leaf=4, max_features=0.5, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=14, min_samples_leaf=4, max_features=0.5, max_depth=10, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=300, min_samples_split=14, min_samples_leaf=4, max_features=0.5, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=14, min_samples_leaf=4, max_features=0.5, max_depth=10, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=300, min_samples_split=14, min_samples_leaf=4, max_features=0.5, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=300, min_samples_split=14, min_samples_leaf=4, max_features=0.5, max_depth=10, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=800, min_samples_split=10, min_samples_leaf=3, max_features=0.5, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=10, min_samples_leaf=3, max_features=0.5, max_depth=15, bootstrap=False, total=   1.1s\n",
            "[CV] n_estimators=800, min_samples_split=10, min_samples_leaf=3, max_features=0.5, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=10, min_samples_leaf=3, max_features=0.5, max_depth=15, bootstrap=False, total=   1.1s\n",
            "[CV] n_estimators=800, min_samples_split=10, min_samples_leaf=3, max_features=0.5, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=10, min_samples_leaf=3, max_features=0.5, max_depth=15, bootstrap=False, total=   1.1s\n",
            "[CV] n_estimators=800, min_samples_split=10, min_samples_leaf=3, max_features=0.5, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=10, min_samples_leaf=3, max_features=0.5, max_depth=15, bootstrap=False, total=   1.0s\n",
            "[CV] n_estimators=800, min_samples_split=10, min_samples_leaf=3, max_features=0.5, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=10, min_samples_leaf=3, max_features=0.5, max_depth=15, bootstrap=False, total=   1.0s\n",
            "[CV] n_estimators=800, min_samples_split=6, min_samples_leaf=7, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=6, min_samples_leaf=7, max_features=log2, max_depth=10, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=800, min_samples_split=6, min_samples_leaf=7, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=6, min_samples_leaf=7, max_features=log2, max_depth=10, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=800, min_samples_split=6, min_samples_leaf=7, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=6, min_samples_leaf=7, max_features=log2, max_depth=10, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=800, min_samples_split=6, min_samples_leaf=7, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=6, min_samples_leaf=7, max_features=log2, max_depth=10, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=800, min_samples_split=6, min_samples_leaf=7, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=800, min_samples_split=6, min_samples_leaf=7, max_features=log2, max_depth=10, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=200, min_samples_split=17, min_samples_leaf=3, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=17, min_samples_leaf=3, max_features=log2, max_depth=5, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=17, min_samples_leaf=3, max_features=log2, max_depth=5, bootstrap=True \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=200, min_samples_split=17, min_samples_leaf=3, max_features=log2, max_depth=5, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=17, min_samples_leaf=3, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=17, min_samples_leaf=3, max_features=log2, max_depth=5, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=17, min_samples_leaf=3, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=17, min_samples_leaf=3, max_features=log2, max_depth=5, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=17, min_samples_leaf=3, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=17, min_samples_leaf=3, max_features=log2, max_depth=5, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=550, min_samples_split=6, min_samples_leaf=1, max_features=0.5, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=6, min_samples_leaf=1, max_features=0.5, max_depth=25, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=550, min_samples_split=6, min_samples_leaf=1, max_features=0.5, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=6, min_samples_leaf=1, max_features=0.5, max_depth=25, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=550, min_samples_split=6, min_samples_leaf=1, max_features=0.5, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=6, min_samples_leaf=1, max_features=0.5, max_depth=25, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=550, min_samples_split=6, min_samples_leaf=1, max_features=0.5, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=6, min_samples_leaf=1, max_features=0.5, max_depth=25, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=550, min_samples_split=6, min_samples_leaf=1, max_features=0.5, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=550, min_samples_split=6, min_samples_leaf=1, max_features=0.5, max_depth=25, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=950, min_samples_split=7, min_samples_leaf=1, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=7, min_samples_leaf=1, max_features=0.5, max_depth=3, bootstrap=False, total=   0.9s\n",
            "[CV] n_estimators=950, min_samples_split=7, min_samples_leaf=1, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=7, min_samples_leaf=1, max_features=0.5, max_depth=3, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=950, min_samples_split=7, min_samples_leaf=1, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=7, min_samples_leaf=1, max_features=0.5, max_depth=3, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=950, min_samples_split=7, min_samples_leaf=1, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=7, min_samples_leaf=1, max_features=0.5, max_depth=3, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=950, min_samples_split=7, min_samples_leaf=1, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=7, min_samples_leaf=1, max_features=0.5, max_depth=3, bootstrap=False, total=   0.8s\n",
            "[CV] n_estimators=650, min_samples_split=10, min_samples_leaf=6, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=10, min_samples_leaf=6, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=650, min_samples_split=10, min_samples_leaf=6, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=10, min_samples_leaf=6, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=650, min_samples_split=10, min_samples_leaf=6, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=10, min_samples_leaf=6, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=650, min_samples_split=10, min_samples_leaf=6, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=10, min_samples_leaf=6, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=650, min_samples_split=10, min_samples_leaf=6, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=650, min_samples_split=10, min_samples_leaf=6, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=150, min_samples_split=2, min_samples_leaf=6, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=150, min_samples_split=2, min_samples_leaf=6, max_features=1, max_depth=15, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=150, min_samples_split=2, min_samples_leaf=6, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=150, min_samples_split=2, min_samples_leaf=6, max_features=1, max_depth=15, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=150, min_samples_split=2, min_samples_leaf=6, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=150, min_samples_split=2, min_samples_leaf=6, max_features=1, max_depth=15, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=150, min_samples_split=2, min_samples_leaf=6, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=150, min_samples_split=2, min_samples_leaf=6, max_features=1, max_depth=15, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=150, min_samples_split=2, min_samples_leaf=6, max_features=1, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=150, min_samples_split=2, min_samples_leaf=6, max_features=1, max_depth=15, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=950, min_samples_split=12, min_samples_leaf=7, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=12, min_samples_leaf=7, max_features=0.5, max_depth=25, bootstrap=False, total=   1.1s\n",
            "[CV] n_estimators=950, min_samples_split=12, min_samples_leaf=7, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=12, min_samples_leaf=7, max_features=0.5, max_depth=25, bootstrap=False, total=   1.1s\n",
            "[CV] n_estimators=950, min_samples_split=12, min_samples_leaf=7, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=12, min_samples_leaf=7, max_features=0.5, max_depth=25, bootstrap=False, total=   1.1s\n",
            "[CV] n_estimators=950, min_samples_split=12, min_samples_leaf=7, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=12, min_samples_leaf=7, max_features=0.5, max_depth=25, bootstrap=False, total=   1.1s\n",
            "[CV] n_estimators=950, min_samples_split=12, min_samples_leaf=7, max_features=0.5, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=12, min_samples_leaf=7, max_features=0.5, max_depth=25, bootstrap=False, total=   1.1s\n",
            "[CV] n_estimators=500, min_samples_split=19, min_samples_leaf=10, max_features=log2, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=19, min_samples_leaf=10, max_features=log2, max_depth=15, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=19, min_samples_leaf=10, max_features=log2, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=19, min_samples_leaf=10, max_features=log2, max_depth=15, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=19, min_samples_leaf=10, max_features=log2, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=19, min_samples_leaf=10, max_features=log2, max_depth=15, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=19, min_samples_leaf=10, max_features=log2, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=19, min_samples_leaf=10, max_features=log2, max_depth=15, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=19, min_samples_leaf=10, max_features=log2, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=19, min_samples_leaf=10, max_features=log2, max_depth=15, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=300, min_samples_split=13, min_samples_leaf=7, max_features=sqrt, max_depth=3, bootstrap=True \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=300, min_samples_split=13, min_samples_leaf=7, max_features=sqrt, max_depth=3, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=13, min_samples_leaf=7, max_features=sqrt, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=13, min_samples_leaf=7, max_features=sqrt, max_depth=3, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=13, min_samples_leaf=7, max_features=sqrt, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=13, min_samples_leaf=7, max_features=sqrt, max_depth=3, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=13, min_samples_leaf=7, max_features=sqrt, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=13, min_samples_leaf=7, max_features=sqrt, max_depth=3, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=13, min_samples_leaf=7, max_features=sqrt, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=13, min_samples_leaf=7, max_features=sqrt, max_depth=3, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=400, min_samples_split=18, min_samples_leaf=1, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=400, min_samples_split=18, min_samples_leaf=1, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=400, min_samples_split=18, min_samples_leaf=1, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=400, min_samples_split=18, min_samples_leaf=1, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=400, min_samples_split=18, min_samples_leaf=1, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=400, min_samples_split=18, min_samples_leaf=1, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=400, min_samples_split=18, min_samples_leaf=1, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=400, min_samples_split=18, min_samples_leaf=1, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=400, min_samples_split=18, min_samples_leaf=1, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=400, min_samples_split=18, min_samples_leaf=1, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=850, min_samples_split=2, min_samples_leaf=5, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=850, min_samples_split=2, min_samples_leaf=5, max_features=log2, max_depth=3, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=850, min_samples_split=2, min_samples_leaf=5, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=850, min_samples_split=2, min_samples_leaf=5, max_features=log2, max_depth=3, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=850, min_samples_split=2, min_samples_leaf=5, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=850, min_samples_split=2, min_samples_leaf=5, max_features=log2, max_depth=3, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=850, min_samples_split=2, min_samples_leaf=5, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=850, min_samples_split=2, min_samples_leaf=5, max_features=log2, max_depth=3, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=850, min_samples_split=2, min_samples_leaf=5, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=850, min_samples_split=2, min_samples_leaf=5, max_features=log2, max_depth=3, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=450, min_samples_split=19, min_samples_leaf=6, max_features=sqrt, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=19, min_samples_leaf=6, max_features=sqrt, max_depth=None, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=19, min_samples_leaf=6, max_features=sqrt, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=19, min_samples_leaf=6, max_features=sqrt, max_depth=None, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=19, min_samples_leaf=6, max_features=sqrt, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=19, min_samples_leaf=6, max_features=sqrt, max_depth=None, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=19, min_samples_leaf=6, max_features=sqrt, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=19, min_samples_leaf=6, max_features=sqrt, max_depth=None, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=19, min_samples_leaf=6, max_features=sqrt, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=19, min_samples_leaf=6, max_features=sqrt, max_depth=None, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=350, min_samples_split=18, min_samples_leaf=3, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=18, min_samples_leaf=3, max_features=1, max_depth=None, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=18, min_samples_leaf=3, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=18, min_samples_leaf=3, max_features=1, max_depth=None, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=18, min_samples_leaf=3, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=18, min_samples_leaf=3, max_features=1, max_depth=None, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=18, min_samples_leaf=3, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=18, min_samples_leaf=3, max_features=1, max_depth=None, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=18, min_samples_leaf=3, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=18, min_samples_leaf=3, max_features=1, max_depth=None, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=18, min_samples_leaf=4, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=18, min_samples_leaf=4, max_features=log2, max_depth=5, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=18, min_samples_leaf=4, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=18, min_samples_leaf=4, max_features=log2, max_depth=5, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=18, min_samples_leaf=4, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=18, min_samples_leaf=4, max_features=log2, max_depth=5, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=18, min_samples_leaf=4, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=18, min_samples_leaf=4, max_features=log2, max_depth=5, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=18, min_samples_leaf=4, max_features=log2, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=200, min_samples_split=18, min_samples_leaf=4, max_features=log2, max_depth=5, bootstrap=True, total=   0.2s\n",
            "[CV] n_estimators=900, min_samples_split=19, min_samples_leaf=5, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=900, min_samples_split=19, min_samples_leaf=5, max_features=log2, max_depth=3, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=900, min_samples_split=19, min_samples_leaf=5, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=900, min_samples_split=19, min_samples_leaf=5, max_features=log2, max_depth=3, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=900, min_samples_split=19, min_samples_leaf=5, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=900, min_samples_split=19, min_samples_leaf=5, max_features=log2, max_depth=3, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=900, min_samples_split=19, min_samples_leaf=5, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=900, min_samples_split=19, min_samples_leaf=5, max_features=log2, max_depth=3, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=900, min_samples_split=19, min_samples_leaf=5, max_features=log2, max_depth=3, bootstrap=False \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=900, min_samples_split=19, min_samples_leaf=5, max_features=log2, max_depth=3, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=500, min_samples_split=6, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=6, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=6, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=6, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=6, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=6, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=6, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=6, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=6, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=6, min_samples_leaf=1, max_features=sqrt, max_depth=25, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=350, min_samples_split=10, min_samples_leaf=4, max_features=1, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=10, min_samples_leaf=4, max_features=1, max_depth=3, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=350, min_samples_split=10, min_samples_leaf=4, max_features=1, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=10, min_samples_leaf=4, max_features=1, max_depth=3, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=350, min_samples_split=10, min_samples_leaf=4, max_features=1, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=10, min_samples_leaf=4, max_features=1, max_depth=3, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=350, min_samples_split=10, min_samples_leaf=4, max_features=1, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=10, min_samples_leaf=4, max_features=1, max_depth=3, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=350, min_samples_split=10, min_samples_leaf=4, max_features=1, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=10, min_samples_leaf=4, max_features=1, max_depth=3, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=750, min_samples_split=16, min_samples_leaf=4, max_features=sqrt, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=16, min_samples_leaf=4, max_features=sqrt, max_depth=5, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=750, min_samples_split=16, min_samples_leaf=4, max_features=sqrt, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=16, min_samples_leaf=4, max_features=sqrt, max_depth=5, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=750, min_samples_split=16, min_samples_leaf=4, max_features=sqrt, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=16, min_samples_leaf=4, max_features=sqrt, max_depth=5, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=750, min_samples_split=16, min_samples_leaf=4, max_features=sqrt, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=16, min_samples_leaf=4, max_features=sqrt, max_depth=5, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=750, min_samples_split=16, min_samples_leaf=4, max_features=sqrt, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=16, min_samples_leaf=4, max_features=sqrt, max_depth=5, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=900, min_samples_split=7, min_samples_leaf=5, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=900, min_samples_split=7, min_samples_leaf=5, max_features=log2, max_depth=5, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=900, min_samples_split=7, min_samples_leaf=5, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=900, min_samples_split=7, min_samples_leaf=5, max_features=log2, max_depth=5, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=900, min_samples_split=7, min_samples_leaf=5, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=900, min_samples_split=7, min_samples_leaf=5, max_features=log2, max_depth=5, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=900, min_samples_split=7, min_samples_leaf=5, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=900, min_samples_split=7, min_samples_leaf=5, max_features=log2, max_depth=5, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=900, min_samples_split=7, min_samples_leaf=5, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=900, min_samples_split=7, min_samples_leaf=5, max_features=log2, max_depth=5, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=550, min_samples_split=16, min_samples_leaf=2, max_features=1, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=16, min_samples_leaf=2, max_features=1, max_depth=25, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=550, min_samples_split=16, min_samples_leaf=2, max_features=1, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=16, min_samples_leaf=2, max_features=1, max_depth=25, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=550, min_samples_split=16, min_samples_leaf=2, max_features=1, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=16, min_samples_leaf=2, max_features=1, max_depth=25, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=550, min_samples_split=16, min_samples_leaf=2, max_features=1, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=16, min_samples_leaf=2, max_features=1, max_depth=25, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=550, min_samples_split=16, min_samples_leaf=2, max_features=1, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=550, min_samples_split=16, min_samples_leaf=2, max_features=1, max_depth=25, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=750, min_samples_split=9, min_samples_leaf=5, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=9, min_samples_leaf=5, max_features=log2, max_depth=25, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=750, min_samples_split=9, min_samples_leaf=5, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=9, min_samples_leaf=5, max_features=log2, max_depth=25, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=750, min_samples_split=9, min_samples_leaf=5, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=9, min_samples_leaf=5, max_features=log2, max_depth=25, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=750, min_samples_split=9, min_samples_leaf=5, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=9, min_samples_leaf=5, max_features=log2, max_depth=25, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=750, min_samples_split=9, min_samples_leaf=5, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=9, min_samples_leaf=5, max_features=log2, max_depth=25, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=500, min_samples_split=9, min_samples_leaf=7, max_features=sqrt, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=9, min_samples_leaf=7, max_features=sqrt, max_depth=15, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=500, min_samples_split=9, min_samples_leaf=7, max_features=sqrt, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=9, min_samples_leaf=7, max_features=sqrt, max_depth=15, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=500, min_samples_split=9, min_samples_leaf=7, max_features=sqrt, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=9, min_samples_leaf=7, max_features=sqrt, max_depth=15, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=500, min_samples_split=9, min_samples_leaf=7, max_features=sqrt, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=9, min_samples_leaf=7, max_features=sqrt, max_depth=15, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=500, min_samples_split=9, min_samples_leaf=7, max_features=sqrt, max_depth=15, bootstrap=False \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=500, min_samples_split=9, min_samples_leaf=7, max_features=sqrt, max_depth=15, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=250, min_samples_split=16, min_samples_leaf=10, max_features=1, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=16, min_samples_leaf=10, max_features=1, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=16, min_samples_leaf=10, max_features=1, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=16, min_samples_leaf=10, max_features=1, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=16, min_samples_leaf=10, max_features=1, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=16, min_samples_leaf=10, max_features=1, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=16, min_samples_leaf=10, max_features=1, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=16, min_samples_leaf=10, max_features=1, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=16, min_samples_leaf=10, max_features=1, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=16, min_samples_leaf=10, max_features=1, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=500, min_samples_split=8, min_samples_leaf=10, max_features=0.5, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=8, min_samples_leaf=10, max_features=0.5, max_depth=15, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=8, min_samples_leaf=10, max_features=0.5, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=8, min_samples_leaf=10, max_features=0.5, max_depth=15, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=500, min_samples_split=8, min_samples_leaf=10, max_features=0.5, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=8, min_samples_leaf=10, max_features=0.5, max_depth=15, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=500, min_samples_split=8, min_samples_leaf=10, max_features=0.5, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=8, min_samples_leaf=10, max_features=0.5, max_depth=15, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=500, min_samples_split=8, min_samples_leaf=10, max_features=0.5, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=8, min_samples_leaf=10, max_features=0.5, max_depth=15, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=200, min_samples_split=7, min_samples_leaf=5, max_features=0.5, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=7, min_samples_leaf=5, max_features=0.5, max_depth=None, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=7, min_samples_leaf=5, max_features=0.5, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=7, min_samples_leaf=5, max_features=0.5, max_depth=None, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=200, min_samples_split=7, min_samples_leaf=5, max_features=0.5, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=7, min_samples_leaf=5, max_features=0.5, max_depth=None, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=200, min_samples_split=7, min_samples_leaf=5, max_features=0.5, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=7, min_samples_leaf=5, max_features=0.5, max_depth=None, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=7, min_samples_leaf=5, max_features=0.5, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=7, min_samples_leaf=5, max_features=0.5, max_depth=None, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=500, min_samples_split=15, min_samples_leaf=7, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=15, min_samples_leaf=7, max_features=1, max_depth=None, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=500, min_samples_split=15, min_samples_leaf=7, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=15, min_samples_leaf=7, max_features=1, max_depth=None, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=500, min_samples_split=15, min_samples_leaf=7, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=15, min_samples_leaf=7, max_features=1, max_depth=None, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=500, min_samples_split=15, min_samples_leaf=7, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=15, min_samples_leaf=7, max_features=1, max_depth=None, bootstrap=False, total=   0.7s\n",
            "[CV] n_estimators=500, min_samples_split=15, min_samples_leaf=7, max_features=1, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=500, min_samples_split=15, min_samples_leaf=7, max_features=1, max_depth=None, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=200, min_samples_split=8, min_samples_leaf=7, max_features=log2, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=8, min_samples_leaf=7, max_features=log2, max_depth=25, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=8, min_samples_leaf=7, max_features=log2, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=8, min_samples_leaf=7, max_features=log2, max_depth=25, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=8, min_samples_leaf=7, max_features=log2, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=8, min_samples_leaf=7, max_features=log2, max_depth=25, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=8, min_samples_leaf=7, max_features=log2, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=8, min_samples_leaf=7, max_features=log2, max_depth=25, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=8, min_samples_leaf=7, max_features=log2, max_depth=25, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=8, min_samples_leaf=7, max_features=log2, max_depth=25, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=350, min_samples_split=12, min_samples_leaf=2, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=12, min_samples_leaf=2, max_features=log2, max_depth=10, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=12, min_samples_leaf=2, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=12, min_samples_leaf=2, max_features=log2, max_depth=10, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=12, min_samples_leaf=2, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=12, min_samples_leaf=2, max_features=log2, max_depth=10, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=12, min_samples_leaf=2, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=12, min_samples_leaf=2, max_features=log2, max_depth=10, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=350, min_samples_split=12, min_samples_leaf=2, max_features=log2, max_depth=10, bootstrap=False \n",
            "[CV]  n_estimators=350, min_samples_split=12, min_samples_leaf=2, max_features=log2, max_depth=10, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=500, min_samples_split=2, min_samples_leaf=8, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=2, min_samples_leaf=8, max_features=1, max_depth=25, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=2, min_samples_leaf=8, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=2, min_samples_leaf=8, max_features=1, max_depth=25, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=2, min_samples_leaf=8, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=2, min_samples_leaf=8, max_features=1, max_depth=25, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=2, min_samples_leaf=8, max_features=1, max_depth=25, bootstrap=True \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=500, min_samples_split=2, min_samples_leaf=8, max_features=1, max_depth=25, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=2, min_samples_leaf=8, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=2, min_samples_leaf=8, max_features=1, max_depth=25, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=700, min_samples_split=12, min_samples_leaf=8, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=700, min_samples_split=12, min_samples_leaf=8, max_features=0.5, max_depth=5, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=700, min_samples_split=12, min_samples_leaf=8, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=700, min_samples_split=12, min_samples_leaf=8, max_features=0.5, max_depth=5, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=700, min_samples_split=12, min_samples_leaf=8, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=700, min_samples_split=12, min_samples_leaf=8, max_features=0.5, max_depth=5, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=700, min_samples_split=12, min_samples_leaf=8, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=700, min_samples_split=12, min_samples_leaf=8, max_features=0.5, max_depth=5, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=700, min_samples_split=12, min_samples_leaf=8, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=700, min_samples_split=12, min_samples_leaf=8, max_features=0.5, max_depth=5, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=200, min_samples_split=4, min_samples_leaf=1, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=4, min_samples_leaf=1, max_features=log2, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=4, min_samples_leaf=1, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=4, min_samples_leaf=1, max_features=log2, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=4, min_samples_leaf=1, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=4, min_samples_leaf=1, max_features=log2, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=4, min_samples_leaf=1, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=4, min_samples_leaf=1, max_features=log2, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=4, min_samples_leaf=1, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=4, min_samples_leaf=1, max_features=log2, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=900, min_samples_split=6, min_samples_leaf=8, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=6, min_samples_leaf=8, max_features=0.5, max_depth=None, bootstrap=True, total=   1.2s\n",
            "[CV] n_estimators=900, min_samples_split=6, min_samples_leaf=8, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=6, min_samples_leaf=8, max_features=0.5, max_depth=None, bootstrap=True, total=   1.1s\n",
            "[CV] n_estimators=900, min_samples_split=6, min_samples_leaf=8, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=6, min_samples_leaf=8, max_features=0.5, max_depth=None, bootstrap=True, total=   1.2s\n",
            "[CV] n_estimators=900, min_samples_split=6, min_samples_leaf=8, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=6, min_samples_leaf=8, max_features=0.5, max_depth=None, bootstrap=True, total=   1.2s\n",
            "[CV] n_estimators=900, min_samples_split=6, min_samples_leaf=8, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=900, min_samples_split=6, min_samples_leaf=8, max_features=0.5, max_depth=None, bootstrap=True, total=   1.2s\n",
            "[CV] n_estimators=100, min_samples_split=3, min_samples_leaf=8, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=3, min_samples_leaf=8, max_features=1, max_depth=25, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=3, min_samples_leaf=8, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=3, min_samples_leaf=8, max_features=1, max_depth=25, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=3, min_samples_leaf=8, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=3, min_samples_leaf=8, max_features=1, max_depth=25, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=3, min_samples_leaf=8, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=3, min_samples_leaf=8, max_features=1, max_depth=25, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=3, min_samples_leaf=8, max_features=1, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=3, min_samples_leaf=8, max_features=1, max_depth=25, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=950, min_samples_split=7, min_samples_leaf=6, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=7, min_samples_leaf=6, max_features=0.5, max_depth=3, bootstrap=False, total=   0.9s\n",
            "[CV] n_estimators=950, min_samples_split=7, min_samples_leaf=6, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=7, min_samples_leaf=6, max_features=0.5, max_depth=3, bootstrap=False, total=   0.9s\n",
            "[CV] n_estimators=950, min_samples_split=7, min_samples_leaf=6, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=7, min_samples_leaf=6, max_features=0.5, max_depth=3, bootstrap=False, total=   0.9s\n",
            "[CV] n_estimators=950, min_samples_split=7, min_samples_leaf=6, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=7, min_samples_leaf=6, max_features=0.5, max_depth=3, bootstrap=False, total=   0.9s\n",
            "[CV] n_estimators=950, min_samples_split=7, min_samples_leaf=6, max_features=0.5, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=950, min_samples_split=7, min_samples_leaf=6, max_features=0.5, max_depth=3, bootstrap=False, total=   0.9s\n",
            "[CV] n_estimators=600, min_samples_split=18, min_samples_leaf=5, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=18, min_samples_leaf=5, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=600, min_samples_split=18, min_samples_leaf=5, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=18, min_samples_leaf=5, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=18, min_samples_leaf=5, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=18, min_samples_leaf=5, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=600, min_samples_split=18, min_samples_leaf=5, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=18, min_samples_leaf=5, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=600, min_samples_split=18, min_samples_leaf=5, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=600, min_samples_split=18, min_samples_leaf=5, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=850, min_samples_split=17, min_samples_leaf=2, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=17, min_samples_leaf=2, max_features=log2, max_depth=3, bootstrap=True, total=   0.9s\n",
            "[CV] n_estimators=850, min_samples_split=17, min_samples_leaf=2, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=17, min_samples_leaf=2, max_features=log2, max_depth=3, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=850, min_samples_split=17, min_samples_leaf=2, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=17, min_samples_leaf=2, max_features=log2, max_depth=3, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=850, min_samples_split=17, min_samples_leaf=2, max_features=log2, max_depth=3, bootstrap=True \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=850, min_samples_split=17, min_samples_leaf=2, max_features=log2, max_depth=3, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=850, min_samples_split=17, min_samples_leaf=2, max_features=log2, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=850, min_samples_split=17, min_samples_leaf=2, max_features=log2, max_depth=3, bootstrap=True, total=   0.8s\n",
            "[CV] n_estimators=450, min_samples_split=5, min_samples_leaf=6, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=5, min_samples_leaf=6, max_features=0.5, max_depth=5, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=5, min_samples_leaf=6, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=5, min_samples_leaf=6, max_features=0.5, max_depth=5, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=5, min_samples_leaf=6, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=5, min_samples_leaf=6, max_features=0.5, max_depth=5, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=5, min_samples_leaf=6, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=5, min_samples_leaf=6, max_features=0.5, max_depth=5, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=5, min_samples_leaf=6, max_features=0.5, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=5, min_samples_leaf=6, max_features=0.5, max_depth=5, bootstrap=False, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=13, min_samples_leaf=10, max_features=0.5, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=13, min_samples_leaf=10, max_features=0.5, max_depth=3, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=13, min_samples_leaf=10, max_features=0.5, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=13, min_samples_leaf=10, max_features=0.5, max_depth=3, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=13, min_samples_leaf=10, max_features=0.5, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=13, min_samples_leaf=10, max_features=0.5, max_depth=3, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=13, min_samples_leaf=10, max_features=0.5, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=13, min_samples_leaf=10, max_features=0.5, max_depth=3, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=500, min_samples_split=13, min_samples_leaf=10, max_features=0.5, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=500, min_samples_split=13, min_samples_leaf=10, max_features=0.5, max_depth=3, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=750, min_samples_split=2, min_samples_leaf=3, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=2, min_samples_leaf=3, max_features=0.5, max_depth=None, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=750, min_samples_split=2, min_samples_leaf=3, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=2, min_samples_leaf=3, max_features=0.5, max_depth=None, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=750, min_samples_split=2, min_samples_leaf=3, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=2, min_samples_leaf=3, max_features=0.5, max_depth=None, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=750, min_samples_split=2, min_samples_leaf=3, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=2, min_samples_leaf=3, max_features=0.5, max_depth=None, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=750, min_samples_split=2, min_samples_leaf=3, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=750, min_samples_split=2, min_samples_leaf=3, max_features=0.5, max_depth=None, bootstrap=True, total=   1.0s\n",
            "[CV] n_estimators=300, min_samples_split=2, min_samples_leaf=10, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=2, min_samples_leaf=10, max_features=0.5, max_depth=None, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=2, min_samples_leaf=10, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=2, min_samples_leaf=10, max_features=0.5, max_depth=None, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=2, min_samples_leaf=10, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=2, min_samples_leaf=10, max_features=0.5, max_depth=None, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=2, min_samples_leaf=10, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=2, min_samples_leaf=10, max_features=0.5, max_depth=None, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=300, min_samples_split=2, min_samples_leaf=10, max_features=0.5, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=300, min_samples_split=2, min_samples_leaf=10, max_features=0.5, max_depth=None, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=150, min_samples_split=12, min_samples_leaf=6, max_features=0.5, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=150, min_samples_split=12, min_samples_leaf=6, max_features=0.5, max_depth=None, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=150, min_samples_split=12, min_samples_leaf=6, max_features=0.5, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=150, min_samples_split=12, min_samples_leaf=6, max_features=0.5, max_depth=None, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=150, min_samples_split=12, min_samples_leaf=6, max_features=0.5, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=150, min_samples_split=12, min_samples_leaf=6, max_features=0.5, max_depth=None, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=150, min_samples_split=12, min_samples_leaf=6, max_features=0.5, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=150, min_samples_split=12, min_samples_leaf=6, max_features=0.5, max_depth=None, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=150, min_samples_split=12, min_samples_leaf=6, max_features=0.5, max_depth=None, bootstrap=False \n",
            "[CV]  n_estimators=150, min_samples_split=12, min_samples_leaf=6, max_features=0.5, max_depth=None, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=100, min_samples_split=13, min_samples_leaf=8, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=13, min_samples_leaf=8, max_features=log2, max_depth=None, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=13, min_samples_leaf=8, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=13, min_samples_leaf=8, max_features=log2, max_depth=None, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=13, min_samples_leaf=8, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=13, min_samples_leaf=8, max_features=log2, max_depth=None, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=13, min_samples_leaf=8, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=13, min_samples_leaf=8, max_features=log2, max_depth=None, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=100, min_samples_split=13, min_samples_leaf=8, max_features=log2, max_depth=None, bootstrap=True \n",
            "[CV]  n_estimators=100, min_samples_split=13, min_samples_leaf=8, max_features=log2, max_depth=None, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=150, min_samples_split=8, min_samples_leaf=1, max_features=1, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=8, min_samples_leaf=1, max_features=1, max_depth=3, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=150, min_samples_split=8, min_samples_leaf=1, max_features=1, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=8, min_samples_leaf=1, max_features=1, max_depth=3, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=150, min_samples_split=8, min_samples_leaf=1, max_features=1, max_depth=3, bootstrap=True \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=150, min_samples_split=8, min_samples_leaf=1, max_features=1, max_depth=3, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=150, min_samples_split=8, min_samples_leaf=1, max_features=1, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=8, min_samples_leaf=1, max_features=1, max_depth=3, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=150, min_samples_split=8, min_samples_leaf=1, max_features=1, max_depth=3, bootstrap=True \n",
            "[CV]  n_estimators=150, min_samples_split=8, min_samples_leaf=1, max_features=1, max_depth=3, bootstrap=True, total=   0.1s\n",
            "[CV] n_estimators=400, min_samples_split=10, min_samples_leaf=1, max_features=1, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=10, min_samples_leaf=1, max_features=1, max_depth=15, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=10, min_samples_leaf=1, max_features=1, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=10, min_samples_leaf=1, max_features=1, max_depth=15, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=10, min_samples_leaf=1, max_features=1, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=10, min_samples_leaf=1, max_features=1, max_depth=15, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=10, min_samples_leaf=1, max_features=1, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=10, min_samples_leaf=1, max_features=1, max_depth=15, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=10, min_samples_leaf=1, max_features=1, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=400, min_samples_split=10, min_samples_leaf=1, max_features=1, max_depth=15, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=400, min_samples_split=4, min_samples_leaf=6, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=400, min_samples_split=4, min_samples_leaf=6, max_features=log2, max_depth=5, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=400, min_samples_split=4, min_samples_leaf=6, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=400, min_samples_split=4, min_samples_leaf=6, max_features=log2, max_depth=5, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=400, min_samples_split=4, min_samples_leaf=6, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=400, min_samples_split=4, min_samples_leaf=6, max_features=log2, max_depth=5, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=400, min_samples_split=4, min_samples_leaf=6, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=400, min_samples_split=4, min_samples_leaf=6, max_features=log2, max_depth=5, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=400, min_samples_split=4, min_samples_leaf=6, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=400, min_samples_split=4, min_samples_leaf=6, max_features=log2, max_depth=5, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=200, min_samples_split=15, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=15, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=False, total=   0.1s\n",
            "[CV] n_estimators=200, min_samples_split=15, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=15, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=15, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=15, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=15, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=15, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=200, min_samples_split=15, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=200, min_samples_split=15, min_samples_leaf=7, max_features=log2, max_depth=5, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=650, min_samples_split=3, min_samples_leaf=4, max_features=log2, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=3, min_samples_leaf=4, max_features=log2, max_depth=15, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=650, min_samples_split=3, min_samples_leaf=4, max_features=log2, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=3, min_samples_leaf=4, max_features=log2, max_depth=15, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=650, min_samples_split=3, min_samples_leaf=4, max_features=log2, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=3, min_samples_leaf=4, max_features=log2, max_depth=15, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=650, min_samples_split=3, min_samples_leaf=4, max_features=log2, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=3, min_samples_leaf=4, max_features=log2, max_depth=15, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=650, min_samples_split=3, min_samples_leaf=4, max_features=log2, max_depth=15, bootstrap=True \n",
            "[CV]  n_estimators=650, min_samples_split=3, min_samples_leaf=4, max_features=log2, max_depth=15, bootstrap=True, total=   0.7s\n",
            "[CV] n_estimators=900, min_samples_split=10, min_samples_leaf=8, max_features=0.5, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=900, min_samples_split=10, min_samples_leaf=8, max_features=0.5, max_depth=15, bootstrap=False, total=   1.0s\n",
            "[CV] n_estimators=900, min_samples_split=10, min_samples_leaf=8, max_features=0.5, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=900, min_samples_split=10, min_samples_leaf=8, max_features=0.5, max_depth=15, bootstrap=False, total=   1.0s\n",
            "[CV] n_estimators=900, min_samples_split=10, min_samples_leaf=8, max_features=0.5, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=900, min_samples_split=10, min_samples_leaf=8, max_features=0.5, max_depth=15, bootstrap=False, total=   1.1s\n",
            "[CV] n_estimators=900, min_samples_split=10, min_samples_leaf=8, max_features=0.5, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=900, min_samples_split=10, min_samples_leaf=8, max_features=0.5, max_depth=15, bootstrap=False, total=   1.0s\n",
            "[CV] n_estimators=900, min_samples_split=10, min_samples_leaf=8, max_features=0.5, max_depth=15, bootstrap=False \n",
            "[CV]  n_estimators=900, min_samples_split=10, min_samples_leaf=8, max_features=0.5, max_depth=15, bootstrap=False, total=   1.1s\n",
            "[CV] n_estimators=450, min_samples_split=16, min_samples_leaf=9, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=16, min_samples_leaf=9, max_features=log2, max_depth=25, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=16, min_samples_leaf=9, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=16, min_samples_leaf=9, max_features=log2, max_depth=25, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=16, min_samples_leaf=9, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=16, min_samples_leaf=9, max_features=log2, max_depth=25, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=450, min_samples_split=16, min_samples_leaf=9, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=16, min_samples_leaf=9, max_features=log2, max_depth=25, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=450, min_samples_split=16, min_samples_leaf=9, max_features=log2, max_depth=25, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=16, min_samples_leaf=9, max_features=log2, max_depth=25, bootstrap=True, total=   0.4s\n",
            "[CV] n_estimators=450, min_samples_split=4, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=4, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=4, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=4, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=4, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True \n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV]  n_estimators=450, min_samples_split=4, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=450, min_samples_split=4, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=4, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True, total=   0.6s\n",
            "[CV] n_estimators=450, min_samples_split=4, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True \n",
            "[CV]  n_estimators=450, min_samples_split=4, min_samples_leaf=1, max_features=0.5, max_depth=5, bootstrap=True, total=   0.5s\n",
            "[CV] n_estimators=250, min_samples_split=3, min_samples_leaf=5, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=3, min_samples_leaf=5, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=3, min_samples_leaf=5, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=3, min_samples_leaf=5, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=3, min_samples_leaf=5, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=3, min_samples_leaf=5, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=3, min_samples_leaf=5, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=3, min_samples_leaf=5, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=250, min_samples_split=3, min_samples_leaf=5, max_features=sqrt, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=250, min_samples_split=3, min_samples_leaf=5, max_features=sqrt, max_depth=3, bootstrap=False, total=   0.2s\n",
            "[CV] n_estimators=450, min_samples_split=8, min_samples_leaf=7, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=8, min_samples_leaf=7, max_features=log2, max_depth=3, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=450, min_samples_split=8, min_samples_leaf=7, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=8, min_samples_leaf=7, max_features=log2, max_depth=3, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=450, min_samples_split=8, min_samples_leaf=7, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=8, min_samples_leaf=7, max_features=log2, max_depth=3, bootstrap=False, total=   0.4s\n",
            "[CV] n_estimators=450, min_samples_split=8, min_samples_leaf=7, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=8, min_samples_leaf=7, max_features=log2, max_depth=3, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=450, min_samples_split=8, min_samples_leaf=7, max_features=log2, max_depth=3, bootstrap=False \n",
            "[CV]  n_estimators=450, min_samples_split=8, min_samples_leaf=7, max_features=log2, max_depth=3, bootstrap=False, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=12, min_samples_leaf=1, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=12, min_samples_leaf=1, max_features=0.5, max_depth=10, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=12, min_samples_leaf=1, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=12, min_samples_leaf=1, max_features=0.5, max_depth=10, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=12, min_samples_leaf=1, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=12, min_samples_leaf=1, max_features=0.5, max_depth=10, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=12, min_samples_leaf=1, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=12, min_samples_leaf=1, max_features=0.5, max_depth=10, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=250, min_samples_split=12, min_samples_leaf=1, max_features=0.5, max_depth=10, bootstrap=True \n",
            "[CV]  n_estimators=250, min_samples_split=12, min_samples_leaf=1, max_features=0.5, max_depth=10, bootstrap=True, total=   0.3s\n",
            "[CV] n_estimators=850, min_samples_split=11, min_samples_leaf=3, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=850, min_samples_split=11, min_samples_leaf=3, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=850, min_samples_split=11, min_samples_leaf=3, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=850, min_samples_split=11, min_samples_leaf=3, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=850, min_samples_split=11, min_samples_leaf=3, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=850, min_samples_split=11, min_samples_leaf=3, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=850, min_samples_split=11, min_samples_leaf=3, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=850, min_samples_split=11, min_samples_leaf=3, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.6s\n",
            "[CV] n_estimators=850, min_samples_split=11, min_samples_leaf=3, max_features=sqrt, max_depth=5, bootstrap=False \n",
            "[CV]  n_estimators=850, min_samples_split=11, min_samples_leaf=3, max_features=sqrt, max_depth=5, bootstrap=False, total=   0.6s\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[Parallel(n_jobs=1)]: Done 1500 out of 1500 | elapsed: 12.8min finished\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "RandomizedSearchCV(cv=5, estimator=RandomForestClassifier(random_state=42),\n",
              "                   n_iter=300,\n",
              "                   param_distributions={'bootstrap': [True, False],\n",
              "                                        'max_depth': [None, 3, 5, 10, 15, 25],\n",
              "                                        'max_features': [0.5, 1, 'log2',\n",
              "                                                         'sqrt'],\n",
              "                                        'min_samples_leaf': array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10]),\n",
              "                                        'min_samples_split': array([ 2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n",
              "       19]),\n",
              "                                        'n_estimators': array([100, 150, 200, 250, 300, 350, 400, 450, 500, 550, 600, 650, 700,\n",
              "       750, 800, 850, 900, 950])},\n",
              "                   verbose=2)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 237
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CIqmhQZb9tCE",
        "outputId": "af619a73-350e-4b6c-962b-f4247328d564"
      },
      "source": [
        "best_params_rf_random = random_rf.best_params_\n",
        "best_params_rf_random"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'n_estimators': 550,\n",
              " 'min_samples_split': 14,\n",
              " 'min_samples_leaf': 5,\n",
              " 'max_features': 0.5,\n",
              " 'max_depth': 3,\n",
              " 'bootstrap': False}"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 242
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "22iAvkic9tCE",
        "outputId": "608c4abc-7d68-465b-addb-de0de52cd5db"
      },
      "source": [
        "# Instantiate model with best parameters from random search\n",
        "rf_new = RandomForestClassifier(n_estimators=550,\n",
        "                                min_samples_leaf=5,\n",
        "                                min_samples_split=14,\n",
        "                                max_features=0.5,\n",
        "                                max_depth=3, bootstrap=False)\n",
        "rf_new.fit(X_train, y_train)\n",
        "rf_new.score(X_test, y_test)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.62"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 245
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1nBVKpQu9tCE",
        "outputId": "0cd5127e-04ba-4378-850b-a11e64c26940"
      },
      "source": [
        "#plot roc curve with the random search model\n",
        "plot_roc_curve(rf_new, X_test, y_test)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<sklearn.metrics._plot.roc_curve.RocCurveDisplay at 0x1304da640>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 252
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "psIJotIO9tCE",
        "outputId": "6314b8c3-4c39-4100-bde0-275775a3c5af"
      },
      "source": [
        "# Random Forest Classifier -Random Search for hyperparameters\n",
        "rf = RandomForestClassifier(random_state=42)\n",
        "grid = {\n",
        "    'n_estimators': np.arange(200, 1000, 100),\n",
        "    'bootstrap':[True, False],\n",
        "    'max_depth' : [3, 5, 10, 15, 25]\n",
        "}\n",
        "rf_grid =GridSearchCV(rf, grid, cv=5, verbose=2)\n",
        "rf_grid.fit(X_train, y_train)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Fitting 5 folds for each of 80 candidates, totalling 400 fits\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=200 ...................\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=200 ...................\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[Parallel(n_jobs=1)]: Done   1 out of   1 | elapsed:    0.2s remaining:    0.0s\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=200 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=200 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=200 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=300 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=300 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=300 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=300 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=300 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=400 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=400 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=400 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=400 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=400 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=500 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=500, total=   0.5s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=500 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=500, total=   0.5s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=500 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=500, total=   0.5s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=500 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=500, total=   0.5s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=500 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=500, total=   0.5s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=600 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=600, total=   0.6s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=600 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=600, total=   0.6s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=600 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=600, total=   0.6s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=600 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=600, total=   0.6s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=600 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=600, total=   0.6s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=700 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=700, total=   0.7s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=700 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=700, total=   0.7s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=700 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=700, total=   0.7s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=700 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=700, total=   0.7s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=700 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=700, total=   0.7s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=800 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=800, total=   0.8s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=800 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=800, total=   0.8s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=800 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=800, total=   0.8s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=800 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=800, total=   0.8s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=800 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=800, total=   0.8s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=900 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=900, total=   0.9s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=900 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=900, total=   0.9s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=900 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=900, total=   0.9s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=900 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=900, total=   0.9s\n",
            "[CV] bootstrap=True, max_depth=3, n_estimators=900 ...................\n",
            "[CV] .... bootstrap=True, max_depth=3, n_estimators=900, total=   0.9s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=200 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=200 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=200 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=200 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=200 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=300 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=300 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=300 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=300 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=300 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=400 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=400 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=400 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=400 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=400 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=500 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=500, total=   0.5s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=500 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=500, total=   0.5s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=500 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=500, total=   0.5s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=500 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=500, total=   0.5s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=500 ...................\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=500, total=   0.5s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=600 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=600, total=   0.6s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=600 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=600, total=   0.6s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=600 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=600, total=   0.6s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=600 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=600, total=   1.1s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=600 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=600, total=   0.6s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=700 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=700, total=   0.7s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=700 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=700, total=   0.7s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=700 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=700, total=   0.7s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=700 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=700, total=   0.7s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=700 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=700, total=   0.7s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=800 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=800, total=   0.8s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=800 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=800, total=   0.8s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=800 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=800, total=   0.8s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=800 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=800, total=   0.8s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=800 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=800, total=   0.8s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=900 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=900, total=   0.9s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=900 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=900, total=   0.9s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=900 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=900, total=   0.9s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=900 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=900, total=   0.9s\n",
            "[CV] bootstrap=True, max_depth=5, n_estimators=900 ...................\n",
            "[CV] .... bootstrap=True, max_depth=5, n_estimators=900, total=   0.9s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=200 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=200 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=200 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=200 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=200 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=300 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=300 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=300 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=300 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=300 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=400 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=400 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=400 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=400 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=400 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=500 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=500, total=   0.5s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=500 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=500, total=   0.5s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=500 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=500, total=   0.5s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=500 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=500, total=   0.5s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=500 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=500, total=   0.5s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=600 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=600, total=   0.6s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=600 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=600, total=   0.6s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=600 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=600, total=   0.6s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=600 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=600, total=   0.6s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=600 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=600, total=   0.6s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=700 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=700, total=   0.7s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=700 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=700, total=   0.7s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=700 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=700, total=   0.7s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=700 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=700, total=   0.7s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=700 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=700, total=   0.7s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=800 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=800, total=   0.8s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=800 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=800, total=   0.9s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=800 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=800, total=   0.9s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=800 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=800, total=   1.0s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=800 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=800, total=   0.9s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=900 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=900, total=   1.0s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=900 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=900, total=   1.0s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=900 ..................\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=900, total=   1.0s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=900 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=900, total=   1.0s\n",
            "[CV] bootstrap=True, max_depth=10, n_estimators=900 ..................\n",
            "[CV] ... bootstrap=True, max_depth=10, n_estimators=900, total=   1.0s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=200 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=200 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=200 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=200 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=200 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=300 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=300, total=   0.4s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=300 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=300, total=   0.4s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=300 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=300 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=300 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=400 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=400, total=   0.5s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=400 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=400, total=   0.5s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=400 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=400, total=   0.5s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=400 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=400, total=   0.5s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=400 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=400, total=   0.5s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=500 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=500, total=   0.6s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=500 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=500, total=   0.6s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=500 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=500, total=   0.6s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=500 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=500, total=   0.6s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=500 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=500, total=   0.6s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=600 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=600, total=   0.7s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=600 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=600, total=   0.8s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=600 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=600, total=   0.7s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=600 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=600, total=   0.8s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=600 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=600, total=   0.8s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=700 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=700, total=   0.9s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=700 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=700, total=   0.8s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=700 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=700, total=   0.9s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=700 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=700, total=   0.8s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=700 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=700, total=   0.9s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=800 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=800, total=   1.0s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=800 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=800, total=   1.0s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=800 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=800, total=   1.1s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=800 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=800, total=   1.0s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=800 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=800, total=   1.0s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=900 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=900, total=   1.1s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=900 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=900, total=   1.1s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=900 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=900, total=   1.1s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=900 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=900, total=   1.1s\n",
            "[CV] bootstrap=True, max_depth=15, n_estimators=900 ..................\n",
            "[CV] ... bootstrap=True, max_depth=15, n_estimators=900, total=   1.1s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=200 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=200 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=200 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=200 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=200 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=300 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=300 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=300 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=300 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=300 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=400 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=400, total=   0.5s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=400 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=400, total=   0.5s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=400 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=400, total=   0.5s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=400 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=400, total=   0.5s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=400 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=400, total=   0.5s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=500 ..................\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=500, total=   0.6s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=500 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=500, total=   0.6s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=500 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=500, total=   0.6s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=500 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=500, total=   0.6s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=500 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=500, total=   0.6s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=600 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=600, total=   0.7s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=600 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=600, total=   0.7s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=600 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=600, total=   0.8s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=600 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=600, total=   0.7s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=600 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=600, total=   0.8s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=700 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=700, total=   0.8s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=700 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=700, total=   0.9s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=700 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=700, total=   0.9s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=700 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=700, total=   0.9s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=700 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=700, total=   0.9s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=800 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=800, total=   1.0s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=800 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=800, total=   1.0s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=800 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=800, total=   1.0s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=800 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=800, total=   1.0s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=800 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=800, total=   1.0s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=900 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=900, total=   1.1s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=900 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=900, total=   1.0s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=900 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=900, total=   1.0s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=900 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=900, total=   1.0s\n",
            "[CV] bootstrap=True, max_depth=25, n_estimators=900 ..................\n",
            "[CV] ... bootstrap=True, max_depth=25, n_estimators=900, total=   1.0s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=200 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=200, total=   0.1s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=200 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=200, total=   0.1s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=200 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=200, total=   0.1s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=200 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=200, total=   0.1s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=200 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=200, total=   0.1s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=300 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=300, total=   0.2s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=300 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=300, total=   0.2s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=300 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=300, total=   0.2s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=300 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=300, total=   0.2s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=300 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=300, total=   0.2s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=400 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=400, total=   0.3s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=400 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=400, total=   0.3s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=400 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=400, total=   0.3s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=400 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=400, total=   0.3s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=400 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=400, total=   0.3s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=500 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=500, total=   0.4s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=500 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=500, total=   0.4s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=500 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=500, total=   0.4s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=500 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=500, total=   0.4s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=500 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=500, total=   0.4s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=600 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=600, total=   0.5s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=600 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=600, total=   0.5s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=600 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=600, total=   0.5s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=600 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=600, total=   0.5s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=600 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=600, total=   0.5s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=700 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=700, total=   0.6s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=700 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=700, total=   0.6s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=700 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=700, total=   0.6s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=700 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=700, total=   0.6s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=700 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=700, total=   0.6s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=800 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=800, total=   0.6s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=800 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=800, total=   0.6s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=800 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=800, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=800 ..................\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=800, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=800 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=800, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=900 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=900, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=900 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=900, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=900 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=900, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=900 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=900, total=   0.8s\n",
            "[CV] bootstrap=False, max_depth=3, n_estimators=900 ..................\n",
            "[CV] ... bootstrap=False, max_depth=3, n_estimators=900, total=   0.8s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=200 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=200 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=200 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=200 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=200 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=300 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=300 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=300 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=300 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=300 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=400 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=400 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=400 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=400 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=400 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=500 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=500, total=   0.4s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=500 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=500, total=   0.4s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=500 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=500, total=   0.4s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=500 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=500, total=   0.4s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=500 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=500, total=   0.4s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=600 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=600, total=   0.5s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=600 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=600, total=   0.5s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=600 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=600, total=   0.5s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=600 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=600, total=   0.5s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=600 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=600, total=   0.5s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=700 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=700, total=   0.6s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=700 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=700, total=   0.6s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=700 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=700, total=   0.6s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=700 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=700, total=   0.6s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=700 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=700, total=   0.6s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=800 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=800, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=800 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=800, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=800 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=800, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=800 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=800, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=800 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=800, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=900 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=900, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=900 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=900, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=900 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=900, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=900 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=900, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=5, n_estimators=900 ..................\n",
            "[CV] ... bootstrap=False, max_depth=5, n_estimators=900, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=200 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=200 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=200 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=200 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=200 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=300 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=300 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=300 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=300 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=300 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=400 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=400 .................\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=400 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=400 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=400 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=400, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=500 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=500, total=   0.5s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=500 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=500, total=   0.5s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=500 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=500, total=   0.5s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=500 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=500, total=   0.4s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=500 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=500, total=   0.5s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=600 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=600, total=   0.6s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=600 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=600, total=   0.6s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=600 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=600, total=   0.6s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=600 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=600, total=   0.6s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=600 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=600, total=   0.6s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=700 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=700, total=   0.6s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=700 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=700, total=   0.6s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=700 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=700, total=   0.6s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=700 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=700, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=700 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=700, total=   0.6s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=800 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=800, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=800 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=800, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=800 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=800, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=800 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=800, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=800 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=800, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=900 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=900, total=   0.8s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=900 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=900, total=   0.9s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=900 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=900, total=   0.9s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=900 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=900, total=   0.9s\n",
            "[CV] bootstrap=False, max_depth=10, n_estimators=900 .................\n",
            "[CV] .. bootstrap=False, max_depth=10, n_estimators=900, total=   0.8s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=200 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=200 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=200 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=200 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=200 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=300 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=300 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=300 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=300 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=300 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=400 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=400 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=400 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=400 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=400 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=500 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=500, total=   0.5s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=500 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=500, total=   0.5s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=500 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=500, total=   0.5s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=500 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=500, total=   0.5s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=500 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=500, total=   0.5s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=600 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=600, total=   0.6s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=600 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=600, total=   0.6s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=600 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=600, total=   0.6s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=600 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=600, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=600 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=600, total=   0.6s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=700 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=700, total=   0.8s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=700 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=700, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=700 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=700, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=700 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=700, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=700 .................\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=700, total=   0.8s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=800 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=800, total=   0.9s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=800 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=800, total=   0.8s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=800 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=800, total=   0.8s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=800 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=800, total=   0.8s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=800 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=800, total=   0.8s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=900 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=900, total=   1.0s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=900 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=900, total=   1.0s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=900 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=900, total=   0.9s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=900 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=900, total=   0.9s\n",
            "[CV] bootstrap=False, max_depth=15, n_estimators=900 .................\n",
            "[CV] .. bootstrap=False, max_depth=15, n_estimators=900, total=   1.0s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=200 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=200 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=200 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=200 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=200 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=200, total=   0.2s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=300 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=300 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=300 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=300 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=300 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=300, total=   0.3s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=400 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=400, total=   0.5s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=400 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=400 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=400 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=400 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=400, total=   0.4s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=500 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=500, total=   0.5s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=500 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=500, total=   0.5s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=500 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=500, total=   0.5s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=500 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=500, total=   0.6s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=500 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=500, total=   0.5s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=600 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=600, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=600 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=600, total=   0.6s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=600 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=600, total=   0.6s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=600 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=600, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=600 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=600, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=700 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=700, total=   0.8s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=700 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=700, total=   0.8s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=700 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=700, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=700 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=700, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=700 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=700, total=   0.7s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=800 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=800, total=   0.8s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=800 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=800, total=   0.8s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=800 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=800, total=   0.8s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=800 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=800, total=   0.8s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=800 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=800, total=   0.8s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=900 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=900, total=   0.9s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=900 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=900, total=   0.9s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=900 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=900, total=   0.9s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=900 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=900, total=   0.9s\n",
            "[CV] bootstrap=False, max_depth=25, n_estimators=900 .................\n",
            "[CV] .. bootstrap=False, max_depth=25, n_estimators=900, total=   0.9s\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "[Parallel(n_jobs=1)]: Done 400 out of 400 | elapsed:  3.7min finished\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "GridSearchCV(cv=5, estimator=RandomForestClassifier(random_state=42),\n",
              "             param_grid={'bootstrap': [True, False],\n",
              "                         'max_depth': [3, 5, 10, 15, 25],\n",
              "                         'n_estimators': array([200, 300, 400, 500, 600, 700, 800, 900])},\n",
              "             verbose=2)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 248
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ebgun6Q09tCE",
        "outputId": "b92eee69-09ac-44d5-c352-da75941397e0"
      },
      "source": [
        "rf_grid.best_params_"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'bootstrap': False, 'max_depth': 5, 'n_estimators': 900}"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 250
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0eCFFqHg9tCF",
        "outputId": "57a23b9d-ceaa-4831-a58b-ab83945137f9"
      },
      "source": [
        "# Check our grid search tuned model scores\n",
        "rf_grid.score(X_test, y_test)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.62"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 251
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Ks6ChDSC9tCF",
        "outputId": "4560fb29-793b-4432-bc72-dccd0846146a"
      },
      "source": [
        "# Plot ROC curve\n",
        "plot_roc_curve(rf_grid, X_test, y_test)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<sklearn.metrics._plot.roc_curve.RocCurveDisplay at 0x1212e7850>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 253
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mTPKjDdz9tCF",
        "outputId": "64056580-db93-4607-cb77-60ff7938f070"
      },
      "source": [
        "# Furthur manual tuning\n",
        "rf_grid = RandomForestClassifier(bootstrap=True, n_estimators=900, max_depth=5, max_features=0.5,\n",
        "                                 min_samples_leaf=15)\n",
        "rf_grid.fit(X_train, y_train)\n",
        "rf_grid.score(X_test, y_test)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.61"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 274
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3PAcV2nt9tCF"
      },
      "source": [
        "rf_new_score = rf_grid.score(X_test, y_test)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "usQxwyd59tCF",
        "outputId": "b4e3dec2-03cb-45cc-f63f-06657fb7cfd9"
      },
      "source": [
        "# Plot ROC curve\n",
        "plot_roc_curve(rf_grid, X_test, y_test)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<sklearn.metrics._plot.roc_curve.RocCurveDisplay at 0x12ce7ad60>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 275
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IRZLGO8d9tCF",
        "outputId": "7477100f-3c75-4422-a82a-66f89b04d7e6"
      },
      "source": [
        "print(classification_report(y_test, rf_grid.predict(X_test)))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.62      0.86      0.72        58\n",
            "           1       0.58      0.26      0.36        42\n",
            "\n",
            "    accuracy                           0.61       100\n",
            "   macro avg       0.60      0.56      0.54       100\n",
            "weighted avg       0.60      0.61      0.57       100\n",
            "\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PEXzWZ189tCF",
        "outputId": "8dcbf26c-15a0-4491-ecaa-d1fc15cebfae"
      },
      "source": [
        "model_scores"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'Logistic Regression': 0.6,\n",
              " 'KNN': 0.56,\n",
              " 'SGD': 0.56,\n",
              " 'LinearSVC': 0.62,\n",
              " 'DecisionTree': 0.57,\n",
              " 'RandomForest': 0.61}"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 293
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "udrUWPh29tCF",
        "outputId": "631cc17b-389a-4d12-c169-45361db3b2f7"
      },
      "source": [
        "# Compare roc Curves\n",
        "fig, ax = plt.subplots(nrows=1, ncols=1, figsize=(10, 7))\n",
        "s = plot_roc_curve(LinearSVC(random_state=42, C=0.1).fit(X_train, y_train), X_test, y_test, ax=ax)\n",
        "\n",
        "k = plot_roc_curve(knn, X_test, y_test, ax=ax)\n",
        "\n",
        "l = plot_roc_curve(LogisticRegression(penalty='l2', intercept_scaling=5.9659219556494824e+16,\n",
        "                                     class_weight='balanced', C=0.00761707407061047, random_state=42).fit(X_train, y_train),\n",
        "                   X_test, y_test, ax=ax)\n",
        "\n",
        "r = plot_roc_curve(rf_grid, X_test, y_test, ax=ax)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 720x504 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PX8SZvYi9tCG",
        "outputId": "f47c15ab-c64b-484e-e4f9-1b6be2b4dea6"
      },
      "source": [
        "# Compare scores after tuning\n",
        "estimators = [\"KNN\",\"Linear SVM\", \"Logistic Regression\", \"Random Forest Classifier\"]\n",
        "new_scores = [knn.score(X_test, y_test), svm_new_score, lr_new_score, rf_grid.score(X_test, y_test)]\n",
        "scores_new_df = pd.DataFrame()\n",
        "scores_new_df['model'] = estimators\n",
        "scores_new_df['new_scores'] = new_scores\n",
        "\n",
        "fig, ax = plt.subplots()\n",
        "scores_new_df.plot(x='model', y='new_scores', kind=\"bar\", rot=0, figsize=(10,6), ax=ax, color='salmon')\n",
        "model_compare.T.plot.bar(rot=0, ax=ax, color='gray', label='old_scores');"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 720x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "kf1nLthP9tCG"
      },
      "source": [
        "Since, we are yet to reach our target accuracy let's try a fit a few different models in the upcoming Experimentation section."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "03JOmAwH9tCG"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}